{"version":3,"sources":["utils/configAzureAd.ts","utils/graphService.ts","contexts/auth.tsx","hooks/useAuth.ts","components/Menu/MenuMain.tsx","assets/sap2.svg","components/Menu/MenuSAP.tsx","components/Menu/MenuSolicitacoes.tsx","components/Layout/useLayout.ts","components/Layout/AppBar/index.tsx","components/Layout/Layout.tsx","components/Home/UserAprovalRequests.tsx","components/Home/UserRequestColumns.ts","services/data/RequestServices.ts","components/Home/UserRequests.tsx","components/Home/UserTodoRequests.tsx","pages/Home.tsx","components/controls/WorkflowResponsableTable.tsx","components/controls/WorkFlowSteps.tsx","pages/Request/components/AS400Table.tsx","components/controls/InputReadText.tsx","pages/Request/components/EmployeeForm.tsx","pages/Request/components/SAPTable.tsx","pages/Request/Request.tsx","components/Table/TableHead.tsx","components/Table/TableToolBar.tsx","components/Table/useTableStyles.ts","components/Table/index.tsx","pages/Requests.tsx","hooks/useRequestTable.ts","assets/LDC_logo.png","pages/SignIn.tsx","components/controlsformik/Form/FormikStepper.tsx","components/controlsformik/CheckBoxAutoComplete.tsx","services/data/SAPRequestServices.ts","components/controlsformik/InputText.tsx","components/controlsformik/FormikControls.tsx","services/data/AS400RequestServices.ts","components/controlsformik/InputSelect.tsx","components/controlsformik/InputEmployee.tsx","components/controlsformik/InputSAPProfiles.tsx","components/controlsformik/InputDatePicker.tsx","components/controlsformik/InputAutoComplete.tsx","components/controlsformik/CheckBoxAS400Access.tsx","pages/RequestStepForm/components/AS400/AS400RequestTable.tsx","pages/RequestStepForm/components/AS400/AS400RequestForm.tsx","pages/RequestStepForm/components/AS400/AS400SubmitForm.tsx","services/data/EmployeeService.ts","pages/RequestStepForm/components/Employee/EmployeeForm.tsx","pages/RequestStepForm/components/ValidationSchemas.tsx","pages/RequestStepForm/AS400/NewAS400RequestForm.tsx","pages/RequestStepForm/components/SAP/SAPRequestTable.tsx","pages/RequestStepForm/components/SAP/SAPRequestForm.tsx","pages/RequestStepForm/components/SAP/SAPSubmitForm.tsx","pages/RequestStepForm/SAP/NewSAPRequestForm.tsx","routes/PrivateRoute.tsx","router.tsx","index.tsx"],"names":["msalConfig","auth","clientId","process","redirectUri","authority","knownAuthorities","postLogoutRedirectUri","cache","cacheLocation","storeAuthStateInCookie","loginRequest","scopes","graph","require","getAuthenticatedClient","accessToken","Client","init","authProvider","done","getUserDetails","a","client","api","select","get","user","getUserPhoto","userId","url","fetch","method","headers","Authorization","AuthContext","createContext","msalInstance","PublicClientApplication","AuthProvider","children","useState","accountInfo","setAccountInfo","getAccessToken","console","log","accounts","getAllAccounts","length","Error","acquireTokenSilent","account","silentResult","acquireTokenPopup","interactiveResult","getMyPhoto","then","response","ok","blob","photoBlob","URL","createObjectURL","result","getUserProfile","useCallback","localStorage","setItem","displayName","mail","userPrincipalName","email","avatar","isAuthenticated","error","loginPopup","prompt","useEffect","Provider","value","signInWithAD","signOut","removeItem","logout","useAuth","context","useContext","useStyles","makeStyles","root","width","maxWidth","nested","paddingLeft","MenuMain","classes","List","component","className","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","color","MenuSAP","React","open","setOpen","onClick","src","sapicon","alt","Collapse","in","timeout","unmountOnExit","disablePadding","MenuSolicitacoes","useLayout","drawerWidth","theme","createStyles","display","title","breakpoints","up","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","search","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","searchIcon","height","pointerEvents","inputRoot","inputInput","cardSection","minHeight","cardContent","cardAvatar","margin","sectionDesktop","sectionMobile","grow","config","accountmenu","desktopid","mobileid","profiletext","accounttext","avataralt","message","count","text","menutext","notification","placeholder","useTheme","openedMixin","closedMixin","Drawer","styled","MuiDrawer","shouldForwardProp","prop","boxSizing","AppBar","MuiAppBar","MenuNavigator","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","newMenu","Card","CardActionArea","CardContent","Avatar","CardActions","Button","size","renderMenu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","onClose","renderMobileMenu","MenuItem","IconButton","Badge","badgeContent","Toolbar","edge","clsx","Typography","variant","noWrap","InputBase","input","inputProps","direction","Divider","Layout","UserAprovalRequests","draftColumns","field","headerName","sortable","openColumns","closedColumns","API_BASE_URL","getCompanyOnlyCollection","json","data","x","map","description","getCompanyBranchCollection","company","filter","branchs","getRoleCollection","getPlataformCollection","getCostCenterCollection","getEmployeeTypeCollection","getEmployeeByNameCollection","name","newdata","employee_id","employee_fullname","employee_email","getManagerCollection","mapeddata","full_name","setEmployeeNameOption","option","setEmployeeHintNameOptions","setEmployeeEmailOption","setEmployeeHintEmailOptions","fetchRequestsByUser","userid","listtype","rows","entry","index","request_id","status","formatEmployeeData","request_by","requested_by_name","request_status","request_date","created_at","request_number","request_observation","employee_role","employee_role_id","employee_role_description","employee_plataform","employee_plataform_id","employee_plataform_description","employee_costcenter","employee_costcenter_id","employee_costcenter_description","request_category","employee_type","employee_type_description","employee_manager","employe_manager_id","employee_manager_name","employee_company","employee_company_id","employee_company_description","employee_branch","employee_branch_id","employee_branch_description","employee","employee_userid_login","employee_login","employee_userid_as400","employee_as400_id","employee_as400_id_description","request_type","getCurrentResponsable","manager","workflow","license","users","fullname","join","ci","cioilseeds","lider","lider_backup","executors","fetchRequestsById","obj","sap","saporderprofile","service_id","service_description","environment","user_id","job_position","profile_name","profile_description","is_profile_temporary","profile_expires_at","profile_valide_at","has_conflict","restricted_access","responsable","sapuser","saporderuser","as400","as400orderprofile","is_new_user","system","routine","access_type","restricted_acces","limited_access","company_id","branch_id","branch_name","region_id","region_name","access","access_observation","as400user","as400orderuser","copy_user_id_status","copy_user_id","saptable","as400table","fetchRequestList","fetchRequestWorkFlow","UserRequests","report","columns","setRows","isCancelled","setIsCancelled","history","useHistory","fetchData","style","pageSize","rowsPerPageOptions","checkboxSelection","onCellDoubleClick","params","getValue","push","UserTodoRequests","Home","setValue","isLoading","setIsLoading","draft","closed","aproving","executing","userRequestCount","setUserRequestCount","userCount","TabPanel","props","other","role","hidden","Box","p","Paper","square","Tabs","onChange","newValue","indicatorColor","textColor","Tab","icon","label","disabled","WorkflowResponsableTable","TableContainer","Table","sx","minWidth","TableHead","TableRow","TableCell","align","TableBody","responsables","row","border","group","doingCount","doneCount","doneBy","WorkFlowSteps","initialData","setInitialData","steps","activeStep","setActiveStep","Set","skipped","setSkipped","forEach","element","isRequired","pos","findIndex","isInitial","isStepSkipped","step","has","Stepper","marginTop","marginBottom","alignContent","stepProps","labelProps","statusObservation","optional","completed","isConcluded","Step","StepLabel","mt","mb","flexDirection","pt","flex","prevActiveStep","mr","newSkipped","values","delete","AS400Table","InputReadText","fullWidth","multiline","maxRows","TextField","defaultValue","InputProps","readOnly","EmployeeForm","Grid","container","item","xs","toLocaleString","SAPTable","Request","useParams","m","EnhancedTableHead","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","headCells","Checkbox","indeterminate","checked","headCell","numeric","sortDirection","TableSortLabel","active","property","visuallyHidden","useToolbarStyles","paddingRight","highlight","mode","secondary","main","lighten","light","dark","EnhancedTableToolbar","Tooltip","paper","table","clip","overflow","top","descendingComparator","b","getComparator","stableSort","array","comparator","stabilizedThis","el","sort","EnhancedTable","headerData","tableType","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","handleClick","selectedIndex","indexOf","newSelected","concat","slice","handleOpenRequestClick","requestId","emptyRows","Math","min","target","newSelecteds","n","isItemSelected","labelId","line","hover","tabIndex","stopPropagation","scope","tableRowByStatus","tableRowByNumber","colSpan","TablePagination","onPageChange","newPage","onRowsPerPageChange","parseInt","FormControlLabel","control","Switch","Requests","requests","setRequests","orderby","SignIn","getItem","replace","mainContent","thisContent","logo","FormikStep","FormikStepper","childrenArray","toArray","setStep","setCompleted","currentChild","isLastStep","validationSchema","onSubmit","helpers","s","isSubmitting","autoComplete","alternativeLabel","child","startIcon","CircularProgress","type","endIcon","fontSize","checkedIcon","EUserTypes","EServiceIds","getSAPEnvironmentCollection","getSAPUserTypeCollection","AddProfile","New","Existent","Blocked","UnBlockUser","getSAPServiceTypeCollection","ExcludeProfile","BlockUser","getSAPProfileTypeCollection","getSAPUserIdCollection","user_user_id","user_user_name","getJobPositionCollection","manager_id","cost_center_id","getSAPTemporyFieldCollection","getSAProfileCollection","param","take","InputText","labelWithId","otherProps","useField","mata","configTextField","touched","helperText","FormikControls","InputSelect","optionsPrimaryKey","onChangeCleanFieldName","editMode","defaultOptions","getOptions","useFormikContext","setFieldValue","setTouched","inputValue","setInputValue","options","setOptions","loading","Autocomplete","onOpen","onBlur","isOptionEqualToValue","toUpperCase","getOptionLabel","onInputChange","newInputValue","renderInput","endAdornment","InputEmployee","setLabelOption","setLabelHintOptions","getResults","throttle","request","callback","results","newOptions","filterOptions","filterSelectedOptions","renderOption","AccountCircle","InputSAPProfiles","placeHolder","parentValue","addToTable","handleProfileChange","disabledOptions","sapRequestServices","multiple","getOptionDisabled","find","InputDatePicker","otherprops","configError","InputLabelProps","shrink","InputAutoComplete","CheckBoxAutoComplete","disableCloseOnSelect","CheckBoxAS400Access","inc","exc","con","handleChange","evt","FormControl","FormGroup","labelPlacement","getAS400ServiceTypeCollection","CopyUser","getAS400JobPositionCollection","profiles","profile","getAS400JobPosition","getAS400YesNoCollection","getAS400UserTypeCollection","getAS400UsersByNameCollection","getAS400EnvironmentCollection","getAS400SystemCollection","getAS400RoutineCollection","routines","routine_id","system_id","trim","getBranchOnlyCollection","branch","getRegionCollection","regions","valueGetter","renderCell","CustomToolbar","selectionModel","removeProfile","updateProfile","addProfiles","checkFieldNotNull","ids","toString","region","window","alert","undefined","as400RequestServices","handleAddClick","handleDeleteClick","AS400RequestTable","setSelectionModel","onCellClick","colDef","onSelectionModelChange","newSelectionModel","components","componentsProps","AS400RequestForm","setAccess","include","exclude","change","handleAddJobPositionClick","service_type","security_type","security_company","security_branchs","security_regions","security_text","ServiceId","user_type","is_job_position","new_table","addroutines","uniqueData","Array","from","reduce","set","Map","fixId","Alert","forwardRef","ref","elevation","AS400SubmitForm","requested_by_id","requested_by_email","request_copy_list","employee_profile_edition_rule","employee_sap_id","employee_userid_sap","employee_userid_sap_status","employee_userid_sap_expiration_date","employee_userid_as400_description","updateEmployee","reused_user_id_license","observation","user_licence","user_id_source","CreateUser","company_name","createJson","Stack","severity","isError","getEmployeeValues","employee_without_id","is_contingency","has_sap_job_positions","employee_sap_job_positions","plataform","costCenter","as400User","user_name","employee_sap_id_status","employee_sap_id_expiration_date","jobPositions","setValues","canEditEmployeeFields","rule","employeeservice","newValues","updateForm","requestServices","canEditManagerField","select_object","Yup","default","ensure","test_select_object","msg","test","val","default_object_shape","INITIAL_EMPLOYEE_FORM_STATE","Date","request_opentab","INITIAL_SAP_FORM_STATE","is_temporary","profile_type","profile_start_date","profile_end_date","profiles_table","INITIAL_AS400_FORM_STATE","EMPLOYEE_VALIDATION","required","nullable","SAP_VALIDATION","when","notRequired","AS400_VALIDATION","EMPLOYEE_FORM_VALIDATION","SAP_FORM_VALIDATION","AS400_FORM_VALIDATION","sleep","time","Promise","acc","setTimeout","NewAS400RequestForm","initialValues","actions","requestOptions","body","JSON","stringify","setStatus","setSubmitting","DataTable","SAPRequestForm","isValid","usersap","addprofiles","profileToRemove","new_profiles_table","new_profiles","SAPSubmitForm","is_job_postion","NewSAPRequestForm","PrivateRoute","Component","location","rest","render","pathname","state","createTheme","Router","StyledEngineProvider","injectFirst","ThemeProvider","path","exact","ReactDOM","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.06f678f7.chunk.js","sourcesContent":["import { Configuration } from \"@azure/msal-browser\";\n// Config object to be passed to Msal on creation\nexport const msalConfig: Configuration = {\n  auth: {\n    clientId: process.env.REACT_APP_CLIENT_ID as string,\n    redirectUri: process.env.REACT_APP_REDIRECT_URL,\n    authority: `https://${process.env.REACT_APP_KNOWNAUTHORITIES}/${process.env.REACT_APP_TENANT_ID}`,\n    knownAuthorities: [process.env.REACT_APP_KNOWNAUTHORITIES as string],\n    postLogoutRedirectUri: \"/\",\n  },\n  cache: {\n    cacheLocation: \"localStorage\",\n    storeAuthStateInCookie: false,\n  },\n};\n\nexport const loginRequest = {\n  scopes: [\"user.read\"],\n};\n","// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst graph = require(\"@microsoft/microsoft-graph-client\");\n\nfunction getAuthenticatedClient(accessToken: string) {\n  const client = graph.Client.init({\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    authProvider: (done: any) => {\n      done(null, accessToken);\n    },\n  });\n\n  return client;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport async function getUserDetails(accessToken: string): Promise<any> {\n  const client = getAuthenticatedClient(accessToken);\n\n  const user = await client\n    .api(\"/me\")\n    .select(\"displayName,mail,userPrincipalName,photo\")\n    .get();\n\n  return user;\n}\n\nexport async function getUserPhoto(\n  userId: string,\n  accessToken: string\n): Promise<Response> {\n  const url = `https://graph.microsoft.com/v1.0/${userId}/photo/$value`;\n\n  return fetch(url, {\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${accessToken}`,\n      \"Content-Type\": \"application/json\",\n    },\n  });\n}\n","/* eslint-disable consistent-return */\n/* eslint-disable func-names */\nimport { PublicClientApplication, Configuration } from \"@azure/msal-browser\";\nimport React, {\n  createContext,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useState,\n} from \"react\";\n\nimport { msalConfig, loginRequest } from \"../utils/configAzureAd\";\nimport { getUserDetails, getUserPhoto } from \"../utils/graphService\";\n\ntype accountType = {\n  isAuthenticated: boolean;\n  user: {\n    displayName: string;\n    email: string;\n    avatar: string;\n  };\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error: any;\n};\n\ntype AuthContextType = {\n  signInWithAD: () => Promise<void>;\n  signOut: () => void;\n  accountInfo: accountType | undefined;\n};\n\ntype AuthContextProviderProps = {\n  children: ReactNode;\n};\n\nexport const AuthContext = createContext({} as AuthContextType);\n\nconst msalInstance = new PublicClientApplication(msalConfig as Configuration);\n\nexport function AuthProvider({\n  children,\n}: AuthContextProviderProps): JSX.Element {\n  const [accountInfo, setAccountInfo] = useState<accountType>();\n\n  const getAccessToken = async (scopes: string[]) => {\n    try {\n      console.log(\"Get access tokens\");\n      const accounts = msalInstance.getAllAccounts();\n\n      if (accounts.length <= 0) throw new Error(\"Login required\");\n      const silentResult = await msalInstance.acquireTokenSilent({\n        scopes,\n        account: accounts[0],\n      });\n\n      return silentResult.accessToken;\n    } catch (err) {\n      if (err) {\n        const interactiveResult = await msalInstance.acquireTokenPopup({\n          scopes,\n        });\n\n        return interactiveResult.accessToken;\n      }\n      throw err;\n    }\n  };\n  async function getMyPhoto(accessToken: string) {\n    const result = await getUserPhoto(\"me\", accessToken)\n      .then(function (response) {\n        if (response.ok) {\n          return response.blob();\n        }\n      })\n      .then(function (photoBlob) {\n        if (photoBlob) {\n          return URL.createObjectURL(photoBlob);\n        }\n      });\n    return result;\n  }\n\n  const getUserProfile = useCallback(async () => {\n    try {\n      console.log(\"Pegando o access token...\");\n      const accessToken = await getAccessToken(loginRequest.scopes);\n      console.log(\"Pegou o access token...\");\n      if (accessToken) {\n        const user = await getUserDetails(accessToken);\n        console.log(user);\n        localStorage.setItem(\"@AzureAd:accessToken\", accessToken);\n        console.log(\"Setting account...\");\n        setAccountInfo({\n          isAuthenticated: true,\n          user: {\n            displayName: user.displayName,\n            email: user.mail || user.userPrincipalName,\n            avatar: (await getMyPhoto(accessToken)) as string,\n          },\n          error: null,\n        });\n      }\n    } catch (err) {\n      setAccountInfo({\n        isAuthenticated: false,\n        user: { displayName: \"\", email: \"\", avatar: \"\" },\n        error: err,\n      });\n    }\n  }, []);\n\n  async function signInWithAD() {\n    try {\n      console.log(msalConfig.auth.redirectUri);\n      await msalInstance.loginPopup({\n        scopes: loginRequest.scopes,\n        prompt: \"select_account\",\n      });\n      console.log(\"Após o popup\");\n      await getUserProfile();\n      console.log(\"peguei o perfil...retornando...\");\n    } catch (err) {\n      setAccountInfo({\n        isAuthenticated: false,\n        user: { displayName: \"\", email: \"\", avatar: \"\" },\n        error: err,\n      });\n    }\n  }\n\n  const signOut = () => {\n    localStorage.removeItem(\"@AzureAd:accessToken\");\n    msalInstance.logout();\n  };\n\n  useEffect(() => {\n    const accounts = msalInstance.getAllAccounts();\n    console.log(\"No use effect do context\");\n    if (accounts && accounts.length > 0) {\n      getUserProfile();\n      console.log(\"Pegou o user profile no useEffect\");\n    }\n  }, [getUserProfile]);\n\n  return (\n    <AuthContext.Provider value={{ signInWithAD, signOut, accountInfo }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n","import { useContext } from \"react\";\n\nimport { AuthContext } from \"../contexts/auth\";\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n\n  return context;\n}\n","import AddCircleIcon from \"@mui/icons-material/AddCircle\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n  },\n  nested: {\n    paddingLeft: 16,\n  },\n}));\n\nexport default function MenuMain(): JSX.Element {\n  const classes = useStyles();\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n    >\n      <ListItem button key=\"Home\" component={Link} to=\"/\">\n        <ListItemIcon>\n          <HomeIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Home\" />\n      </ListItem>\n\n      <ListItem button key=\"Nova\" component={Link} to=\"/sap/request\">\n        <ListItemIcon>\n          <AddCircleIcon color=\"primary\" />\n        </ListItemIcon>\n        <ListItemText primary=\"SAP\" />\n      </ListItem>\n\n      <ListItem button key=\"Nova 2\" component={Link} to=\"/as400/request\">\n        <ListItemIcon>\n          <AddCircleIcon color=\"primary\" />\n        </ListItemIcon>\n        <ListItemText primary=\"AS400\" />\n      </ListItem>\n    </List>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/sap2.bc41474a.svg\";","import ArtTrackIcon from \"@mui/icons-material/ArtTrack\";\nimport ControlCameraIcon from \"@mui/icons-material/ControlCamera\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport FormatListNumberedIcon from \"@mui/icons-material/FormatListNumbered\";\nimport { List, ListItem, ListItemText, Collapse } from \"@mui/material\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport sapicon from \"../../assets/sap2.svg\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n  },\n  nested: {\n    paddingLeft: 16,\n  },\n}));\n\nexport default function MenuSAP(): JSX.Element {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n    >\n      <ListItem component={Link} to=\"/requests/ordered/ci\">\n        <ListItemIcon>\n          <ControlCameraIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Controles Internos\" />\n      </ListItem>\n\n      <ListItem button onClick={handleClick}>\n        <ListItemIcon color=\"primary\">\n          <span>\n            <img src={sapicon} alt=\"Menu SAP\" />\n          </span>\n        </ListItemIcon>\n        <ListItemText primary=\"\" />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          <ListItem button className={classes.nested}>\n            <ListItemIcon>\n              <FormatListNumberedIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Em análise\" />\n          </ListItem>\n          <ListItem button className={classes.nested}>\n            <ListItemIcon>\n              <ArtTrackIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Em Execução\" />\n          </ListItem>\n          <ListItem button className={classes.nested}>\n            <ListItemIcon>\n              <ArtTrackIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Todas\" />\n          </ListItem>\n        </List>\n      </Collapse>\n    </List>\n  );\n}\n","import ArtTrackIcon from \"@mui/icons-material/ArtTrack\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport FolderOpenIcon from \"@mui/icons-material/FolderOpen\";\nimport FormatListNumberedIcon from \"@mui/icons-material/FormatListNumbered\";\nimport { List, ListItem, ListItemText, Collapse } from \"@mui/material\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n  },\n  nested: {\n    paddingLeft: 16,\n  },\n}));\n\nexport default function MenuSolicitacoes(): JSX.Element {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n    >\n      <ListItem button onClick={handleClick}>\n        <ListItemIcon>\n          <FolderOpenIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Solicitações\" />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          <ListItem\n            button\n            className={classes.nested}\n            component={Link}\n            to=\"/requests/ordered/number\"\n          >\n            <ListItemIcon>\n              <FormatListNumberedIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Número\" />\n          </ListItem>\n          <ListItem\n            button\n            className={classes.nested}\n            component={Link}\n            to=\"/requests/ordered/status\"\n          >\n            <ListItemIcon>\n              <ArtTrackIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Status\" />\n          </ListItem>\n        </List>\n      </Collapse>\n    </List>\n  );\n}\n","import { alpha, ClassNameMap, Theme, useTheme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\ntype AppConfigType = {\n  accountmenu: {\n    desktopid: string;\n    mobileid: string;\n    profiletext: string;\n    accounttext: string;\n    avatar?: string;\n    avataralt: string;\n  };\n  message: {\n    count: number;\n    text: string;\n    menutext: string;\n  };\n  notification: {\n    count: number;\n    text: string;\n    menutext: string;\n  };\n  search: {\n    placeholder: string;\n  };\n};\n\nexport function useLayout(): {\n  config: AppConfigType;\n  classes: ClassNameMap;\n  drawerWidth: number;\n  theme: Theme;\n} {\n  const drawerWidth = 230;\n  const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n      root: {\n        display: \"flex\",\n      },\n      title: {\n        display: \"none\",\n        [theme.breakpoints.up(\"sm\")]: {\n          display: \"block\",\n        },\n        paddingRight: \"20px\",\n      },\n      appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n      },\n      appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.enteringScreen,\n        }),\n      },\n      menuButton: {\n        marginRight: 36,\n      },\n      hide: {\n        display: \"none\",\n      },\n      drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: \"nowrap\",\n      },\n      drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.enteringScreen,\n        }),\n      },\n      drawerClose: {\n        transition: theme.transitions.create(\"width\", {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: \"hidden\",\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up(\"sm\")]: {\n          width: theme.spacing(9) + 1,\n        },\n      },\n      toolbar: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n      },\n      content: {\n        flexGrow: 1,\n        padding: theme.spacing(0.3),\n      },\n      search: {\n        position: \"relative\",\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\n        \"&:hover\": {\n          backgroundColor: alpha(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: \"100%\",\n        [theme.breakpoints.up(\"sm\")]: {\n          marginLeft: theme.spacing(3),\n          width: \"auto\",\n        },\n      },\n      searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      },\n      inputRoot: {\n        color: \"inherit\",\n      },\n      inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n        transition: theme.transitions.create(\"width\"),\n        width: \"100%\",\n        [theme.breakpoints.up(\"md\")]: {\n          width: \"20ch\",\n        },\n      },\n      cardSection: {\n        minHeight: 140,\n        width: \"100%\",\n      },\n      cardContent: {\n        display: \"flex\",\n        alignItems: \"center\",\n      },\n      cardAvatar: {\n        display: \"block\",\n        width: 100,\n        height: 100,\n        margin: 20,\n      },\n      sectionDesktop: {\n        display: \"none\",\n        [theme.breakpoints.up(\"md\")]: {\n          display: \"flex\",\n        },\n      },\n      sectionMobile: {\n        display: \"flex\",\n        [theme.breakpoints.up(\"md\")]: {\n          display: \"none\",\n        },\n      },\n      grow: {\n        flexGrow: 1,\n      },\n    })\n  );\n\n  const config: AppConfigType = {\n    accountmenu: {\n      desktopid: \"account-menu\",\n      mobileid: \"account-menu-mobile\",\n      profiletext: \"Perfil\",\n      accounttext: \"Conta\",\n      avatar: \"https://material-ui.com/static/images/avatar/1.jpg\",\n      avataralt: \"Fake user\",\n    },\n    message: {\n      count: 4,\n      text: `show ${2} new mails`,\n      menutext: \"Mensagens\",\n    },\n    notification: {\n      count: 6,\n      text: `show ${4} new alerts`,\n      menutext: \"Notificações\",\n    },\n    search: {\n      placeholder: \"Pesquisar...\",\n    },\n  };\n  const theme = useTheme();\n  const classes = useStyles();\n  return { config, classes, drawerWidth, theme };\n}\n","import AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport MailIcon from \"@mui/icons-material/Mail\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport {\n  Toolbar,\n  Typography,\n  Divider,\n  Avatar,\n  Menu,\n  MenuItem,\n  Badge,\n  InputBase,\n  Card,\n  CardActionArea,\n  CardContent,\n  CardActions,\n  Button,\n} from \"@mui/material\";\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from \"@mui/material/AppBar\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { styled, Theme, CSSObject } from \"@mui/material/styles\";\nimport clsx from \"clsx\";\nimport React, { Fragment } from \"react\";\n\nimport { useAuth } from \"../../../hooks/useAuth\";\nimport MenuMain from \"../../Menu/MenuMain\";\nimport MenuSAP from \"../../Menu/MenuSAP\";\nimport MenuSolicitacoes from \"../../Menu/MenuSolicitacoes\";\nimport { useLayout } from \"../useLayout\";\n\nconst drawerWidth = 230;\nconst openedMixin = (theme: Theme): CSSObject => ({\n  width: drawerWidth,\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen,\n  }),\n  overflowX: \"hidden\",\n});\n\nconst closedMixin = (theme: Theme): CSSObject => ({\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  overflowX: \"hidden\",\n  width: `calc(${theme.spacing(7)} + 1px)`,\n  [theme.breakpoints.up(\"sm\")]: {\n    width: `calc(${theme.spacing(9)} + 1px)`,\n  },\n});\n\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  whiteSpace: \"nowrap\",\n  boxSizing: \"border-box\",\n  ...(open && {\n    ...openedMixin(theme),\n    \"& .MuiDrawer-paper\": openedMixin(theme),\n  }),\n  ...(!open && {\n    ...closedMixin(theme),\n    \"& .MuiDrawer-paper\": closedMixin(theme),\n  }),\n}));\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ninterface AppBarProps extends MuiAppBarProps {\n  open?: boolean;\n}\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})<AppBarProps>(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create([\"width\", \"margin\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nexport default function MenuNavigator(): JSX.Element {\n  const { accountInfo, signOut } = useAuth();\n  const [open, setOpen] = React.useState(false);\n  const { config, classes, theme } = useLayout();\n\n  const handleDrawerOpen = () => {\n    console.log(\"handle open\");\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    console.log(\"handle close\");\n    setOpen(false);\n  };\n\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =\n    React.useState<null | HTMLElement>(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const newMenu = (\n    <Card className={classes.cardSection}>\n      <CardActionArea>\n        <CardContent>\n          <Avatar\n            alt={accountInfo?.user.displayName}\n            src={accountInfo?.user.avatar}\n            className={classes.cardAvatar}\n          />\n          <div>\n            <div>{accountInfo?.user.displayName}</div>\n            <div>{accountInfo?.user.email}</div>\n          </div>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" onClick={signOut}>\n          Sign Out\n        </Button>\n        <Button size=\"small\" color=\"primary\" onClick={handleMenuClose}>\n          Fechar\n        </Button>\n      </CardActions>\n    </Card>\n  );\n\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={config.accountmenu.desktopid}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      {newMenu}\n    </Menu>\n  );\n\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={config.accountmenu.mobileid}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton\n          aria-label={config.message.text}\n          color=\"inherit\"\n          size=\"large\"\n        >\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>{config.message.menutext}</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton\n          aria-label={config.notification.text}\n          color=\"inherit\"\n          size=\"large\"\n        >\n          <Badge badgeContent={config.notification.count} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>{config.notification.menutext}</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls={config.accountmenu.desktopid}\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n          size=\"large\"\n        />\n        <AccountCircle />\n        <p>{config.accountmenu.profiletext}</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar position=\"fixed\" open={open}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n            size=\"large\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            SAS On Cloud\n          </Typography>\n          <div className={classes.grow} />\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder={config.search.placeholder}\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton\n              aria-label={config.message.text}\n              color=\"inherit\"\n              size=\"large\"\n            >\n              <Badge badgeContent={config.message.count} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              aria-label={config.notification.text}\n              color=\"inherit\"\n              size=\"large\"\n            >\n              <Badge badgeContent={config.notification.count} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={config.accountmenu.desktopid}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n              size=\"large\"\n            >\n              <Avatar\n                alt={accountInfo?.user.displayName}\n                src={accountInfo?.user.avatar}\n              />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={config.accountmenu.mobileid}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n              size=\"large\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n\n      <Drawer variant=\"permanent\" open={open}>\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose} size=\"large\">\n            {theme.direction === \"rtl\" ? (\n              <ChevronRightIcon />\n            ) : (\n              <ChevronLeftIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <MenuMain />\n        <Divider />\n        <MenuSolicitacoes />\n        <MenuSAP />\n      </Drawer>\n    </>\n  );\n}\n","import React, { ReactNode } from \"react\";\n\nimport MenuNavigator from \"./AppBar\";\nimport { useLayout } from \"./useLayout\";\n\ntype LayoutProps = {\n  children: ReactNode;\n};\n\nexport default function Layout({ children }: LayoutProps): JSX.Element {\n  const { classes } = useLayout();\n\n  return (\n    <div className={classes.root}>\n      <MenuNavigator />\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {children}\n      </main>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function UserAprovalRequests(): JSX.Element {\n  return <div>Para aprovar</div>;\n}\n","import { GridColDef } from \"@mui/x-data-grid\";\n\nconst draftColumns: GridColDef[] = [\n  {\n    field: \"id\",\n    headerName: \"ID\",\n    width: 100,\n    hide: true,\n  },\n  {\n    field: \"status\",\n    headerName: \"Status\",\n    width: 100,\n  },\n  {\n    field: \"employee_fullname\",\n    headerName: \"Colaborador\",\n    width: 300,\n  },\n\n  {\n    field: \"employee_email\",\n    headerName: \"Email\",\n    width: 200,\n  },\n  {\n    field: \"employee_type_description\",\n    headerName: \"Tipo colaborador\",\n    sortable: true,\n    width: 120,\n  },\n  {\n    field: \"request_type\",\n    headerName: \"Tipo Chamado\",\n    sortable: true,\n    width: 150,\n  },\n  {\n    field: \"updated_at\",\n    headerName: \"atualizado em\",\n    sortable: true,\n    width: 200,\n  },\n];\n\nconst openColumns: GridColDef[] = [\n  {\n    field: \"id\",\n    headerName: \"ID\",\n    width: 100,\n    hide: true,\n  },\n  {\n    field: \"status\",\n    headerName: \"Status\",\n    width: 100,\n  },\n  {\n    field: \"request_number\",\n    headerName: \"Número\",\n    width: 180,\n  },\n  {\n    field: \"employee_fullname\",\n    headerName: \"Colaborador\",\n    width: 300,\n  },\n  {\n    field: \"employee_type_description\",\n    headerName: \"Tipo colaborador\",\n    sortable: true,\n    width: 120,\n  },\n  {\n    field: \"request_type\",\n    headerName: \"Tipo Chamado\",\n    sortable: true,\n    width: 150,\n  },\n  {\n    field: \"updated_at\",\n    headerName: \"atualizado em\",\n    sortable: true,\n    width: 200,\n  },\n];\n\nconst closedColumns: GridColDef[] = [\n  {\n    field: \"id\",\n    headerName: \"ID\",\n    width: 100,\n    hide: true,\n  },\n  {\n    field: \"request_status\",\n    headerName: \"Status\",\n    width: 100,\n  },\n  {\n    field: \"request_number\",\n    headerName: \"Número\",\n    width: 180,\n  },\n  {\n    field: \"employee_fullname\",\n    headerName: \"Colaborador\",\n    width: 300,\n  },\n  {\n    field: \"employee_type_description\",\n    headerName: \"Tipo colaborador\",\n    sortable: true,\n    width: 120,\n  },\n  {\n    field: \"request_type\",\n    headerName: \"Tipo Chamado\",\n    sortable: true,\n    width: 150,\n  },\n  {\n    field: \"updated_at\",\n    headerName: \"atualizado em\",\n    sortable: true,\n    width: 200,\n  },\n];\n\nexport { draftColumns, openColumns, closedColumns };\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport {\n  IData,\n  ICompany,\n  IEmployeeData,\n} from \"../../pages/RequestStepForm/components/Interface\";\n\nconst API_BASE_URL = process.env.REACT_APP_API_SAS_URL;\n\nexport const getCompanyCollection = async (\n  id?: string\n): Promise<ICompany[]> => {\n  const url = `${API_BASE_URL}/employees/companies`;\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n};\n\nexport const getCompanyOnlyCollection = async (\n  id?: string\n): Promise<IData[]> => {\n  const url = `${API_BASE_URL}/employees/companies`;\n  const response = await fetch(url);\n  const data = await response.json();\n  const x = data.map((value: any) => {\n    return { id: value.id, description: value.description };\n  });\n\n  return x;\n};\n\nexport const getCompanyBranchCollection = async (\n  id?: string\n): Promise<IData[]> => {\n  const url = `${API_BASE_URL}/employees/companies`;\n  const response = await fetch(url);\n  const data = await response.json();\n\n  const company = data.filter((value: any) => value.id === id);\n  if (company[0]) return company[0].branchs;\n  return [{ id: \"\", description: \"\" }];\n};\n\nexport const getRoleCollection = async (id?: string): Promise<IData[]> => {\n  const url = `${API_BASE_URL}/employees/roles?fieldoptions=S&orderby=description`;\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n};\n\nexport const getPlataformCollection = async (id?: string): Promise<IData[]> => {\n  const url = `${API_BASE_URL}/employees/plataforms?fieldoptions=S&orderby=description`;\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n};\n\nexport const getCostCenterCollection = async (\n  id?: string\n): Promise<IData[]> => {\n  const url = `${API_BASE_URL}/employees/costcenters?fieldoptions=S&orderby=description`;\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n};\n\nexport const getEmployeeTypeCollection = async (\n  id?: string\n): Promise<IData[]> => {\n  const data = [\n    {\n      id: \"Funcionário\",\n      description: \"Funcionário\",\n    },\n    {\n      id: \"Terceiro\",\n      description: \"Terceiro\",\n    },\n    {\n      id: \"Robô RCA\",\n      description: \"Robô RCA\",\n    },\n    {\n      id: \"Outros\",\n      description: \"Outros\",\n    },\n  ];\n  return data;\n};\n\nexport const getEmployeeByNameCollection = async (\n  name: string\n): Promise<IEmployeeData[]> => {\n  const url = `${API_BASE_URL}/employees/name/${name}`;\n  const response = await fetch(url);\n  const data = await response.json();\n  const newdata = data.map((value: any) => {\n    return {\n      id: value.employee_id,\n      description: value.employee_fullname,\n      email: value.employee_email,\n    };\n  });\n\n  return newdata;\n};\n\nexport const getManagerCollection = async (id?: string): Promise<IData[]> => {\n  const url = `${API_BASE_URL}/employees/managers?fieldoptions=S&orderby=full_name`;\n  const response = await fetch(url);\n  const data = await response.json();\n  const mapeddata = data.map((value: any) => {\n    return { id: value.id, description: value.full_name };\n  });\n  return mapeddata;\n};\n\nexport const setEmployeeNameOption = (option: IEmployeeData): string => {\n  return option ? option.description : \"\";\n};\n\nexport const setEmployeeHintNameOptions = (option: IEmployeeData): string => {\n  if (option) return option ? `${option.description} ( ${option.email})` : \"\";\n  return \"\";\n};\n\nexport const setEmployeeEmailOption = (option: IEmployeeData): string => {\n  if (option) return option.email ? option.email : \"\";\n  return \"\";\n};\n\nexport const setEmployeeHintEmailOptions = (option: IEmployeeData): string => {\n  if (option) return option ? `${option.email} ( ${option.description})` : \"\";\n  return \"\";\n};\n\nexport const getEmployeeById = async (id: string): Promise<IEmployeeData[]> => {\n  const url = `${API_BASE_URL}/employees/${id}`;\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n};\n\nexport const getServicesCollection = async (id?: string): Promise<IData[]> => {\n  const data = [\n    {\n      id: \"SAP\",\n      description: \"SAP\",\n    },\n    {\n      id: \"AS400\",\n      description: \"AS400\",\n    },\n    {\n      id: \"Desligamento\",\n      description: \"Desligamento\",\n    },\n    {\n      id: \"Outros\",\n      description: \"Outros\",\n    },\n  ];\n  return data;\n};\n\nexport async function fetchRequests(): Promise<any> {\n  const data = await (\n    await fetch(`${process.env.REACT_APP_API_SAS_URL}/requests`)\n  ).json();\n\n  const rows = data.map((entry: any) => {\n    return {\n      ...entry,\n      id: entry.request_id,\n    };\n  });\n\n  return rows;\n}\n\nexport async function fetchRequestsByUser(\n  userid: string,\n  listtype: string\n): Promise<any> {\n  const data = await (\n    await fetch(\n      `${process.env.REACT_APP_API_SAS_URL}/requests/user/${userid}/${listtype}`\n    )\n  ).json();\n\n  const rows = data.map((entry: any, index: any) => {\n    return {\n      ...entry,\n      id: entry.request_id,\n      status: entry.status.status,\n    };\n  });\n\n  return rows;\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function formatEmployeeData(data: any): any {\n  return {\n    id: data.request_id,\n    request_by: data.requested_by_name,\n    request_status: data.status.status,\n    request_date: data.created_at,\n    request_number: data.request_number,\n    request_observation: data.request_observation,\n    employee_role: {\n      id: data.employee_role_id,\n      description: data.employee_role_description,\n    },\n    employee_plataform: {\n      id: data.employee_plataform_id,\n      description: data.employee_plataform_description,\n    },\n    employee_costcenter: {\n      id: data.employee_costcenter_id,\n      description: data.employee_costcenter_description,\n    },\n    request_category: { id: \"\", description: \"\" },\n    employee_type: {\n      id: data.employee_type,\n      description: data.employee_type_description,\n    },\n    employee_manager: {\n      id: data.employe_manager_id,\n      description: data.employee_manager_name,\n    },\n    employee_company: {\n      id: data.employee_company_id,\n      description: data.employee_company_description,\n    },\n    employee_branch: {\n      id: data.employee_branch_id,\n      description: data.employee_branch_description,\n    },\n    employee: {\n      id: data.employee_id,\n      description: data.employee_fullname,\n      email: data.employee_email,\n    },\n    employee_userid_login: data.employee_login,\n    employee_userid_as400: {\n      id: data.employee_as400_id,\n      description: data.employee_as400_id_description,\n    },\n    request_type: data.request_type,\n  };\n}\n\nfunction getCurrentResponsable(manager: string, value: any): string {\n  const status = value.workflow ? value.workflow.status.id : -1;\n\n  if (status !== -1) {\n    console.log(\"\");\n    if (status === 0) return manager;\n    if (status === 1)\n      return value.license.users.map((user: any) => user.fullname).join(\" / \");\n    if (status === 2)\n      return value.ci.users.map((user: any) => user.fullname).join(\" / \");\n    if (status === 3)\n      return value.cioilseeds.users\n        .map((user: any) => user.fullname)\n        .join(\" / \");\n    if (status === 4)\n      return `${value.lider.fullname} / ${value.lider_backup.fullname}`;\n    if (status === 5) return \"N.A\";\n    if (status === 6)\n      return value.executors.users.map((user: any) => user.fullname);\n  }\n\n  return \"N.A\";\n}\n\nexport async function fetchRequestsById(id: string): Promise<any> {\n  const data = await (\n    await fetch(`${process.env.REACT_APP_API_SAS_URL}/requests/${id}`)\n  ).json();\n\n  const obj = formatEmployeeData(data);\n\n  const sap = data.saporderprofile\n    ? data.saporderprofile.map((value: any) => {\n        return {\n          id: value.id,\n          service_id: value.service_id,\n          service_description: value.service_description,\n          environment: value.environment,\n          user_id: value.user_id,\n          job_position:\n            value.job_position === \"\" ? \"Outros\" : value.job_position,\n          profile_name: value.profile_name,\n          profile_description: value.profile_description,\n          is_profile_temporary: value.is_profile_temporary,\n          profile_expires_at: value.profile_expires_at,\n          profile_valide_at: value.profile_valide_at,\n          has_conflict: value.has_conflict,\n          restricted_access: value.restricted_access,\n          status: value.workflow ? value.workflow.status.status : \"\",\n          responsable: getCurrentResponsable(data.employee_manager_name, value),\n        };\n      })\n    : null;\n\n  const sapuser = data.saporderuser\n    ? data.saporderuser.map((value: any) => {\n        return {\n          id: value.id,\n          service_id: value.service_id,\n          service_description: value.service_description,\n          environment: value.environment,\n          user_id: value.user_id,\n          job_position: \"\",\n          profile_name: \"\",\n          profile_description: \"\",\n          is_profile_temporary: \"\",\n          profile_expires_at: \"\",\n          profile_valide_at: \"\",\n          has_conflict: false,\n          restricted_access: false,\n          status: value.workflow ? value.workflow.status.status : \"\",\n          responsable: getCurrentResponsable(data.employee_manager_name, value),\n        };\n      })\n    : null;\n\n  const as400 = data.as400orderprofile\n    ? data.as400orderprofile.map((value: any) => {\n        return {\n          id: value.id,\n          service_id: value.service_id,\n          service_description: value.service_description,\n          environment: value.environment,\n          is_new_user: value.is_new_user,\n          user_id: value.user_id,\n          system: value.system,\n          routine: value.routine,\n          access_type: value.access_type,\n          restricted_access: value.restricted_acces,\n          limited_access: value.limited_access,\n          company_id: value.company_id,\n          branch_id: value.branch_id,\n          branch_name: value.branch_name,\n          region_id: value.region_id,\n          region_name: value.region_name,\n          access: value.access,\n          access_observation: value.access_observation,\n          job_position: value.job_position,\n          status: value.workflow ? value.workflow.status.status : \"\",\n          responsable: getCurrentResponsable(data.employee_manager_name, value),\n        };\n      })\n    : null;\n\n  const as400user = data.as400orderuser\n    ? data.as400orderuser.map((value: any) => {\n        return {\n          id: value.id,\n          service_id: value.service_id,\n          service_description: value.service_description,\n          environment: value.environment,\n          is_new_user: value.is_new_user,\n          user_id: value.user_id,\n          copy_user_id_status: value.copy_user_id_status,\n          copy_user_id: value.copy_user_id,\n          status: value.workflow ? value.workflow.status.status : \"\",\n          responsable: getCurrentResponsable(data.employee_manager_name, value),\n        };\n      })\n    : null;\n\n  const result = {\n    ...obj,\n    saptable: sap || sapuser ? [...sap, ...sapuser] : null,\n    as400table: [...as400user, ...as400],\n  };\n  return result;\n}\n\nexport async function fetchRequestList(): Promise<any> {\n  const data = await (\n    await fetch(`${process.env.REACT_APP_API_SAS_URL}/requests`)\n  ).json();\n  return data;\n}\n\nexport async function fetchRequestWorkFlow(request_id: string): Promise<any> {\n  const data = await (\n    await fetch(\n      `${process.env.REACT_APP_API_SAS_URL}/requests/workflow/${request_id}`\n    )\n  ).json();\n  return data;\n}\n","import { DataGrid, GridCellParams, GridColDef } from \"@mui/x-data-grid\";\nimport * as React from \"react\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { fetchRequestsByUser } from \"../../services/data/RequestServices\";\n\ninterface IProps {\n  report: string;\n  columns: GridColDef[];\n}\n\nexport default function UserRequests({ report, columns }: IProps): JSX.Element {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const [rows, setRows] = React.useState<any>();\n  const { accountInfo } = useAuth();\n  const [isCancelled, setIsCancelled] = React.useState<boolean>(false);\n  const history = useHistory();\n\n  const handleCellClick = (params: GridCellParams) => {\n    const id = params.getValue(params.id, \"id\");\n    history.push(`/request/${id}`);\n    return \"\";\n  };\n\n  async function fetchData() {\n    const rows = await fetchRequestsByUser(\n      accountInfo?.user.displayName || \"\",\n      report\n    );\n    if (!isCancelled) {\n      setRows(rows);\n    }\n  }\n\n  useEffect(() => {\n    setIsCancelled(false);\n    fetchData();\n\n    return () => {\n      setIsCancelled(true);\n    };\n  }, []);\n\n  return (\n    <div style={{ height: 650, width: \"95%\" }}>\n      <DataGrid\n        rows={rows || []}\n        columns={columns}\n        pageSize={50}\n        rowsPerPageOptions={[10, 20, 50, 100]}\n        checkboxSelection={false}\n        onCellDoubleClick={handleCellClick}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function UserTodoRequests(): JSX.Element {\n  return <div>to be done</div>;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport AssignmentIndIcon from \"@mui/icons-material/AssignmentInd\";\nimport CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\nimport DraftsIcon from \"@mui/icons-material/Drafts\";\nimport ListAltIcon from \"@mui/icons-material/ListAlt\";\nimport RadioButtonUncheckedIcon from \"@mui/icons-material/RadioButtonUnchecked\";\nimport { Tabs, Tab, Paper, Box, Typography } from \"@mui/material\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport React, { useEffect } from \"react\";\n\nimport UserAprovalRequests from \"../components/Home/UserAprovalRequests\";\nimport {\n  draftColumns,\n  openColumns,\n  closedColumns,\n} from \"../components/Home/UserRequestColumns\";\nimport UserRequests from \"../components/Home/UserRequests\";\nimport UserTodoRequests from \"../components/Home/UserTodoRequests\";\nimport { useAuth } from \"../hooks/useAuth\";\n\ninterface IUserRequestCount {\n  draft: number;\n  open: number;\n  closed: number;\n  aproving: number;\n  executing: number;\n}\n\ninterface ITabPanelProps {\n  // eslint-disable-next-line react/require-default-props\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n});\n\nexport function Home(): JSX.Element {\n  const { accountInfo } = useAuth();\n  const classes = useStyles();\n  const [value, setValue] = React.useState(1);\n  const [isLoading, setIsLoading] = React.useState(true);\n\n  const [userRequestCount, setUserRequestCount] =\n    React.useState<IUserRequestCount>({\n      draft: 0,\n      open: 0,\n      closed: 0,\n      aproving: 0,\n      executing: 0,\n    });\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  async function fetchData() {\n    const user = accountInfo?.user.displayName;\n    const userCount = await (\n      await fetch(`${process.env.REACT_APP_API_SAS_URL}/requests/count/${user}`)\n    ).json();\n    console.log(userCount);\n\n    setUserRequestCount(userCount);\n  }\n\n  useEffect(() => {\n    fetchData();\n    setIsLoading(false);\n  }, []);\n\n  function TabPanel(props: ITabPanelProps) {\n    const { children, value, index, ...other } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`scrollable-prevent-tabpanel-${index}`}\n        aria-labelledby={`scrollable-prevent-tab-${index}`}\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...other}\n      >\n        {value === index && (\n          <Box p={3}>\n            <Typography component=\"div\">{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <Paper square className={classes.root}>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        variant=\"fullWidth\"\n        indicatorColor=\"secondary\"\n        textColor=\"secondary\"\n        aria-label=\"icon label tabs example\"\n      >\n        <Tab\n          icon={<DraftsIcon />}\n          label={`Rascunhos(${userRequestCount?.draft})`}\n        />\n        <Tab\n          icon={<RadioButtonUncheckedIcon />}\n          label={`Em Andamento(${userRequestCount?.open})`}\n          disabled={userRequestCount?.open === 0}\n        />\n        <Tab\n          icon={<CheckCircleOutlineIcon />}\n          label={`Encerrados(${userRequestCount?.closed})`}\n        />\n        <Tab\n          icon={<AssignmentIndIcon />}\n          label={`Para Aprovar(${userRequestCount?.aproving}\n        )`}\n        />\n        <Tab\n          icon={<ListAltIcon />}\n          label={`Para Executar(${userRequestCount?.executing})`}\n        />\n      </Tabs>\n\n      {isLoading && \"...loading\"}\n      {!isLoading && (\n        <>\n          <TabPanel value={value} index={0}>\n            <UserRequests columns={draftColumns} report=\"draft\" />\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <UserRequests columns={openColumns} report=\"open\" />\n          </TabPanel>\n          <TabPanel value={value} index={2}>\n            <UserRequests columns={closedColumns} report=\"closed\" />\n          </TabPanel>\n          <TabPanel value={value} index={3}>\n            <UserAprovalRequests />\n          </TabPanel>\n          <TabPanel value={value} index={4}>\n            <UserTodoRequests />\n          </TabPanel>\n        </>\n      )}\n    </Paper>\n  );\n}\n","import Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport * as React from \"react\";\n\nimport { INewStep } from \"./WorkFlowSteps\";\n\ninterface IProps {\n  rows: INewStep;\n}\n\nexport default function WorkflowResponsableTable({\n  rows,\n}: IProps): JSX.Element {\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Grupo</TableCell>\n            <TableCell align=\"right\">Responsáveis</TableCell>\n            <TableCell align=\"right\">Pendentes</TableCell>\n            <TableCell align=\"right\">Analisados</TableCell>\n            <TableCell align=\"right\">Analisado por</TableCell>\n            <TableCell align=\"right\">Analisado em</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.responsables.map((row, index) => (\n            <TableRow\n              // eslint-disable-next-line react/no-array-index-key\n              key={index}\n              sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n            >\n              <TableCell align=\"right\">{row.group}</TableCell>\n              <TableCell align=\"right\">{row.users.join(\" / \")}</TableCell>\n              <TableCell align=\"right\">{row.doingCount}</TableCell>\n              <TableCell align=\"right\">{row.doneCount}</TableCell>\n              <TableCell align=\"right\">{row.doneBy}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable react/jsx-props-no-spreading */\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Typography from \"@mui/material/Typography\";\nimport * as React from \"react\";\n\nimport { fetchRequestWorkFlow } from \"../../services/data/RequestServices\";\nimport WorkflowResponsableTable from \"./WorkflowResponsableTable\";\n\ninterface IProps {\n  request_id: string;\n}\n\nexport interface INewStep {\n  id: number;\n  status: string;\n  statusObservation: string;\n  text: \"\";\n  isCurrent: boolean;\n  isRequired: boolean;\n  isConcluded: boolean;\n  statusDate: Date;\n  concludedOn: Date;\n  responsables: {\n    isDone: boolean;\n    doneBy: string;\n    group: string;\n    users: string[];\n    doneCount: number;\n    doingCount: number;\n  }[];\n}\n\nexport default function WorkFlowSteps({ request_id }: IProps): JSX.Element {\n  const [isCancelled, setIsCancelled] = React.useState<boolean>(false);\n  const [initialData, setInitialData] = React.useState<INewStep[]>([]);\n  const steps: INewStep[] = [];\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set<number>());\n\n  async function fetchData() {\n    const data = await fetchRequestWorkFlow(request_id);\n\n    if (!isCancelled) {\n      data.forEach((element: any) => {\n        if (element.isRequired) {\n          steps.push(element);\n        }\n      });\n      setInitialData(steps);\n      console.log(data);\n\n      const pos = steps.findIndex((value: any) => value.isInitial);\n      if (pos === -1) setActiveStep(0);\n      else setActiveStep(pos);\n      console.log(\"posição corrente\", pos);\n      console.log(\"definiu initial data\", data);\n    }\n  }\n\n  React.useEffect(() => {\n    setIsCancelled(false);\n    fetchData();\n    console.log(\"terminou de carregar\");\n\n    return () => {\n      console.log(\"entrou no cancelado\");\n      setIsCancelled(true);\n    };\n  }, []);\n\n  //  const isStepOptional = (step: number) => {\n  //  return true;\n  // };\n\n  const isStepSkipped = (step: number) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep((prevActiveStep) =>\n      prevActiveStep + 1 === initialData.length ? 0 : prevActiveStep + 1\n    );\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <Box sx={{ width: \"100%\" }}>\n      {initialData && (\n        <Stepper\n          activeStep={activeStep || 0}\n          sx={{\n            marginTop: \"24px\",\n            marginBottom: \"24px\",\n            alignContent: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          {initialData.map((value, index) => {\n            const stepProps: { completed?: boolean } = {};\n            const labelProps: {\n              optional?: React.ReactNode;\n            } = {};\n\n            if (value.statusObservation) {\n              labelProps.optional = (\n                <Typography variant=\"caption\">\n                  {value.statusObservation}\n                </Typography>\n              );\n            }\n\n            if (isStepSkipped(index)) {\n              stepProps.completed = value.isConcluded;\n            }\n            stepProps.completed = value.isConcluded;\n\n            return (\n              <Step key={value.status} {...stepProps} color=\"success\">\n                <StepLabel {...labelProps}>{value.status}</StepLabel>\n              </Step>\n            );\n          })}\n        </Stepper>\n      )}\n      {activeStep === initialData.length ? (\n        <>\n          <Typography sx={{ mt: 2, mb: 1 }}>\n            All steps completed - you&apos;re finished\n          </Typography>\n          <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n            <Box sx={{ flex: \"1 1 auto\" }} />\n            <Button onClick={handleReset}>Reset</Button>\n          </Box>\n        </>\n      ) : (\n        <>\n          <Typography sx={{ mt: 2, mb: 1 }}>\n            {initialData[activeStep].text}\n            <WorkflowResponsableTable rows={initialData[activeStep]} />\n          </Typography>\n          <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n            <Button\n              color=\"inherit\"\n              disabled={activeStep === 0}\n              onClick={handleBack}\n              sx={{ mr: 1 }}\n            >\n              Back\n            </Button>\n            <Box sx={{ flex: \"1 1 auto\" }} />\n            <Button onClick={handleNext}>\n              {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n            </Button>\n          </Box>\n        </>\n      )}\n    </Box>\n  );\n}\n","import { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport * as React from \"react\";\n\ninterface IProps {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  rows: any;\n}\n\nconst columns: GridColDef[] = [\n  { field: \"id\", headerName: \"ID\", width: 30, hide: true },\n  {\n    field: \"status\",\n    headerName: \"Status\",\n    width: 90,\n  },\n  {\n    field: \"environment\",\n    headerName: \"Ambiente\",\n    width: 90,\n  },\n  { field: \"service_id\", headerName: \"Cód.\", width: 60 },\n  { field: \"service_description\", headerName: \"Serviço\", width: 180 },\n  { field: \"user_id\", headerName: \"User ID\", width: 130 },\n\n  {\n    field: \"job_position\",\n    headerName: \"Tipo Perfil\",\n    width: 120,\n  },\n\n  { field: \"system\", headerName: \"Sis.\", width: 80 },\n  { field: \"routine\", headerName: \"rotina.\", width: 80 },\n  { field: \"access_type\", headerName: \"Seg\", width: 60 },\n  { field: \"company_id\", headerName: \"Empresa\", width: 100 },\n  { field: \"branch_id\", headerName: \"Filial.\", width: 120 },\n  { field: \"region_id\", headerName: \"Região.\", width: 120 },\n  { field: \"access\", headerName: \"Acesso\", width: 120 },\n  {\n    field: \"responsable\",\n    headerName: \"Responsável(eis)\",\n    sortable: true,\n    width: 200,\n  },\n];\n\nexport default function AS400Table({ rows }: IProps): JSX.Element {\n  return (\n    <div style={{ height: 400, width: \"100%\" }}>\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        pageSize={30}\n        rowsPerPageOptions={[5, 10, 30]}\n        checkboxSelection\n      />\n    </div>\n  );\n}\n","/* eslint-disable react/require-default-props */\n/* eslint-disable react/jsx-props-no-spreading */\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\n\ninterface IProps {\n  name: string;\n  label: string;\n  fullWidth: boolean;\n  value: string;\n  multiline?: boolean;\n  maxRows?: number;\n}\n\nexport default function InputReadText({\n  name,\n  label,\n  fullWidth,\n  value,\n  multiline,\n  maxRows,\n}: IProps): JSX.Element {\n  return (\n    <TextField\n      id={name}\n      label={label}\n      defaultValue={value}\n      fullWidth={fullWidth}\n      InputProps={{ readOnly: true }}\n      multiline={multiline}\n      maxRows={maxRows}\n    />\n  );\n}\n","import Grid from \"@mui/material/Grid\";\nimport React from \"react\";\n\nimport InputReadText from \"../../../components/controls/InputReadText\";\nimport { IEmployee } from \"../../RequestStepForm/components/Interface\";\n\ninterface IRequestFormProps {\n  values: IEmployee;\n}\n\nexport default function EmployeeForm({\n  values,\n}: IRequestFormProps): JSX.Element {\n  const {\n    request_by,\n    employee,\n    request_date,\n    employee_type,\n    employee_role,\n    employee_costcenter,\n    employee_manager,\n    request_number,\n    request_status,\n    employee_plataform,\n    employee_company,\n    employee_branch,\n    request_observation,\n  } = values;\n\n  return (\n    <>\n      <Grid container justifyContent=\"space-between\" spacing={2}>\n        <Grid item xs={6}>\n          <Grid container spacing={1}>\n            <Grid item xs={8}>\n              <InputReadText\n                name=\"request_by\"\n                label=\"Solicitante\"\n                fullWidth\n                value={request_by || \"\"}\n              />\n              <InputReadText\n                name=\"employee\"\n                label=\"Colaborador\"\n                fullWidth\n                value={employee.description || \"\"}\n              />\n            </Grid>\n            <Grid item xs={4}>\n              <InputReadText\n                name=\"request.request_date\"\n                label=\"Data da solicitação\"\n                fullWidth={false}\n                value={request_date ? request_date.toLocaleString() : \"\"}\n              />\n\n              <InputReadText\n                name=\"request.employee_type\"\n                label=\"Tipo\"\n                value={employee_type?.description || \"\"}\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item xs={6}>\n              <InputReadText\n                name=\"request.employee_role\"\n                label=\"Cargo\"\n                value={\n                  employee_role\n                    ? `${employee_role.id}-${employee_role.description}`\n                    : \"\"\n                }\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <InputReadText\n                name=\"request.employee_costcenter\"\n                label=\"Centro de Custo\"\n                value={\n                  employee_costcenter\n                    ? `${employee_costcenter.id}-${employee_costcenter.description}`\n                    : \"\"\n                }\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item xs={6}>\n              <InputReadText\n                name=\"request.employee_manager\"\n                label=\"Gestor\"\n                value={employee_manager?.description || \"\"}\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item xs={6}>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n              <InputReadText\n                name=\"request.request_number\"\n                label=\"Número\"\n                fullWidth={false}\n                value={request_number || \"\"}\n              />\n\n              <InputReadText\n                name=\"request.request_status\"\n                label=\"Status\"\n                fullWidth={false}\n                value={request_status || \"\"}\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item xs={6}>\n              <InputReadText\n                name=\"request.employee\"\n                label=\"Email\"\n                fullWidth\n                value={employee.email || \"\"}\n              />\n            </Grid>\n            <Grid item xs={4}>\n              <InputReadText\n                name=\"request.employee_plataform\"\n                label=\"Plataforma\"\n                fullWidth\n                value={employee_plataform?.description || \"\"}\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item xs={4}>\n              <InputReadText\n                name=\"request.employee_company\"\n                label=\"Empresa\"\n                fullWidth\n                value={\n                  employee_company\n                    ? `${employee_company.id}-${employee_company.description}`\n                    : \"\"\n                }\n              />\n            </Grid>\n            <Grid item xs={7}>\n              <InputReadText\n                name=\"request.employee_branch\"\n                label=\"Filial\"\n                fullWidth\n                value={\n                  employee_branch\n                    ? `${employee_branch.id}-${employee_branch.description}`\n                    : \"\"\n                }\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item xs={11}>\n              <InputReadText\n                name=\"request.request_observation\"\n                label=\"Observação\"\n                multiline\n                maxRows={4}\n                fullWidth\n                value={request_observation}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n/* <pre>{JSON.stringify({ values }, null, 4)}</pre> */\n","import { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport * as React from \"react\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype NewType = any;\n\ninterface IProps {\n  rows: NewType;\n}\n\nconst columns: GridColDef[] = [\n  { field: \"id\", headerName: \"ID\", width: 30, hide: true },\n  {\n    field: \"status\",\n    headerName: \"Status\",\n    width: 90,\n  },\n  {\n    field: \"environment\",\n    headerName: \"Ambiente\",\n    width: 90,\n  },\n  { field: \"service_id\", headerName: \"Cód.\", width: 60 },\n  { field: \"service_description\", headerName: \"Serviço\", width: 180 },\n  { field: \"user_id\", headerName: \"User ID\", width: 130 },\n\n  {\n    field: \"job_position\",\n    headerName: \"Tipo Perfil\",\n    width: 120,\n  },\n  {\n    field: \"profile_name\",\n    headerName: \"Perfil\",\n    sortable: true,\n    width: 400,\n  },\n  {\n    field: \"profile_description\",\n    headerName: \"Descrição\",\n    sortable: true,\n    width: 400,\n  },\n  {\n    field: \"responsable\",\n    headerName: \"Responsável(eis)\",\n    sortable: true,\n    width: 200,\n  },\n];\n\nexport default function SAPTable({ rows }: IProps): JSX.Element {\n  console.log(rows);\n  return (\n    <div style={{ height: 400, width: \"100%\" }}>\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        pageSize={30}\n        rowsPerPageOptions={[5, 10, 30]}\n        checkboxSelection={false}\n      />\n    </div>\n  );\n}\n","import Box from \"@mui/material/Box\";\nimport * as React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport WorkFlowSteps from \"../../components/controls/WorkFlowSteps\";\nimport { fetchRequestsById } from \"../../services/data/RequestServices\";\nimport AS400Table from \"./components/AS400Table\";\nimport EmployeeForm from \"./components/EmployeeForm\";\nimport SAPTable from \"./components/SAPTable\";\n\ntype RequestParams = {\n  id: string;\n};\n\nexport function Request(): JSX.Element {\n  const params = useParams<RequestParams>();\n  const [isCancelled, setIsCancelled] = React.useState<boolean>(false);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const [initialData, setInitialData] = React.useState<any>();\n  async function fetchData() {\n    const data = await fetchRequestsById(params.id);\n    console.log(\"no form\", data);\n    if (!isCancelled) {\n      setInitialData(data);\n      console.log(\"definiu initial data\", data);\n    }\n  }\n\n  React.useEffect(() => {\n    setIsCancelled(false);\n    fetchData();\n    console.log(\"terminou de carregar\");\n\n    return () => {\n      console.log(\"entrou no cancelado\");\n      setIsCancelled(true);\n    };\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        marginTop: \"4px\",\n        \"& .MuiTextField-root\": { m: 1, minWidth: \"30px\" },\n        \"& .MuiInputBase-root\": { m: 1, minWidth: \"30px\" },\n        \"& .MuiDataGrid-root\": { m: 1, minWidth: \"30px\" },\n      }}\n    >\n      {initialData && (\n        <>\n          <EmployeeForm values={initialData} />\n          {initialData.saptable.length !== 0 && (\n            <SAPTable rows={initialData.saptable} />\n          )}\n\n          {initialData.as400table.length !== 0 && (\n            <AS400Table rows={initialData.as400table} />\n          )}\n\n          <WorkFlowSteps request_id={params.id} />\n        </>\n      )}\n    </Box>\n  );\n}\n","import Checkbox from \"@mui/material/Checkbox\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport React from \"react\";\n\nimport { RequestType } from \"../../hooks/useRequestTable\";\nimport { IEnhancedTableProps } from \"./useTableProps\";\n\nexport function EnhancedTableHead(props: IEnhancedTableProps): JSX.Element {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n    headCells,\n  } = props;\n  const createSortHandler =\n    (property: keyof RequestType) => (event: React.MouseEvent<unknown>) => {\n      onRequestSort(event, property);\n    };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","import DeleteIcon from \"@mui/icons-material/Delete\";\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { lighten, Theme } from \"@mui/material/styles\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Typography from \"@mui/material/Typography\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport clsx from \"clsx\";\nimport React from \"react\";\n\nconst useToolbarStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(1),\n    },\n    highlight:\n      theme.palette.mode === \"light\"\n        ? {\n            color: theme.palette.secondary.main,\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n          }\n        : {\n            color: theme.palette.text.primary,\n            backgroundColor: theme.palette.secondary.dark,\n          },\n    title: {\n      flex: \"1 1 100%\",\n    },\n  })\n);\n\ninterface IEnhancedTableToolbarProps {\n  numSelected: number;\n  title: string;\n}\n\nexport const EnhancedTableToolbar = (\n  props: IEnhancedTableToolbarProps\n): JSX.Element => {\n  const classes = useToolbarStyles();\n  const { numSelected, title } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          {title}\n        </Typography>\n      )}\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\" size=\"large\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\" size=\"large\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n","import { lighten, Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nexport const useToolbarStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n    },\n    highlight:\n      theme.palette.mode === \"light\"\n        ? {\n            color: theme.palette.secondary.main,\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n          }\n        : {\n            color: theme.palette.text.primary,\n            backgroundColor: theme.palette.secondary.dark,\n          },\n    title: {\n      flex: \"1 1 100%\",\n    },\n  })\n);\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    paper: {\n      width: \"100%\",\n      marginBottom: theme.spacing(2),\n    },\n    table: {\n      minWidth: 750,\n    },\n    visuallyHidden: {\n      border: 0,\n      clip: \"rect(0 0 0 0)\",\n      height: 1,\n      margin: -1,\n      overflow: \"hidden\",\n      padding: 0,\n      position: \"absolute\",\n      top: 20,\n      width: 1,\n    },\n  })\n);\n","import Checkbox from \"@mui/material/Checkbox\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Paper from \"@mui/material/Paper\";\nimport Switch from \"@mui/material/Switch\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { RequestType } from \"../../hooks/useRequestTable\";\nimport { EnhancedTableHead } from \"./TableHead\";\nimport { EnhancedTableToolbar } from \"./TableToolBar\";\nimport { Order, TableProps } from \"./useTableProps\";\nimport { useStyles } from \"./useTableStyles\";\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key\n): (\n  a: { [key in Key]: number | string },\n  b: { [key in Key]: number | string }\n) => number {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport default function EnhancedTable({\n  rows,\n  headerData,\n  title,\n  tableType,\n}: TableProps): JSX.Element {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState<Order>(\"asc\");\n  const [orderBy, setOrderBy] =\n    React.useState<keyof RequestType>(\"request_number\");\n  const [selected, setSelected] = React.useState<string[]>([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(15);\n  const history = useHistory();\n\n  const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected: string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.request_id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleOpenRequestClick = (\n    event: React.MouseEvent<unknown>,\n    requestId: string\n  ) => {\n    history.push(`/request/${requestId}`);\n  };\n\n  const tableRowByNumber = (\n    row: RequestType,\n    isItemSelected: boolean,\n    labelId: string\n  ) => {\n    return (\n      <TableRow\n        hover\n        onClick={(event) => handleOpenRequestClick(event, row.request_id)}\n        role=\"checkbox\"\n        aria-checked={isItemSelected}\n        tabIndex={-1}\n        key={row.request_id}\n        selected={isItemSelected}\n      >\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            checked={isItemSelected}\n            inputProps={{ \"aria-labelledby\": labelId }}\n            onClick={(event) => {\n              event.stopPropagation();\n              handleClick(event, row.request_id);\n            }}\n          />\n        </TableCell>\n        <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n          {row.request_number}\n        </TableCell>\n        <TableCell>{row.request_status}</TableCell>\n        <TableCell align=\"right\">{row.employee_fullname}</TableCell>\n        <TableCell>{row.request_type}</TableCell>\n      </TableRow>\n    );\n  };\n\n  const tableRowByStatus = (\n    row: RequestType,\n    isItemSelected: boolean,\n    labelId: string\n  ) => {\n    return (\n      <TableRow\n        hover\n        role=\"checkbox\"\n        aria-checked={isItemSelected}\n        tabIndex={-1}\n        key={row.request_id}\n        selected={isItemSelected}\n        onClick={(event) => handleOpenRequestClick(event, row.request_id)}\n      >\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            checked={isItemSelected}\n            inputProps={{ \"aria-labelledby\": labelId }}\n            onClick={(event) => {\n              event.stopPropagation();\n              handleClick(event, row.request_id);\n            }}\n          />\n        </TableCell>\n        <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n          {row.request_status}\n        </TableCell>\n        <TableCell>{row.request_number}</TableCell>\n        <TableCell align=\"right\">{row.employee_fullname}</TableCell>\n        <TableCell>{row.request_type}</TableCell>\n      </TableRow>\n    );\n  };\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: keyof RequestType\n  ) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} title={title} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n              headCells={headerData}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.request_id);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                  const line =\n                    tableType === \"status\"\n                      ? tableRowByStatus(row, isItemSelected, labelId)\n                      : tableRowByNumber(row, isItemSelected, labelId);\n                  return line;\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport EnhancedTable from \"../components/Table\";\nimport { useRequestTable, RequestType } from \"../hooks/useRequestTable\";\nimport { fetchRequestList } from \"../services/data/RequestServices\";\n\ntype RequestsParams = {\n  orderby: string;\n};\n\nexport function Requests(): JSX.Element {\n  const params = useParams<RequestsParams>();\n  const [requests, setRequests] = useState<RequestType[]>([]);\n  const headCells = useRequestTable(params.orderby);\n\n  async function fetchData() {\n    const data = await fetchRequestList();\n    setRequests(data);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <EnhancedTable\n        rows={requests}\n        headerData={headCells.headCells}\n        title={`Listagem de requests - ${params.orderby}`}\n        tableType={params.orderby}\n      />\n    </div>\n  );\n}\n","export interface IHeadCell {\n  disablePadding: boolean;\n  id: keyof RequestType;\n  label: string;\n  numeric: boolean;\n}\nexport type RequestType = {\n  request_id: string;\n  requested_by_id: string;\n  requested_by_name: string;\n  requested_by_email: string;\n  request_number: string;\n  request_status: string;\n  request_type: string;\n  request_copy_list: string;\n  request_observation: string;\n  employee_fullname: string;\n  employee_email: string;\n  employee_type: string;\n  employee_type_description: string;\n  employee_profile_edition_rule: string;\n  employee_role_id: string;\n  employee_role_description: string;\n  employee_plataform_id: string;\n  employee_plataform_description: string;\n  employee_costcenter_id: string;\n  employee_costcenter_description: string;\n  employee_company_id: string;\n  employee_company_description: string;\n  employee_branch_id: string;\n  employee_branch_description: string;\n  employe_manager_id: string;\n  employee_manager_name: string;\n  employee_login: string;\n  employee_sap_id: string;\n  employee_userid_sap_status: string;\n  employee_userid_sap_expiration_date: string;\n  employee_as400_id: string;\n  employee_userid_as400_description: string;\n};\n\nfunction setStatusTableHeader() {\n  const header: IHeadCell[] = [\n    {\n      id: \"request_status\",\n      numeric: false,\n      disablePadding: true,\n      label: \"Status\",\n    },\n    {\n      id: \"request_number\",\n      numeric: false,\n      disablePadding: false,\n      label: \"Num\",\n    },\n    {\n      id: \"employee_fullname\",\n      numeric: false,\n      disablePadding: false,\n      label: \"Colaborador\",\n    },\n    {\n      id: \"request_type\",\n      numeric: false,\n      disablePadding: false,\n      label: \"Tipo\",\n    },\n  ];\n  return header;\n}\n\nfunction setNumberTableHeader() {\n  const header: IHeadCell[] = [\n    {\n      id: \"request_number\",\n      numeric: false,\n      disablePadding: true,\n      label: \"Num\",\n    },\n    {\n      id: \"request_status\",\n      numeric: false,\n      disablePadding: false,\n      label: \"Status\",\n    },\n    {\n      id: \"employee_fullname\",\n      numeric: false,\n      disablePadding: false,\n      label: \"Colaborador\",\n    },\n    {\n      id: \"request_type\",\n      numeric: false,\n      disablePadding: false,\n      label: \"Tipo\",\n    },\n  ];\n  return header;\n}\n\nexport function useRequestTable(headerType: string | \"status\"): {\n  headCells: IHeadCell[];\n} {\n  let headCells: IHeadCell[] = [];\n  headCells =\n    headerType === \"status\" ? setStatusTableHeader() : setNumberTableHeader();\n\n  return { headCells };\n}\n","export default __webpack_public_path__ + \"static/media/LDC_logo.e1f3b1fa.png\";","/* eslint-disable react/jsx-no-bind */\nimport { Paper, Typography, Button } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport React from \"react\";\nimport { Redirect, useHistory } from \"react-router-dom\";\n\nimport logo from \"../assets/LDC_logo.png\";\nimport { useAuth } from \"../hooks/useAuth\";\n\nexport default function SignIn(): JSX.Element {\n  const { signInWithAD, accountInfo } = useAuth();\n  const history = useHistory();\n\n  async function mySignIn() {\n    const accessToken = localStorage.getItem(\"@AzureAd:accessToken\");\n\n    if (!accessToken) {\n      console.log(\"logando\");\n      await signInWithAD();\n    }\n    history.replace(\"/home\");\n  }\n\n  const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n      root: {\n        display: \"flex\",\n      },\n      mainContent: {\n        display: \"flex\",\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      },\n      thisContent: {\n        display: \"flex\",\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        flexDirection: \"column\",\n        alignItems: \"left\",\n        maxWidth: 500,\n      },\n      logo: {\n        width: 200,\n        padding: theme.spacing(1),\n      },\n      button: {\n        width: 80,\n        padding: 0,\n        alignItems: \"center\",\n        marginLeft: 50,\n      },\n    })\n  );\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      {accountInfo?.isAuthenticated ? <Redirect to=\"/home\" /> : \"\"}\n      <main className={classes.mainContent}>\n        <Paper>\n          <div className={classes.root}>\n            <img src={logo} alt=\"LDC Brazil\" className={classes.logo} />\n            <div className={classes.thisContent}>\n              <Typography>\n                Por favor, clique no botão para fazer o login utilizando seu\n                email da LDC.\n              </Typography>\n              <div>\n                <Button variant=\"contained\" color=\"primary\" onClick={mySignIn}>\n                  Entrar\n                </Button>\n              </div>\n            </div>\n          </div>\n          <p />\n        </Paper>\n      </main>\n    </div>\n  );\n}\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable react/jsx-props-no-spreading */\nimport NavigateBeforeIcon from \"@mui/icons-material/NavigateBefore\";\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport { Button, CircularProgress, Grid } from \"@mui/material\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Stepper from \"@mui/material/Stepper\";\nimport { Form, Formik, FormikConfig, FormikValues } from \"formik\";\nimport * as React from \"react\";\n\nexport interface IFormikStepProps\n  extends Pick<FormikConfig<FormikValues>, \"children\" | \"validationSchema\"> {\n  label: string;\n}\n\nexport function FormikStep({ children }: IFormikStepProps): JSX.Element {\n  return <>{children} </>;\n}\n\nexport function FormikStepper({\n  children,\n  ...props\n}: FormikConfig<FormikValues>): JSX.Element {\n  const childrenArray = React.Children.toArray(\n    children\n  ) as React.ReactElement<IFormikStepProps>[];\n\n  const [step, setStep] = React.useState(0);\n  const [completed, setCompleted] = React.useState(false);\n  const currentChild = childrenArray[\n    step\n  ] as React.ReactElement<IFormikStepProps>;\n\n  function isLastStep() {\n    return step === childrenArray.length - 1;\n  }\n\n  return (\n    <Formik\n      {...props}\n      validationSchema={currentChild.props.validationSchema}\n      onSubmit={async (values, helpers) => {\n        if (step === childrenArray.length - 1) {\n          await props.onSubmit(values, helpers);\n          setCompleted(true);\n        } else {\n          setStep((s) => s + 1);\n        }\n      }}\n    >\n      {({ isSubmitting, status }) => (\n        <Form autoComplete=\"off\">\n          <Stepper\n            alternativeLabel\n            activeStep={step}\n            sx={{\n              marginTop: \"24px\",\n              marginBottom: \"24px\",\n              alignContent: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            {childrenArray.map((child, index) => (\n              <Step\n                key={child.props.label}\n                completed={step > index || completed}\n              >\n                <StepLabel>{child.props.label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          {currentChild}\n          <Grid\n            container\n            spacing={2}\n            sx={{\n              marginTop: \"8px\",\n              alignContent: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            {!status && step > 0 ? (\n              <Grid item>\n                <Button\n                  disabled={isSubmitting}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  onClick={() => setStep((s) => s - 1)}\n                  startIcon={<NavigateBeforeIcon />}\n                >\n                  Voltar\n                </Button>\n              </Grid>\n            ) : null}\n            {!status && (\n              <Grid item>\n                <Button\n                  startIcon={\n                    isSubmitting ? <CircularProgress size=\"1rem\" /> : null\n                  }\n                  disabled={isSubmitting}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  size=\"large\"\n                  endIcon={\n                    isLastStep() && !isSubmitting ? (\n                      <SendIcon />\n                    ) : (\n                      <NavigateNextIcon />\n                    )\n                  }\n                >\n                  {isSubmitting\n                    ? \"Submitting\"\n                    : isLastStep()\n                    ? \"Enviar\"\n                    : \"Próximo\"}\n                </Button>\n              </Grid>\n            )}\n          </Grid>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\n/*    <pre>{JSON.stringify({ values }, null, 4)}</pre> */\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable react/require-default-props */\n/* eslint-disable react/jsx-props-no-spreading */\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport TextField from \"@mui/material/TextField\";\nimport { useField, useFormikContext } from \"formik\";\nimport * as React from \"react\";\n\nimport { IAS400RoutineData } from \"../../pages/RequestStepForm/components/Interface\";\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\ninterface IError {\n  error?: boolean;\n  helperText?: string;\n}\n\ninterface IProps {\n  name: string;\n  label: string;\n  labelWithId: boolean;\n  helperText: string;\n  getOptions: (param: string) => Promise<IAS400RoutineData[]>;\n  parentValue?: string | undefined;\n}\n\nexport default function CheckAutoComplete(props: IProps): JSX.Element {\n  const { name, labelWithId, getOptions, parentValue } = props;\n\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState<readonly IAS400RoutineData[]>(\n    []\n  );\n\n  const [field, mata] = useField(name);\n  const { setFieldValue } = useFormikContext();\n  const [inputValue, setInputValue] = React.useState(\"\");\n\n  const configTextField: IError = {};\n\n  if (mata && mata.touched && mata.error) {\n    configTextField.error = true;\n    configTextField.helperText = mata.error;\n  }\n\n  const loading = open && options.length === 0;\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n      if (active) {\n        if (parentValue === \"\") {\n          setOptions([]);\n          setOpen(false);\n        } else if (getOptions) {\n          const data = await getOptions(parentValue || \"\");\n          setOptions([...data]);\n        }\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  return (\n    <Autocomplete\n      fullWidth\n      multiple\n      id={name}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      {...field}\n      onClose={() => {\n        setOpen(false);\n      }}\n      inputValue={inputValue}\n      onInputChange={(event: any, newInputValue) => {\n        setInputValue(newInputValue);\n      }}\n      onChange={(event: any, values: IAS400RoutineData[]) => {\n        setFieldValue(name, [...values]);\n      }}\n      options={options}\n      isOptionEqualToValue={(option, value) => {\n        if (labelWithId) {\n          return (\n            option.id === value.id ||\n            option.description.toUpperCase() === value.description.toUpperCase()\n          );\n        }\n        return (\n          option.description.toUpperCase() === value.description.toUpperCase()\n        );\n      }}\n      disableCloseOnSelect\n      getOptionLabel={(option) => {\n        if (option.description === \"\") return \"\";\n\n        return labelWithId\n          ? `${option.id}-${option.description}`\n          : option.description;\n      }}\n      renderOption={(props, option, { selected }) => (\n        <li {...props}>\n          <Checkbox\n            icon={icon}\n            checkedIcon={checkedIcon}\n            style={{ marginRight: 8 }}\n            checked={selected}\n          />\n          {labelWithId\n            ? `${option.id}-${option.description}`\n            : option.description}\n        </li>\n      )}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Rotinas\"\n          placeholder=\"Rotinas\"\n          {...configTextField}\n        />\n      )}\n    />\n  );\n}\n","import { IData } from \"../../pages/RequestStepForm/components/Interface\";\n\nconst API_BASE_URL = process.env.REACT_APP_API_SAS_URL;\n\nexport const getSAPEnvironmentCollection = async (\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  id?: string\n): Promise<IData[]> => {\n  const data = [\n    {\n      id: \"ECC\",\n      description: \"ECC-Produção\",\n    },\n    {\n      id: \"BW\",\n      description: \"BW-Produção\",\n    },\n    {\n      id: \"BRT\",\n      description: \"BRT-Teste\",\n    },\n    {\n      id: \"GRC\",\n      description: \"GRC-Produção NFP\",\n    },\n    {\n      id: \"SIGGA\",\n      description: \"SIGGA-Mobile Manutenção\",\n    },\n  ];\n  return data;\n};\n\nexport const enum EUserTypes {\n  New = \"S\",\n  Existent = \"N\",\n  Blocked = \"D\",\n}\n\nexport const enum EServiceIds {\n  AddProfile = \"24\",\n  ExcludeProfile = \"25\",\n  CreateUser = \"26\",\n  BlockUser = \"27\",\n  UnBlockUser = \"194\",\n}\n\nexport const getSAPUserTypeCollection = async (\n  id?: string\n): Promise<IData[]> => {\n  console.log(\"...pegando user types\");\n  if (id === EServiceIds.AddProfile) {\n    return [\n      {\n        id: EUserTypes.New,\n        description: \"Novo\",\n      },\n      {\n        id: EUserTypes.Existent,\n        description: \"Existente\",\n      },\n      {\n        id: EUserTypes.Blocked,\n        description: \"Desbloqueio\",\n      },\n    ];\n  }\n  if (id === EServiceIds.UnBlockUser) {\n    return [\n      {\n        id: EUserTypes.Blocked,\n        description: \"Desbloqueio\",\n      },\n    ];\n  }\n\n  return [\n    {\n      id: EUserTypes.Existent,\n      description: \"Existente\",\n    },\n  ];\n};\n\nexport const getSAPServiceTypeCollection = async (\n  id?: string\n): Promise<IData[]> => {\n  console.log(`Getting service yptes ${id}`);\n  // Defining the service types based on the user_type\n  if (!id)\n    return [\n      {\n        id: EServiceIds.AddProfile,\n        description: \"Liberação de Perfil\",\n      },\n      {\n        id: EServiceIds.ExcludeProfile,\n        description: \"Exclusão de Perfil\",\n      },\n      {\n        id: EServiceIds.BlockUser,\n        description: \"Bloqueio de Usuário\",\n      },\n      {\n        id: EServiceIds.UnBlockUser,\n        description: \"Desbloqueio de Usuário\",\n      },\n    ];\n\n  if (id === \"N\")\n    return [\n      {\n        id: EServiceIds.AddProfile,\n        description: \"Liberação de Perfil\",\n      },\n      {\n        id: EServiceIds.ExcludeProfile,\n        description: \"Exclusão de Perfil\",\n      },\n      {\n        id: EServiceIds.BlockUser,\n        description: \"Bloqueio de Usuário\",\n      },\n    ];\n\n  if (id === \"D\")\n    return [\n      {\n        id: EServiceIds.AddProfile,\n        description: \"Liberação de Perfil\",\n      },\n      {\n        id: EServiceIds.ExcludeProfile,\n        description: \"Exclusão de Perfil\",\n      },\n      {\n        id: EServiceIds.UnBlockUser,\n        description: \"Desbloqueio de Usuário\",\n      },\n    ];\n\n  return [\n    {\n      id: EServiceIds.AddProfile,\n      description: \"Liberação de Perfil\",\n    },\n    {\n      id: EServiceIds.ExcludeProfile,\n      description: \"Exclusão de Perfil\",\n    },\n  ];\n};\n\nexport const getSAPProfileTypeCollection = async (\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  id?: string\n): Promise<IData[]> => {\n  const data = [\n    {\n      id: \"1\",\n      description: \"Outros\",\n    },\n    {\n      id: \"2\",\n      description: \"Job Position\",\n    },\n  ];\n  return data;\n};\n\nexport const getSAPUserIdCollection = async (id?: string): Promise<IData[]> => {\n  const url = id\n    ? `${API_BASE_URL}/sap/users/${id}`\n    : `${API_BASE_URL}/sap/users/ECC`;\n  const response = await fetch(url);\n  const data = await response.json();\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const mapeddata = data.map((value: any) => {\n    return { id: value.user_user_id, description: value.user_user_name };\n  });\n\n  return mapeddata;\n};\n\nexport const getJobPositionCollection = async (\n  manager_id: string,\n  cost_center_id: string\n): Promise<IData[]> => {\n  const url = `${API_BASE_URL}/sap/jobpositions/${manager_id}/${cost_center_id}`;\n  console.log(`searching on ${url}`);\n  const response = await fetch(url);\n  const data = await response.json();\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const mapeddata = data.map((value: any) => {\n    return { id: value.id, description: value.job_position };\n  });\n\n  return mapeddata;\n};\n\nexport const getSAPTemporyFieldCollection = async (\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  id?: string\n): Promise<IData[]> => {\n  const data = [\n    {\n      id: \"S\",\n      description: \"Sim\",\n    },\n    {\n      id: \"N\",\n      description: \"Não\",\n    },\n  ];\n  return data;\n};\n\nexport const getSAProfileCollection = async (\n  environment: string,\n  param: string,\n  take: string\n): Promise<IData[]> => {\n  console.log(`searching on ${environment}`);\n  const url = `${API_BASE_URL}/sap/profiles/search/${environment}?param=${param}&take=${take}`;\n  console.log(`searching on ${url}`);\n  const response = await fetch(url);\n  const data = await response.json();\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const mapeddata = data.map((value: any) => {\n    return { id: value.profile_name, description: value.profile_description };\n  });\n\n  return mapeddata;\n};\n","/* eslint-disable react/require-default-props */\n/* eslint-disable react/jsx-props-no-spreading */\nimport { InputProps } from \"@material-ui/core\";\nimport TextField from \"@mui/material/TextField\";\nimport { useField } from \"formik\";\nimport React from \"react\";\n\ninterface IProps {\n  name: string;\n  label: string;\n  fullWidth: boolean;\n  inputProps: InputProps;\n  error?: boolean;\n  helperText?: string;\n  labelWithId?: boolean;\n  multiline?: boolean;\n  maxRows?: number;\n}\n\nexport default function InputText({\n  labelWithId,\n  inputProps,\n  name,\n  ...otherProps\n}: IProps): JSX.Element {\n  const [field, mata] = useField(name);\n\n  const configTextField = {\n    ...field,\n    ...otherProps,\n  };\n\n  if (mata && mata.touched && mata.error) {\n    configTextField.error = true;\n    configTextField.helperText = mata.error;\n  }\n  if (field.value) {\n    if (typeof field.value === \"object\") {\n      configTextField.value = labelWithId\n        ? `${field.value.id}-${field.value.description}`\n        : field.value.description;\n    }\n  }\n  return (\n    <TextField\n      id={name}\n      defaultValue={configTextField.value}\n      InputProps={inputProps}\n      {...configTextField}\n    />\n  );\n}\n","import CheckBoxAS400Access from \"./CheckBoxAS400Access\";\nimport CheckBoxAutoComplete from \"./CheckBoxAutoComplete\";\nimport InputAutoComplete from \"./InputAutoComplete\";\nimport InputDatePicker from \"./InputDatePicker\";\nimport InputEmployee from \"./InputEmployee\";\nimport InputSAPProfiles from \"./InputSAPProfiles\";\nimport InputSelect from \"./InputSelect\";\nimport InputText from \"./InputText\";\n\nconst FormikControls = {\n  InputText,\n  InputSelect,\n  InputEmployee,\n  InputSAPProfiles,\n  InputDatePicker,\n  InputAutoComplete,\n  CheckBoxAutoComplete,\n  CheckBoxAS400Access,\n};\n\nexport default FormikControls;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport {\n  ISelectData,\n  IAS400RoutineData,\n  IAS400Profile,\n} from \"../../pages/RequestStepForm/components/Interface\";\n\nconst API_BASE_URL = process.env.REACT_APP_API_SAS_URL;\n\nexport const enum EServiceIds {\n  AddProfile = \"06\",\n  ExcludeProfile = \"20\",\n  CreateUser = \"01\",\n  BlockUser = \"13\",\n  CopyUser = \"193\",\n}\n\nexport const getAS400ServiceTypeCollection = async (\n  id?: string\n): Promise<ISelectData[]> => {\n  return [\n    {\n      id: EServiceIds.AddProfile,\n      description: \"Liberação de Acesso\",\n    },\n\n    {\n      id: EServiceIds.ExcludeProfile,\n      description: \"Exclusão de Acesso\",\n    },\n    {\n      id: EServiceIds.CopyUser,\n      description: \"Duplicação de Acesso\",\n    },\n  ];\n};\n\nexport const enum EUserTypes {\n  New = \"S\",\n  Existent = \"N\",\n}\n\nexport const getAS400JobPositionCollection = async (\n  id?: string\n): Promise<ISelectData[]> => {\n  const url = `${API_BASE_URL}/as400/profiles`;\n  const response = await fetch(url);\n  const data = await response.json();\n  const profiles = data\n    .map((value: any) => {\n      return { id: value.profile, description: value.profile };\n    })\n    .sort((a: any, b: any) => a.id - b.id);\n\n  return profiles;\n};\n\nexport const getAS400JobPosition = async (\n  id?: string\n): Promise<IAS400Profile[]> => {\n  const url = `${API_BASE_URL}/as400/profiles/${id}`;\n  const response = await fetch(url);\n  const data = await response.json();\n\n  return data;\n};\n\nexport const getAS400YesNoCollection = async (\n  id?: string\n): Promise<ISelectData[]> => {\n  const data = [\n    {\n      id: EUserTypes.New,\n      description: \"Sim\",\n    },\n    {\n      id: EUserTypes.Existent,\n      description: \"Não\",\n    },\n  ];\n  return data;\n};\n\nexport const getAS400UserTypeCollection = async (\n  id?: string\n): Promise<ISelectData[]> => {\n  const data = [\n    {\n      id: EUserTypes.New,\n      description: \"Sim\",\n    },\n    {\n      id: EUserTypes.Existent,\n      description: \"Não\",\n    },\n  ];\n  return data;\n};\n\nexport const getAS400UsersByNameCollection = async (\n  name: string\n): Promise<ISelectData[]> => {\n  const url = `${API_BASE_URL}/as400/users/${name}`;\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n};\n\nexport const getAS400EnvironmentCollection = async (\n  id?: string\n): Promise<ISelectData[]> => {\n  const data = [\n    {\n      id: \"BRCOIBB1\",\n      description: \"Legado Citros Produção\",\n    },\n    {\n      id: \"BRCOIBB2\",\n      description: \"Legado Citros Desenvolvimento\",\n    },\n    {\n      id: \"BRCOISP1\",\n      description: \"Produção\",\n    },\n    {\n      id: \"BRCOISP2\",\n      description: \"Qualidade\",\n    },\n    {\n      id: \"BRCOISP5\",\n      description: \"Desenvolvimento\",\n    },\n  ];\n  return data;\n};\nexport const getAS400SystemCollection = async (\n  id?: string\n): Promise<ISelectData[]> => {\n  const url = `${API_BASE_URL}/as400/systems`;\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n};\n\nexport const getAS400RoutineCollection = async (\n  id?: string\n): Promise<IAS400RoutineData[]> => {\n  const url = `${API_BASE_URL}/as400/systems/${id}`;\n  const response = await fetch(url);\n  const data = await response.json();\n\n  const mapeddata = data.routines\n    .map(\n      ({\n        routine_id,\n        description,\n        system_id,\n        access_type,\n        access_observation,\n        limited_access,\n        restricted_access,\n      }: any) => {\n        return {\n          id: routine_id,\n          description,\n          system_id,\n          access_type: access_type.trim(),\n          access_observation,\n          limited_access,\n          restricted_access,\n        };\n      }\n    )\n    .sort((a: any, b: any) => a.id - b.id);\n\n  return mapeddata;\n};\n\nexport const getCompanyOnlyCollection = async (\n  id?: string\n): Promise<ISelectData[]> => {\n  const url = `${API_BASE_URL}/as400/companies`;\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n};\n\nexport const getBranchOnlyCollection = async (\n  id?: string\n): Promise<ISelectData[]> => {\n  if (id) {\n    const url = `${API_BASE_URL}/as400/companies/${id}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    const branch = data.branchs\n      .map((value: any) => {\n        return { id: value.id, description: value.branch_name };\n      })\n      .sort((a: any, b: any) => parseInt(a.id, 10) - parseInt(b.id, 10));\n\n    return branch;\n  }\n\n  return [];\n};\n\nexport const getRegionCollection = async (\n  id?: string\n): Promise<ISelectData[]> => {\n  const url = `${API_BASE_URL}/as400/regions`;\n  const response = await fetch(url);\n  const data = await response.json();\n  const regions = data\n    .map((value: any) => {\n      return { id: value.id, description: value.region_name };\n    })\n    .sort((a: any, b: any) => parseInt(a.id, 10) - parseInt(b.id, 10));\n\n  return regions;\n};\n","/* eslint-disable react/require-default-props */\n/* eslint-disable react/jsx-props-no-spreading */\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport TextField from \"@mui/material/TextField\";\nimport { useField, useFormikContext } from \"formik\";\nimport * as React from \"react\";\n\nimport { ISelectData } from \"../../pages/RequestStepForm/components/Interface\";\nimport InputText from \"./InputText\";\n\ninterface IProps {\n  label: string;\n  name: string;\n  labelWithId: boolean;\n  getOptions?: (id?: string) => Promise<ISelectData[]>;\n  optionsPrimaryKey?: string | undefined;\n  onChangeCleanFieldName?: string | undefined;\n  editMode: boolean;\n  defaultOptions?: ISelectData[];\n}\n\ninterface IError {\n  error?: boolean;\n  helperText?: string;\n}\n\nexport default function InputSelect(props: IProps): JSX.Element {\n  const {\n    label,\n    name,\n    labelWithId,\n    optionsPrimaryKey,\n    onChangeCleanFieldName,\n    editMode,\n    defaultOptions,\n    getOptions,\n  } = props;\n\n  const [field, mata] = useField(name);\n  const { setFieldValue, setTouched } = useFormikContext();\n\n  const getInputValue = (): string => {\n    if (field.value) {\n      return labelWithId\n        ? `${field.value.id}-${field.value.description}`\n        : field.value.id;\n    }\n    return \"\";\n  };\n\n  const [inputValue, setInputValue] = React.useState(getInputValue());\n\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState<readonly ISelectData[]>([]);\n  const loading = open && options.length === 0;\n\n  const configTextField: IError = {};\n\n  if (mata && mata.touched && mata.error) {\n    configTextField.error = true;\n    configTextField.helperText = mata.error;\n  }\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n      if (active) {\n        if (defaultOptions) {\n          setOptions([...defaultOptions]);\n        } else if (getOptions) {\n          const data = await getOptions(optionsPrimaryKey);\n          setOptions([...data]);\n          if (data.length === 1) setFieldValue(name, data[0]);\n        }\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  return (\n    <>\n      {!editMode && (\n        <InputText\n          name={name}\n          label={label}\n          fullWidth\n          labelWithId={labelWithId}\n          inputProps={{\n            readOnly: true,\n          }}\n        />\n      )}\n      {editMode && (\n        <Autocomplete\n          id={name}\n          autoComplete\n          {...field}\n          inputValue={inputValue}\n          open={open}\n          onOpen={() => {\n            setOpen(true);\n          }}\n          onClose={() => {\n            setOpen(false);\n          }}\n          onBlur={() => setTouched({ [name]: true })}\n          isOptionEqualToValue={(option, value) => {\n            return (\n              option.id === value.id ||\n              option.description.toUpperCase() ===\n                value.description.toUpperCase()\n            );\n          }}\n          getOptionLabel={(option) => {\n            if (option.description === \"\") return \"\";\n\n            return labelWithId\n              ? `${option.id}-${option.description}`\n              : option.description;\n          }}\n          options={options}\n          loading={loading}\n          onChange={(event, value) => {\n            setFieldValue(name, value);\n\n            if (onChangeCleanFieldName) {\n              console.log(`cleaning ${onChangeCleanFieldName}`);\n              setFieldValue(onChangeCleanFieldName, {\n                id: \"\",\n                description: \"\",\n              });\n            }\n          }}\n          onInputChange={(event, newInputValue) => {\n            setInputValue(newInputValue);\n          }}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label={label}\n              InputProps={{\n                ...params.InputProps,\n                endAdornment: (\n                  <>\n                    {loading ? (\n                      <CircularProgress color=\"inherit\" size={20} />\n                    ) : null}\n                    {params.InputProps.endAdornment}\n                  </>\n                ),\n              }}\n              {...configTextField}\n            />\n          )}\n        />\n      )}\n    </>\n  );\n}\n","/* eslint-disable react/jsx-props-no-spreading */\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport { useField, useFormikContext } from \"formik\";\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport throttle from \"lodash/throttle\";\nimport * as React from \"react\";\n\nimport { IEmployeeData } from \"../../pages/RequestStepForm/components/Interface\";\n\ninterface IError {\n  error?: boolean;\n  helperText?: string;\n}\n\ninterface IProps {\n  name: string;\n  label: string;\n  labelWithId: boolean;\n  // eslint-disable-next-line react/require-default-props\n  helperText?: string;\n  getOptions: (param: string) => Promise<IEmployeeData[]>;\n  setLabelOption: (option: IEmployeeData) => string;\n  setLabelHintOptions: (option: IEmployeeData) => string;\n}\n\nexport default function InputEmployee(props: IProps): JSX.Element {\n  const {\n    label,\n    name,\n    helperText,\n    getOptions,\n    setLabelOption,\n    setLabelHintOptions,\n  } = props;\n\n  const [field, mata] = useField(name);\n  const { setFieldValue } = useFormikContext();\n  const [inputValue, setInputValue] = React.useState(\n    setLabelOption(field.value)\n  );\n  const [options, setOptions] = React.useState<readonly IEmployeeData[]>([]);\n\n  const configTextField: IError = {};\n\n  if (mata && mata.touched && mata.error) {\n    configTextField.error = true;\n    configTextField.helperText = mata.error;\n  }\n\n  const getResults = React.useMemo(\n    () =>\n      throttle(\n        async (\n          request: { input: string },\n          callback: (results?: readonly IEmployeeData[]) => void\n        ) => {\n          const data = await getOptions(request.input);\n          callback(data);\n        },\n        200\n      ),\n    []\n  );\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (inputValue === \"\") {\n      return undefined;\n    }\n\n    getResults({ input: inputValue }, (results?: readonly IEmployeeData[]) => {\n      if (active) {\n        let newOptions: readonly IEmployeeData[] = [];\n\n        if (results) {\n          newOptions = [...newOptions, ...results];\n        }\n        setOptions(newOptions);\n      }\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [field.value, inputValue, getResults]);\n\n  return (\n    <Autocomplete\n      id={name}\n      getOptionLabel={(option) => setLabelOption(option)}\n      filterOptions={(x) => x}\n      options={options}\n      autoComplete\n      filterSelectedOptions\n      {...field}\n      inputValue={inputValue}\n      onChange={(\n        event: React.SyntheticEvent,\n        newValue: IEmployeeData | null\n      ) => {\n        setFieldValue(name, newValue);\n        setFieldValue(\"request.updateEmployee\", true);\n      }}\n      onInputChange={(event, newInputValue) => {\n        setInputValue(newInputValue);\n      }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label={label}\n          fullWidth\n          helperText={helperText}\n          {...configTextField}\n        />\n      )}\n      renderOption={(props, option) => {\n        return (\n          <li {...props}>\n            <Grid container alignItems=\"center\">\n              <Grid item>\n                <Box\n                  component={AccountCircle}\n                  sx={{ color: \"text.secondary\", mr: 2 }}\n                />\n              </Grid>\n              <Grid item xs>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  {setLabelHintOptions(option)}\n                </Typography>\n              </Grid>\n            </Grid>\n          </li>\n        );\n      }}\n    />\n  );\n}\n","/* eslint-disable react/jsx-props-no-spreading */\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from \"@mui/material/TextField\";\nimport { useField, useFormikContext } from \"formik\";\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport throttle from \"lodash/throttle\";\nimport * as React from \"react\";\n\nimport { ISelectData } from \"../../pages/RequestStepForm/components/Interface\";\nimport * as sapRequestServices from \"../../services/data/SAPRequestServices\";\n\ninterface IProps {\n  name: string;\n  label: string;\n  placeHolder: string;\n  parentValue: string | \"ECC\";\n  editMode: boolean;\n  addToTable: boolean;\n  handleProfileChange: (values: ISelectData[]) => void;\n  disabledOptions: ISelectData[];\n}\n\ninterface IError {\n  error?: boolean;\n  helperText?: string;\n}\n\nexport default function InputSAPProfiles({\n  name,\n  label,\n  placeHolder,\n  parentValue,\n  addToTable,\n  handleProfileChange,\n  disabledOptions,\n}: IProps): JSX.Element {\n  const [options, setOptions] = React.useState<readonly ISelectData[]>([]);\n  // const [value, setValue] = React.useState<ISelectData[]>([]);\n\n  const [field, mata] = useField(name);\n  const { setFieldValue } = useFormikContext();\n  const [inputValue, setInputValue] = React.useState(\"\");\n\n  const configTextField: IError = {};\n\n  if (mata && mata.touched && mata.error) {\n    configTextField.error = true;\n    configTextField.helperText = mata.error;\n  }\n\n  const getResults = React.useMemo(\n    () =>\n      throttle(\n        async (\n          request: { input: string },\n          callback: (results?: readonly ISelectData[]) => void\n        ) => {\n          const data = await sapRequestServices.getSAProfileCollection(\n            parentValue,\n            request.input,\n            \"20\"\n          );\n          callback(data);\n        },\n        200\n      ),\n    [parentValue]\n  );\n\n  React.useEffect(() => {\n    let active = true;\n\n    // user typed nothing, therefore can not search\n    if (inputValue === \"\") {\n      setOptions(field.value || []);\n      return undefined;\n    }\n\n    getResults({ input: inputValue }, (results?: readonly ISelectData[]) => {\n      if (active) {\n        let newOptions: readonly ISelectData[] = [];\n\n        if (results) {\n          newOptions = [...newOptions, ...results];\n        }\n        setOptions(newOptions);\n      }\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [field.value, inputValue, getResults]);\n\n  return (\n    <Autocomplete\n      multiple\n      id={name}\n      {...field}\n      inputValue={inputValue}\n      options={options}\n      getOptionLabel={(option) => `${option.id} - ${option.description}`}\n      filterSelectedOptions\n      onChange={(event: React.SyntheticEvent, value: ISelectData[]) => {\n        setFieldValue(name, value);\n        if (addToTable) {\n          handleProfileChange(value);\n        }\n      }}\n      onInputChange={(event: React.SyntheticEvent, newInputValue) => {\n        setInputValue(newInputValue);\n      }}\n      getOptionDisabled={(option) => {\n        const values = [...field.value, ...disabledOptions];\n        const valueAlreadySelected = values.find((value) => {\n          return value.id === option.id;\n        });\n        return !!valueAlreadySelected;\n      }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label={`${label} ${parentValue}`}\n          placeholder={placeHolder}\n        />\n      )}\n    />\n  );\n}\n","/* eslint-disable react/jsx-props-no-spreading */\nimport TextField from \"@mui/material/TextField\";\nimport { useField } from \"formik\";\nimport * as React from \"react\";\n\ninterface IProps {\n  label: string;\n  name: string;\n}\ninterface IError {\n  error?: boolean;\n  helperText?: string;\n}\n\nexport default function InputDatePicker({\n  label,\n  ...otherprops\n}: IProps): JSX.Element {\n  const [field, mata] = useField(otherprops.name);\n\n  const configError: IError = {};\n\n  if (mata && mata.touched && mata.error) {\n    configError.error = true;\n    configError.helperText = mata.error;\n  }\n\n  const configTextField = {\n    ...field,\n    ...otherprops,\n    ...configError,\n  };\n\n  return (\n    <TextField\n      label={label}\n      type=\"date\"\n      sx={{ width: 180 }}\n      InputLabelProps={{\n        shrink: true,\n      }}\n      {...configTextField}\n    />\n  );\n}\n","/* eslint-disable react/jsx-props-no-spreading */\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport { useField, useFormikContext } from \"formik\";\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport throttle from \"lodash/throttle\";\nimport * as React from \"react\";\n\nimport { ISelectData } from \"../../pages/RequestStepForm/components/Interface\";\n\ninterface IProps {\n  name: string;\n  label: string;\n  labelWithId: boolean;\n  helperText: string;\n  getOptions: (param: string) => Promise<ISelectData[]>;\n  // eslint-disable-next-line react/require-default-props\n  disabledOptions?: ISelectData[];\n}\ninterface IError {\n  error?: boolean;\n  helperText?: string;\n}\n\nexport default function InputAutoComplete(props: IProps): JSX.Element {\n  const { name, label, labelWithId, helperText, getOptions, disabledOptions } =\n    props;\n\n  const [options, setOptions] = React.useState<readonly ISelectData[]>([]);\n\n  const [field, mata] = useField(name);\n  const { setFieldValue } = useFormikContext();\n  const [inputValue, setInputValue] = React.useState(\"\");\n\n  const configTextField: IError = {};\n\n  if (mata && mata.touched && mata.error) {\n    configTextField.error = true;\n    configTextField.helperText = mata.error;\n  }\n\n  const setLabelOption = (option: ISelectData) => {\n    if (labelWithId)\n      return option.id !== \"\" ? `${option.id} - ${option.description}` : \"\";\n    return option.id;\n  };\n\n  const getResults = React.useMemo(\n    () =>\n      throttle(\n        async (\n          request: { input: string },\n          callback: (results?: readonly ISelectData[]) => void\n        ) => {\n          const data = await getOptions(request.input);\n          callback(data);\n        },\n        200\n      ),\n    []\n  );\n  React.useEffect(() => {\n    let active = true;\n\n    if (inputValue === \"\" || inputValue === \" - \") {\n      setOptions(field.value ? [field.value] : []);\n      return undefined;\n    }\n\n    getResults({ input: inputValue }, (results?: readonly ISelectData[]) => {\n      if (active) {\n        let newOptions: readonly ISelectData[] = [];\n\n        if (field.value) {\n          newOptions = [field.value];\n        }\n\n        if (results) {\n          newOptions = [...newOptions, ...results];\n        }\n        setOptions(newOptions);\n      }\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [field.value, inputValue, getResults]);\n\n  return (\n    <Autocomplete\n      id={name}\n      {...field}\n      inputValue={inputValue}\n      getOptionLabel={setLabelOption}\n      filterOptions={(x) => x}\n      options={options}\n      autoComplete\n      filterSelectedOptions\n      getOptionDisabled={(option) => {\n        const result = disabledOptions?.find((value) => value.id === option.id);\n        return !!result;\n      }}\n      fullWidth\n      multiple={false}\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      onChange={(event: any, newValue: ISelectData | null) => {\n        setOptions(newValue ? [newValue, ...options] : options);\n        console.log(\"chamando o onchange pai\");\n        setFieldValue(name, newValue);\n      }}\n      onInputChange={(event, newInputValue) => {\n        setInputValue(newInputValue);\n      }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label={label}\n          fullWidth\n          helperText={helperText}\n          {...configTextField}\n        />\n      )}\n      renderOption={(props, option) => {\n        return (\n          <li {...props}>\n            <Grid container alignItems=\"center\">\n              <Grid item>\n                <Box\n                  component={AccountCircle}\n                  sx={{ color: \"text.secondary\", mr: 2 }}\n                />\n              </Grid>\n              <Grid item xs>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  {setLabelOption(option)}\n                </Typography>\n              </Grid>\n            </Grid>\n          </li>\n        );\n      }}\n    />\n  );\n}\n","import Checkbox from \"@mui/material/Checkbox\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport { useField, useFormikContext } from \"formik\";\nimport * as React from \"react\";\n\ninterface IProps {\n  name: string;\n}\n\nexport default function CheckBoxAS400Access({ name }: IProps): JSX.Element {\n  const [field] = useField(name);\n  const { setFieldValue } = useFormikContext();\n\n  const { inc, exc, alt, con } = field.value;\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const { checked } = evt.target;\n\n    const access = {\n      ...field.value,\n      [evt.target.name]: checked,\n    };\n    if (!access.inc && !access.exc && !access.alt) access.con = true;\n    setFieldValue(name, access);\n  };\n\n  return (\n    // MuiFormControlLabel-root\n    <FormControl component=\"fieldset\">\n      <FormGroup aria-label=\"position\" row>\n        <FormControlLabel\n          value=\"I\"\n          control={\n            <Checkbox\n              size=\"small\"\n              checked={inc}\n              onChange={handleChange}\n              name=\"inc\"\n            />\n          }\n          label=\"Inc\"\n          labelPlacement=\"top\"\n          sx={{\n            marginLeft: \"4px\",\n            marginRight: \"4px\",\n          }}\n        />\n        <FormControlLabel\n          value=\"E\"\n          control={\n            <Checkbox\n              size=\"small\"\n              checked={exc}\n              onChange={handleChange}\n              name=\"exc\"\n            />\n          }\n          label=\"Exc\"\n          labelPlacement=\"top\"\n          sx={{\n            marginLeft: \"4px\",\n            marginRight: \"4px\",\n          }}\n        />\n        <FormControlLabel\n          value=\"A\"\n          control={\n            <Checkbox\n              size=\"small\"\n              checked={alt}\n              onChange={handleChange}\n              name=\"alt\"\n            />\n          }\n          label=\"Alt\"\n          labelPlacement=\"top\"\n          sx={{\n            marginLeft: \"4px\",\n            marginRight: \"4px\",\n          }}\n        />\n        <FormControlLabel\n          value=\"C\"\n          control={\n            <Checkbox\n              size=\"small\"\n              checked={con}\n              onChange={handleChange}\n              name=\"con\"\n            />\n          }\n          label=\"Con\"\n          labelPlacement=\"top\"\n          sx={{\n            marginLeft: \"4px\",\n            marginRight: \"4px\",\n          }}\n        />\n      </FormGroup>\n    </FormControl>\n  );\n}\n","import AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SecurityIcon from \"@material-ui/icons/Security\";\nimport VpnKey from \"@material-ui/icons/VpnKey\";\nimport { Button } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  DataGrid,\n  GridCellParams,\n  GridColDef,\n  GridValueGetterParams,\n  GridToolbarContainer,\n  GridSelectionModel,\n} from \"@mui/x-data-grid\";\nimport { useFormikContext } from \"formik\";\nimport * as React from \"react\";\n\nimport Controls from \"../../../../components/controlsformik/FormikControls\";\nimport * as as400RequestServices from \"../../../../services/data/AS400RequestServices\";\nimport { IRequestEmployee } from \"../Interface\";\n\ninterface IProps {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  rows: any;\n  removeProfile: (id: number[]) => void;\n  updateProfile: (\n    id: number[],\n    company?: string,\n    branchs?: string[],\n    regions?: string[],\n    access?: { inc: boolean; exc: boolean; alt: boolean; con: boolean }\n  ) => void;\n  addProfiles: (\n    company: string,\n    branchs: string[],\n    regions: string[],\n    access: { inc: boolean; exc: boolean; alt: boolean; con: boolean }\n  ) => void;\n}\n\nconst columns: GridColDef[] = [\n  { field: \"id\", headerName: \"ID\", width: 30 },\n  { field: \"service_type\", headerName: \"Serv.\", width: 100 },\n  {\n    field: \"environment\",\n    headerName: \"Ambiente\",\n    width: 110,\n  },\n  { field: \"user_id\", headerName: \"User ID\", width: 130 },\n  { field: \"system\", headerName: \"Sistema\", width: 130 },\n  { field: \"routine\", headerName: \"Rotina\", width: 130 },\n  { field: \"security_type\", headerName: \"Tipo Seg.\", width: 130 },\n  {\n    field: \"company\",\n    headerName: \"empresa\",\n    minWidth: 130,\n    valueGetter: (params: GridValueGetterParams) => {\n      const security_type = params.getValue(params.id, \"security_type\");\n      if (security_type === \"EF\")\n        return `${params.getValue(params.id, \"security_company\") || \"\"}`;\n      return \"--\";\n    },\n  },\n  {\n    field: \"branch\",\n    headerName: \"Filial\",\n    minWidth: 130,\n    valueGetter: (params: GridValueGetterParams) => {\n      const security_type = params.getValue(params.id, \"security_type\");\n      if (security_type === \"EF\")\n        return `${params.getValue(params.id, \"security_branchs\") || \"\"}`;\n      return \"--\";\n    },\n  },\n  {\n    field: \"region\",\n    headerName: \"Região\",\n    minWidth: 130,\n    valueGetter: (params: GridValueGetterParams) => {\n      const security_type = params.getValue(params.id, \"security_type\");\n      if (security_type === \"R\")\n        return `${params.getValue(params.id, \"security_regions\") || \"\"}`;\n\n      return \"--\";\n    },\n  },\n\n  { field: \"access\", headerName: \"Acesso\", width: 130 },\n  {\n    field: \"removeprofileaction\",\n    headerName: \"\",\n    renderCell: () => {\n      return (\n        <Button variant=\"contained\" color=\"error\" startIcon={<DeleteIcon />} />\n      );\n    },\n  },\n];\n\ninterface IToolBarProps {\n  selectionModel: GridSelectionModel;\n  removeProfile: (id: number[]) => void;\n  updateProfile: (\n    id: number[],\n    company?: string,\n    branchs?: string[],\n    regions?: string[],\n    access?: { inc: boolean; exc: boolean; alt: boolean; con: boolean }\n  ) => void;\n  addProfiles: (\n    company: string,\n    branchs: string[],\n    regions: string[],\n    access: { inc: boolean; exc: boolean; alt: boolean; con: boolean }\n  ) => void;\n}\n\nfunction CustomToolbar(props: IToolBarProps) {\n  const { selectionModel, removeProfile, updateProfile, addProfiles } = props;\n  const { values, setFieldValue } = useFormikContext<IRequestEmployee>();\n\n  const handleDeleteClick = () => {\n    const ids = selectionModel.map((value) => parseInt(value.toString(), 10));\n    removeProfile(ids);\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const checkFieldNotNull = (field: any) => {\n    if (!field) return false;\n    if (field.id === \"\") return false;\n    if (field === \"\") return false;\n    return true;\n  };\n\n  const handleClick = (type = \"Access\") => {\n    const ids = selectionModel.map((value) => parseInt(value.toString(), 10));\n    const { company, branch, region, access } = values.as400;\n    if (ids) {\n      if (type === \"Security\") {\n        if (\n          checkFieldNotNull(company) &&\n          checkFieldNotNull(branch) &&\n          checkFieldNotNull(region)\n        )\n          updateProfile(ids, company.id, [branch.id], [region.id]);\n        else {\n          // eslint-disable-next-line no-alert\n          window.alert(\"Informe a empresa, filial e região\");\n        }\n      } else {\n        updateProfile(ids, undefined, undefined, undefined, access);\n      }\n    }\n  };\n\n  const handleAddClick = () => {\n    const { company, branch, region, access } = values.as400;\n    if (\n      checkFieldNotNull(company) &&\n      checkFieldNotNull(branch) &&\n      checkFieldNotNull(region)\n    )\n      addProfiles(company.id, [branch.id], [region.id], access);\n    // eslint-disable-next-line no-alert\n    else window.alert(\"Informe a empresa, filial e região\");\n  };\n\n  React.useEffect(() => {\n    console.log(\"mudou a empresa\");\n    setFieldValue(\"as400.branch\", { id: \"\", description: \"\" });\n  }, [values.as400.company]);\n\n  return (\n    <GridToolbarContainer>\n      <Grid container justifyContent=\"space-between\" spacing={2}>\n        <Grid item xs={12}>\n          <Grid container spacing={1}>\n            <Grid item xs={2}>\n              <Controls.InputSelect\n                name=\"as400.company\"\n                label=\"Empresa\"\n                labelWithId\n                getOptions={as400RequestServices.getCompanyOnlyCollection}\n                editMode\n              />\n            </Grid>\n            <Grid item xs={2}>\n              <Controls.InputSelect\n                label=\"Filial\"\n                name=\"as400.branch\"\n                labelWithId\n                getOptions={as400RequestServices.getBranchOnlyCollection}\n                optionsPrimaryKey={values.as400.company.id}\n                editMode\n              />\n            </Grid>\n            <Grid item xs={2}>\n              <Controls.InputSelect\n                name=\"as400.region\"\n                label=\"Região\"\n                labelWithId\n                getOptions={as400RequestServices.getRegionCollection}\n                editMode\n              />\n            </Grid>\n            <Grid item sx={{ paddingLeft: \"20px\" }}>\n              <Controls.CheckBoxAS400Access name=\"as400.access\" />\n              <Button\n                onClick={() => {\n                  handleAddClick();\n                }}\n                variant=\"contained\"\n                startIcon={<AddShoppingCartIcon />}\n              >\n                Adicionar\n              </Button>\n              <Button\n                onClick={() => {\n                  handleClick(\"Security\");\n                }}\n                variant=\"contained\"\n                startIcon={<SecurityIcon />}\n              >\n                Segurança\n              </Button>\n              <Button\n                onClick={() => {\n                  handleClick();\n                }}\n                variant=\"contained\"\n                startIcon={<VpnKey />}\n              >\n                Acesso\n              </Button>\n              <Button\n                onClick={() => {\n                  handleDeleteClick();\n                }}\n                variant=\"contained\"\n                startIcon={<DeleteIcon />}\n              >\n                Remover\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </GridToolbarContainer>\n  );\n}\n\nexport default function AS400RequestTable({\n  rows,\n  removeProfile,\n  updateProfile,\n  addProfiles,\n}: IProps): JSX.Element {\n  const currentlySelected = (params: GridCellParams) => {\n    const value = params.colDef.field;\n    if (value === \"removeprofileaction\") {\n      const id = params.getValue(params.id, \"id\");\n      if (id) {\n        removeProfile([parseInt(id.toString(), 10)]);\n      }\n    }\n    return \"\";\n  };\n\n  const [selectionModel, setSelectionModel] =\n    React.useState<GridSelectionModel>([]);\n\n  return (\n    <div style={{ height: 450, width: \"100%\" }}>\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        pageSize={100}\n        rowsPerPageOptions={[5, 10, 30]}\n        checkboxSelection\n        onCellClick={currentlySelected}\n        onSelectionModelChange={(newSelectionModel) => {\n          setSelectionModel(newSelectionModel);\n        }}\n        selectionModel={selectionModel}\n        components={{\n          Toolbar: CustomToolbar,\n        }}\n        componentsProps={{\n          toolbar: {\n            selectionModel,\n            removeProfile,\n            updateProfile,\n            addProfiles,\n          },\n        }}\n      />\n    </div>\n  );\n}\n","import Grid from \"@mui/material/Grid\";\nimport { useFormikContext } from \"formik\";\nimport React from \"react\";\n\nimport Controls from \"../../../../components/controlsformik/FormikControls\";\nimport * as as400RequestServices from \"../../../../services/data/AS400RequestServices\";\nimport { EServiceIds as ServiceId } from \"../../../../services/data/AS400RequestServices\";\nimport { IRequestEmployee, IAS400RoutineData } from \"../Interface\";\nimport AS400RequestTable from \"./AS400RequestTable\";\n\nexport default function AS400RequestForm(): JSX.Element {\n  const { values, setFieldValue } = useFormikContext<IRequestEmployee>();\n  const { as400 } = values;\n\n  const setAccess = (access: {\n    inc: boolean;\n    exc: boolean;\n    alt: boolean;\n    con: boolean;\n  }) => {\n    const include = access.inc ? \"S\" : \"N\";\n    const exclude = access.exc ? \"S\" : \"N\";\n    const change = access.alt ? \"S\" : \"N\";\n\n    return `${include} ${exclude} ${change}`;\n  };\n\n  const handleAddJobPositionClick = async (\n    company: string,\n    branchs: string[],\n    regions: string[]\n  ) => {\n    const profile = await as400RequestServices.getAS400JobPosition(\n      as400.job_position.id\n    );\n    const rows = profile.map((value, index) => {\n      const item = {\n        id: index,\n        service_type: as400.service_type.id,\n        environment: as400.environment.id,\n        user_id: as400.user_id.id,\n        system: value.system_id,\n        routine: value.routine_id,\n        security_type: value.access_type,\n        security_company: value.company === \"XX\" ? company : value.company,\n        security_branchs: value.branch === \"XXX\" ? branchs : value.branch,\n        security_regions: value.region === \"XXX\" ? regions : \"\",\n        security_text: \"\",\n        job_position: as400.job_position.id,\n        access: `${value.inc}${value.exc}${value.alt}`,\n      };\n      return item;\n    });\n    console.log(\"new array\");\n    console.log(rows);\n    setFieldValue(\"as400.table\", [...rows]);\n  };\n\n  const handleUpdateAS400Table = (\n    ids: number[],\n    company?: string,\n    branchs?: string[],\n    regions?: string[],\n    access?: { inc: boolean; exc: boolean; alt: boolean; con: boolean }\n  ) => {\n    const { table } = as400;\n\n    if (table) {\n      console.log(ids);\n      console.log(table);\n      ids.forEach((id) => {\n        console.log(id);\n        const pos = id - 1;\n        table[pos].security_company = company || table[pos].security_company;\n        table[pos].security_branchs = branchs || table[pos].security_branchs;\n        table[pos].security_regions = regions || table[pos].security_regions;\n        table[pos].access = access ? setAccess(access) : table[pos].access;\n      });\n    }\n    setFieldValue(\"as400.table\", table);\n  };\n\n  const handleAddAS400Table = (\n    company: string,\n    branchs: string[],\n    regions: string[],\n    access: { inc: boolean; exc: boolean; alt: boolean; con: boolean }\n  ) => {\n    const {\n      service_type,\n      environment,\n      user_id,\n      system,\n      routines,\n      is_job_position,\n    } = as400;\n\n    if (is_job_position.id === \"S\") {\n      handleAddJobPositionClick(company, branchs, regions);\n    } else {\n      const addroutines = routines?.map((value: IAS400RoutineData) => {\n        const item = {\n          id: 0,\n          service_type: service_type.id,\n          environment: environment.id,\n          user_id: user_id.id,\n          system: system.id,\n          routine: value.id,\n          security_type: value.access_type,\n          security_company: company,\n          security_branchs: branchs,\n          security_regions: regions,\n          security_text: value.access_observation\n            ? value.access_observation\n            : \"\",\n          job_position: \"\",\n          access: setAccess(access),\n        };\n        return item;\n      });\n\n      const table = [...as400.table, ...addroutines];\n      console.log(table);\n\n      const uniqueData = Array.from(\n        table\n          .reduce(\n            (map, obj) =>\n              map.set(\n                `${obj.system}${obj.routine}${obj.security_company}${obj.security_branchs}`,\n                obj\n              ),\n            new Map()\n          )\n          .values()\n      );\n      // const i = 0;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      uniqueData.sort((a: any, b: any) => a.routine - b.routine);\n      const fixId = uniqueData.map((value, index) => {\n        // eslint-disable-next-line no-param-reassign\n        value.id = index + 1;\n        return value;\n      });\n\n      setFieldValue(\"as400.table\", [...fixId]);\n    }\n  };\n\n  const handleInputAS400TableItemRemoval = (id: number[]) => {\n    const new_table = as400.table.filter((value) => {\n      const index = id.indexOf(value.id);\n      return index < 0;\n    });\n\n    new_table.map((value, index) => {\n      // eslint-disable-next-line no-param-reassign\n      value.id = index + 1;\n      return value;\n    });\n    setFieldValue(\"as400.table\", [...new_table]);\n  };\n\n  React.useEffect(() => {\n    if (as400.service_type?.id === ServiceId.ExcludeProfile) {\n      setFieldValue(\"as400.user_type\", { id: \"N\", description: \"Não\" });\n    }\n  }, [as400.service_type]);\n\n  React.useEffect(() => {\n    setFieldValue(\"as400.branch\", { id: \"\", description: \"\" });\n  }, [as400.company]);\n\n  React.useEffect(() => {\n    if (as400.user_type?.id === \"S\")\n      setFieldValue(\"as400.user_id\", {\n        id: \"NovoUsuario\",\n        description: \"Novo Usuário\",\n      });\n    else if (as400.user_id?.id === \"NovoUsuario\")\n      setFieldValue(\"as400.user_id\", {\n        id: \"\",\n        description: \"\",\n      });\n  }, [as400.user_type]);\n\n  return (\n    <Grid container justifyContent=\"space-between\" spacing={2}>\n      <Grid item xs={6}>\n        <Grid container spacing={1}>\n          <Grid item xs={4}>\n            <Controls.InputSelect\n              name=\"as400.service_type\"\n              label=\"Serviço AS400\"\n              getOptions={as400RequestServices.getAS400ServiceTypeCollection}\n              labelWithId\n              editMode\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <Controls.InputSelect\n              name=\"as400.environment\"\n              label=\"Ambiente\"\n              labelWithId\n              getOptions={as400RequestServices.getAS400EnvironmentCollection}\n              editMode\n            />\n          </Grid>\n          <Grid item xs={2}>\n            <Controls.InputSelect\n              name=\"as400.user_type\"\n              label=\"Novo Usuário\"\n              getOptions={as400RequestServices.getAS400UserTypeCollection}\n              labelWithId={false}\n              editMode\n              // editMode={service_type.id !== ServiceId.ExcludeProfile}\n            />\n          </Grid>\n        </Grid>\n        {as400?.service_type?.id !==\n          as400RequestServices.EServiceIds.CopyUser && (\n          <>\n            <Grid container spacing={1}>\n              <Grid item xs={2}>\n                <Controls.InputSelect\n                  name=\"as400.is_job_position\"\n                  label=\"Indicar Perfil\"\n                  getOptions={as400RequestServices.getAS400YesNoCollection}\n                  labelWithId={false}\n                  editMode\n                />\n              </Grid>\n              {as400.is_job_position?.id === \"S\" && (\n                <Grid item xs={10}>\n                  <Controls.InputSelect\n                    name=\"as400.job_position\"\n                    label=\"Perfil\"\n                    getOptions={\n                      as400RequestServices.getAS400JobPositionCollection\n                    }\n                    labelWithId={false}\n                    editMode\n                  />\n                </Grid>\n              )}\n\n              {as400.is_job_position?.id === \"N\" && (\n                <>\n                  <Grid item xs={10}>\n                    <Controls.InputSelect\n                      name=\"as400.system\"\n                      label=\"Sistema\"\n                      getOptions={as400RequestServices.getAS400SystemCollection}\n                      labelWithId\n                      editMode\n                    />\n                  </Grid>\n                </>\n              )}\n            </Grid>\n          </>\n        )}\n      </Grid>\n\n      <Grid item xs={6}>\n        <Grid container spacing={1}>\n          <Grid item xs={6}>\n            {as400?.user_type?.id !== \"S\" && (\n              <Controls.InputAutoComplete\n                label=\"User Id\"\n                getOptions={as400RequestServices.getAS400UsersByNameCollection}\n                name=\"as400.user_id\"\n                labelWithId\n                helperText=\"\"\n              />\n            )}\n            {as400?.user_type?.id === \"S\" && (\n              <Controls.InputText\n                name=\"as400.user_id\"\n                label=\"User Id\"\n                fullWidth\n                inputProps={{\n                  readOnly: true,\n                }}\n              />\n            )}\n          </Grid>\n\n          {as400.service_type?.id ===\n            as400RequestServices.EServiceIds.CopyUser && (\n            <Grid item xs={6}>\n              <Controls.InputAutoComplete\n                name=\"as400.user_id_source\"\n                label=\"User Id Origem\"\n                labelWithId\n                getOptions={as400RequestServices.getAS400UsersByNameCollection}\n                helperText=\"\"\n                disabledOptions={[as400.user_id]}\n              />\n            </Grid>\n          )}\n        </Grid>\n        {as400.service_type?.id !== as400RequestServices.EServiceIds.CopyUser &&\n          as400.is_job_position?.id === \"N\" && (\n            <Grid container spacing={1}>\n              <Grid item xs={11}>\n                <Controls.CheckBoxAutoComplete\n                  label=\"Rotina\"\n                  getOptions={as400RequestServices.getAS400RoutineCollection}\n                  name=\"as400.routines\"\n                  labelWithId\n                  helperText=\"\"\n                  parentValue={as400.system.id}\n                />\n              </Grid>\n            </Grid>\n          )}\n      </Grid>\n\n      {as400?.service_type &&\n        as400.service_type.id !== as400RequestServices.EServiceIds.CopyUser && (\n          <>\n            <Grid item xs={12}>\n              <Grid container spacing={1}>\n                <Grid item xs={12}>\n                  <AS400RequestTable\n                    rows={as400.table}\n                    removeProfile={handleInputAS400TableItemRemoval}\n                    updateProfile={handleUpdateAS400Table}\n                    addProfiles={handleAddAS400Table}\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </>\n        )}\n    </Grid>\n  );\n}\n","/* eslint-disable react/jsx-props-no-spreading */\nimport MuiAlert, { AlertProps } from \"@mui/material/Alert\";\nimport Stack from \"@mui/material/Stack\";\nimport { useField, useFormikContext } from \"formik\";\nimport React from \"react\";\n\nimport { EServiceIds } from \"../../../../services/data/AS400RequestServices\";\nimport AS400Table from \"../../../Request/components/AS400Table\";\nimport { IRequestEmployee } from \"../Interface\";\n\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\n  props,\n  ref\n) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\ninterface ICreateSASRequestDTO {\n  requested_by_id: string;\n  requested_by_name: string;\n  requested_by_email: string;\n  request_number: string;\n  request_status: number;\n  request_type: string;\n  request_observation: string;\n  request_copy_list: string;\n  employee_id: string;\n  employee_fullname: string;\n  employee_email: string;\n  employee_type: string;\n  employee_type_description: string;\n  employee_profile_edition_rule: string;\n  employee_role_id: string;\n  employee_role_description: string;\n  employee_plataform_id: string;\n  employee_plataform_description: string;\n  employee_costcenter_id: string;\n  employee_costcenter_description: string;\n  employee_company_id: string;\n  employee_company_description: string;\n  employee_branch_id: string;\n  employee_branch_description: string;\n  employe_manager_id: string;\n  employee_manager_name: string;\n  employee_login: string;\n  employee_sap_id: string;\n  employee_userid_sap_status: string;\n  employee_userid_sap_expiration_date: string;\n  employee_as400_id: string;\n  employee_userid_as400_description: string;\n  updateEmployee: boolean;\n}\n\ninterface IAS400UserRequest {\n  service_id: string;\n  service_description: string;\n  environment: string;\n  is_new_user: boolean;\n  user_id: string;\n  reused_user_id_license: string;\n  observation: string;\n  copy_user_id: string;\n  copy_user_id_status: string;\n}\n\nexport default function AS400SubmitForm(): JSX.Element {\n  const setRequestType = () => {\n    return \"AS400\";\n  };\n\n  const { values, setFieldValue, status } =\n    useFormikContext<IRequestEmployee>();\n\n  const { request, as400 } = values;\n  const createJson = () => {\n    const employee: ICreateSASRequestDTO = {\n      requested_by_id: request.request_by ? request.request_by : \"\",\n      requested_by_name: request.request_by ? request.request_by : \"\",\n      requested_by_email: request.request_by ? request.request_by : \"\",\n      request_number: \"\",\n      request_status: -1,\n      request_type: setRequestType(),\n      request_observation: request.request_observation,\n      request_copy_list: \"falta\",\n      employee_id: request.employee.id,\n      employee_fullname: request.employee.description,\n      employee_email: request.employee.email ? request.employee.email : \"\",\n      employee_type: request.employee_type ? request.employee_type.id : \"\",\n      employee_type_description: request.employee_type\n        ? request.employee_type.description\n        : \"\",\n      employee_profile_edition_rule: request.employee_profile_edition_rule,\n      employee_role_id: request.employee_role ? request.employee_role.id : \"\",\n      employee_role_description: request.employee_role\n        ? request.employee_role.description\n        : \"\",\n      employee_plataform_id: request.employee_plataform\n        ? request.employee_plataform.id\n        : \"\",\n      employee_plataform_description: request.employee_plataform\n        ? request.employee_plataform.description\n        : \"\",\n      employee_costcenter_id: request.employee_costcenter\n        ? request.employee_costcenter.id\n        : \"\",\n      employee_costcenter_description: request.employee_costcenter\n        ? request.employee_costcenter.description\n        : \"\",\n      employee_company_id: request.employee_company\n        ? request.employee_company.id\n        : \"\",\n      employee_company_description: request.employee_company\n        ? request.employee_company.description\n        : \"\",\n      employee_branch_id: request.employee_branch\n        ? request.employee_branch.id\n        : \"\",\n      employee_branch_description: request.employee_branch\n        ? request.employee_branch.description\n        : \"\",\n      employe_manager_id: request.employee_manager\n        ? request.employee_manager.id\n        : \"\",\n      employee_manager_name: request.employee_manager\n        ? request.employee_manager.description\n        : \"\",\n      employee_login: request.employee_userid_login\n        ? request.employee_userid_login\n        : \"\",\n      employee_sap_id: request.employee_userid_sap\n        ? request.employee_userid_sap\n        : \"\",\n      employee_userid_sap_status: request.employee_userid_sap_status\n        ? request.employee_userid_sap_status\n        : \"\",\n      employee_userid_sap_expiration_date: request.employee_userid_sap_status\n        ? request.employee_userid_sap_status\n        : \"\",\n      employee_as400_id: \"\",\n      employee_userid_as400_description: \"\",\n      updateEmployee: request.updateEmployee ? request.updateEmployee : false,\n    };\n\n    const user: IAS400UserRequest = {\n      service_id: \"\",\n      service_description: \"\",\n      environment: \"\",\n      is_new_user: false,\n      user_id: \"\",\n      reused_user_id_license: \"\",\n      observation: \"\",\n      copy_user_id: \"\",\n      copy_user_id_status: \"-1\",\n    };\n\n    if (as400.service_type.id === EServiceIds.CopyUser) {\n      user.environment = as400.environment.id;\n      user.is_new_user = as400.user_type.id === \"S\";\n      user.user_id = as400.user_id.id;\n      user.reused_user_id_license = as400.user_licence;\n      user.observation = \"\";\n\n      user.copy_user_id = as400.user_id_source.id;\n      user.copy_user_id_status = \"\";\n      user.service_id = EServiceIds.CopyUser;\n      user.service_description = \"Duplicação de Acesso\";\n      return {\n        employee,\n        user,\n      };\n    }\n\n    if (as400.user_type.id === \"S\") {\n      user.environment = as400.environment.id;\n      user.is_new_user = true;\n      user.user_id = as400.user_id.id;\n      user.reused_user_id_license = as400.user_licence;\n      user.observation = \"\";\n      user.service_id = EServiceIds.CreateUser;\n      user.service_description = \"Criação de Usuário\";\n    }\n\n    const profiles = as400.table?.map((row) => {\n      return {\n        service_id: row.service_type,\n        service_description:\n          row.service_type === EServiceIds.AddProfile\n            ? \"Liberação de Acesso\"\n            : \"Exclusão de Acesso\",\n        environment: row.environment,\n        is_new_user: user.is_new_user,\n        user_id: row.user_id,\n        system: row.system,\n        routine: row.routine,\n        access_type: row.security_type,\n        access_observation: row.security_text,\n        limited_access: false,\n        restricted_access: false,\n        access: row.access,\n        company_id: row.security_type === \"EF\" ? row.security_company : \"\",\n        company_name: row.security_type === \"EF\" ? row.security_company : \"\",\n        branch_id: row.security_type === \"EF\" ? row.security_branchs[0] : \"\",\n        branch_name: \"\",\n        region_id: row.security_type === \"R\" ? row.security_regions[0] : \"\",\n        region_name: \"\",\n        job_position: row.job_position,\n      };\n    });\n\n    return user.service_id === \"\"\n      ? {\n          employee,\n          profiles,\n        }\n      : {\n          employee,\n          user,\n          profiles,\n        };\n  };\n\n  React.useEffect(() => {\n    const data = createJson();\n    setFieldValue(\"data\", data);\n  }, []);\n\n  const [field] = useField(\"data\");\n  const rows = field.value ? [field.value.user, ...field.value.profiles] : [];\n  return (\n    <Stack\n      spacing={2}\n      sx={{\n        width: \"100%\",\n        marginTop: \"120px\",\n        alignContent: \"center\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      {!status && (\n        <>\n          <Alert severity=\"info\">\n            Clique em enviar para registrar sua solicitação\n          </Alert>\n\n          {field.value && (\n            <AS400Table\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              rows={rows.map((row: any, index: number) => {\n                return { ...row, id: index };\n              })}\n            />\n          )}\n        </>\n      )}\n      {status && status?.isError && (\n        <Alert severity=\"error\">{status.error}</Alert>\n      )}\n      {status && !status?.isError && (\n        <Alert severity=\"success\">\n          Solicitação criada com sucesso: {status.data.request_number}\n        </Alert>\n      )}\n    </Stack>\n  );\n}\n","import {\n  IData,\n  IEmployeeData,\n  ISelectData,\n} from \"../../pages/RequestStepForm/components/Interface\";\nimport { getJobPositionCollection } from \"./SAPRequestServices\";\n\nexport interface IEmployeeFormData {\n  is_contingency: boolean;\n  employee_profile_edition_rule: string;\n  employee_role: IData | undefined | null;\n  employee_plataform: IData | undefined | null;\n  employee_costcenter: IData | undefined | null;\n  employee_type: IData | undefined | null;\n  employee_manager: IData | undefined | null;\n  employee_company: IData | undefined | null;\n  employee_branch: IData | undefined | null;\n  employee: IEmployeeData;\n  updateEmployee: boolean;\n  has_sap_job_positions: boolean;\n  employee_sap_job_positions: ISelectData[];\n  employee_userid_login?: string | undefined | null;\n  employee_userid_as400: IData | undefined | null;\n  employee_userid_sap: string | undefined | null;\n  employee_userid_sap_status: string | undefined | null;\n  employee_userid_sap_expiration_date: string | undefined | null;\n}\n\nconst API_BASE_URL = process.env.REACT_APP_API_SAS_URL;\n\nexport const getEmployeeValues = async (\n  id: string\n): Promise<IEmployeeFormData> => {\n  const employee_without_id = {\n    is_contingency: false,\n    employee_profile_edition_rule: \"ALL\",\n    employee_role: null,\n    employee_plataform: null,\n    employee_costcenter: null,\n    request_category: null,\n    employee_type: null,\n    employee_manager: null,\n    employee_company: null,\n    employee_branch: null,\n    employee: { id: \"\", description: \"\", email: \"\" },\n    updateEmployee: false,\n    has_sap_job_positions: false,\n    employee_sap_job_positions: [],\n    employee_userid_login: \"\",\n    employee_userid_as400: { id: \"\", description: \"\" },\n    employee_userid_sap: \"\",\n    employee_userid_sap_status: \"\",\n    employee_userid_sap_expiration_date: \"\",\n  };\n\n  if (!id) return employee_without_id;\n\n  const url = `${API_BASE_URL}/employees/${id}`;\n  console.log(url);\n  const response = await fetch(url);\n  const data = await response.json();\n\n  if (data) {\n    const employee: IEmployeeFormData = {\n      is_contingency: data.is_contingency,\n      updateEmployee: false,\n      employee: {\n        id: data.employee_id,\n        description: data.employee_fullname,\n        email: data.employee_email,\n      },\n      employee_profile_edition_rule: data.employee_profile_edition_rule,\n      employee_type: data.employee_type\n        ? {\n            id: data.employee_type,\n            description: data.employee_type,\n          }\n        : null,\n      employee_manager: data.manager\n        ? {\n            id: data.manager.id,\n            description: data.manager.fullname,\n          }\n        : null,\n      employee_role: data.role\n        ? {\n            id: data.role.id,\n            description: data.role.description,\n          }\n        : null,\n      employee_plataform: data.plataform\n        ? {\n            id: data.plataform.id,\n            description: data.plataform.description,\n          }\n        : null,\n      employee_costcenter: data.costCenter\n        ? {\n            id: data.costCenter.id,\n            description: data.costCenter.description,\n          }\n        : null,\n      employee_company: data.company\n        ? {\n            id: data.company.id,\n            description: data.company.description,\n          }\n        : null,\n      employee_branch: data.branch\n        ? {\n            id: data.branch.id,\n            description: data.branch.description,\n          }\n        : null,\n\n      employee_userid_login: data.employee_login,\n      employee_userid_as400: data.as400User\n        ? { id: data.as400User.id, description: data.as400User.user_name }\n        : { id: \"\", description: \"\" },\n      employee_userid_sap: data.employee_sap_id,\n      employee_userid_sap_status: data.employee_sap_id_status,\n      employee_userid_sap_expiration_date: data.employee_sap_id_expiration_date,\n      employee_sap_job_positions: [],\n      has_sap_job_positions: false,\n    };\n\n    console.log(\"procurando jobpositions\");\n    if (data.costCenter && data.manager) {\n      const jobPositions: ISelectData[] = await getJobPositionCollection(\n        data.manager.id,\n        data.costCenter.id\n      );\n      console.log(`pegou jobpostions`);\n      console.log(jobPositions);\n      employee.employee_sap_job_positions = jobPositions;\n      employee.has_sap_job_positions = !!jobPositions[0];\n    }\n\n    return employee;\n  }\n\n  return employee_without_id;\n};\n","import Grid from \"@mui/material/Grid\";\nimport { useFormikContext } from \"formik\";\nimport React from \"react\";\n\nimport Controls from \"../../../../components/controlsformik/FormikControls\";\nimport * as employeeservice from \"../../../../services/data/EmployeeService\";\nimport * as requestServices from \"../../../../services/data/RequestServices\";\nimport { IRequestEmployee } from \"../Interface\";\n\nexport default function EmployeeForm(): JSX.Element {\n  const { values, setValues } = useFormikContext<IRequestEmployee>();\n\n  const { request } = values;\n\n  const canEditEmployeeFields = () => {\n    const rule = request.employee_profile_edition_rule;\n    if (rule === \"ALL\") return true;\n    if (request.is_contingency) return true;\n    if (rule === \"NONE\") return false;\n    if (rule === \"ERROR\") return true;\n    return false;\n  };\n\n  const canEditManagerField = () => {\n    const rule = request.employee_profile_edition_rule;\n    if (rule === \"ALL\") return true;\n    if (rule === \"MANAGER\") return true;\n    if (request.is_contingency) return true;\n    if (rule === \"ERROR\") return true;\n    return false;\n  };\n\n  React.useEffect(() => {\n    async function updateForm(id: string) {\n      console.log(`loading new values ${id}`);\n      const employee = await employeeservice.getEmployeeValues(id);\n      console.log(employee);\n\n      const newValues: IRequestEmployee = {\n        ...values,\n        request: { ...values.request, ...employee },\n      };\n      setValues(newValues, true);\n    }\n    const id = request.employee ? request.employee.id : \"\";\n    if (request.updateEmployee) {\n      updateForm(id);\n    }\n  }, [request.updateEmployee]);\n\n  return (\n    <>\n      <Grid container justifyContent=\"space-between\" spacing={2}>\n        <Grid item xs={6}>\n          <Grid container spacing={1}>\n            <Grid item xs={8}>\n              <Controls.InputText\n                name=\"request.request_by\"\n                label=\"Solicitante\"\n                fullWidth\n                inputProps={{\n                  readOnly: true,\n                }}\n              />\n              <Controls.InputEmployee\n                name=\"request.employee\"\n                label=\"Colaborador\"\n                labelWithId={false}\n                helperText=\"Digite o nome do colaborador\"\n                getOptions={requestServices.getEmployeeByNameCollection}\n                setLabelOption={requestServices.setEmployeeNameOption}\n                setLabelHintOptions={requestServices.setEmployeeHintNameOptions}\n              />\n            </Grid>\n            <Grid item xs={4}>\n              <Controls.InputText\n                name=\"request.request_date\"\n                label=\"Data da solicitação\"\n                fullWidth={false}\n                inputProps={{\n                  readOnly: true,\n                }}\n              />\n\n              <Controls.InputSelect\n                name=\"request.employee_type\"\n                label=\"Tipo\"\n                getOptions={requestServices.getEmployeeTypeCollection}\n                labelWithId={false}\n                editMode={canEditEmployeeFields()}\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item xs={6}>\n              <Controls.InputSelect\n                name=\"request.employee_role\"\n                label=\"Cargo\"\n                labelWithId\n                getOptions={requestServices.getRoleCollection}\n                editMode={canEditEmployeeFields()}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <Controls.InputSelect\n                name=\"request.employee_costcenter\"\n                label=\"Centro de Custo\"\n                labelWithId\n                getOptions={requestServices.getCostCenterCollection}\n                editMode={canEditEmployeeFields()}\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item xs={6}>\n              <Controls.InputSelect\n                name=\"request.employee_manager\"\n                label=\"Gestor\"\n                labelWithId={false}\n                getOptions={requestServices.getManagerCollection}\n                editMode={canEditManagerField()}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item xs={6}>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n              <Controls.InputText\n                name=\"request.request_number\"\n                label=\"Número\"\n                fullWidth={false}\n                inputProps={{\n                  readOnly: true,\n                }}\n              />\n\n              <Controls.InputText\n                name=\"request.request_status\"\n                label=\"Status\"\n                fullWidth={false}\n                inputProps={{\n                  readOnly: true,\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item xs={6}>\n              <Controls.InputEmployee\n                name=\"request.employee\"\n                label=\"Email\"\n                getOptions={requestServices.getEmployeeByNameCollection}\n                labelWithId={false}\n                helperText=\"Digite um email\"\n                setLabelOption={requestServices.setEmployeeEmailOption}\n                setLabelHintOptions={\n                  requestServices.setEmployeeHintEmailOptions\n                }\n              />\n            </Grid>\n            <Grid item xs={4}>\n              <Controls.InputSelect\n                name=\"request.employee_plataform\"\n                label=\"Plataforma\"\n                labelWithId={false}\n                getOptions={requestServices.getPlataformCollection}\n                editMode={canEditEmployeeFields()}\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item xs={4}>\n              <Controls.InputSelect\n                name=\"request.employee_company\"\n                label=\"Empresa\"\n                labelWithId\n                getOptions={requestServices.getCompanyOnlyCollection}\n                onChangeCleanFieldName=\"employee_branch\"\n                editMode={canEditEmployeeFields()}\n              />\n            </Grid>\n            <Grid item xs={7}>\n              <Controls.InputSelect\n                name=\"request.employee_branch\"\n                label=\"Filial\"\n                labelWithId\n                getOptions={requestServices.getCompanyBranchCollection}\n                optionsPrimaryKey={\n                  request.employee_company\n                    ? request.employee_company.id\n                    : undefined\n                }\n                editMode={canEditEmployeeFields()}\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item xs={11}>\n              <Controls.InputText\n                name=\"request.request_observation\"\n                label=\"Observação\"\n                multiline\n                maxRows={4}\n                fullWidth\n                inputProps={{\n                  readOnly: false,\n                }}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport * as Yup from \"yup\";\n\nimport { IEmployee, IRequestSAP, IRequestAS400 } from \"./Interface\";\n\nconst select_object = Yup.object()\n  .shape({\n    id: Yup.string().default(\"\").ensure(),\n    description: Yup.string().default(\"\").ensure(),\n  })\n  .default({ id: \"\", description: \"\" });\n\nconst test_select_object = (name: string, msg: string) => {\n  return select_object.test(name, msg, (val: any) => {\n    return val ? !!val.id : false;\n  });\n};\n\nconst default_object_shape = Yup.object()\n  .shape({\n    id: Yup.string().default(\"\"),\n    description: Yup.string().default(\"\"),\n  })\n  .default({ id: \"\", description: \"\" });\n\nexport const INITIAL_EMPLOYEE_FORM_STATE = {\n  id: \"0\",\n  request_by: \"Darcio Santos\",\n  request_status: \"Rascunho\",\n  request_date: new Date(),\n  request_number: \"--\",\n  request_opentab: 0,\n  request_observation: \"\",\n  is_contingency: false,\n  employee_profile_edition_rule: \"ALL\",\n  employee_role: { id: \"\", description: \"\" },\n  employee_plataform: { id: \"\", description: \"\" },\n  employee_costcenter: { id: \"\", description: \"\" },\n  request_category: { id: \"\", description: \"\" },\n  employee_type: { id: \"\", description: \"\" },\n  employee_manager: { id: \"\", description: \"\" },\n  employee_company: { id: \"\", description: \"\" },\n  employee_branch: { id: \"\", description: \"\" },\n  employee: {\n    id: \"\",\n    description: \"\",\n    email: \"\",\n  },\n  updateEmployee: false,\n  has_sap_job_positions: false,\n  employee_sap_job_positions: [],\n  employee_userid_login: \"\",\n  employee_userid_as400: { id: \"\", description: \"\" },\n  employee_userid_sap: \"\",\n  employee_userid_sap_status: \"\",\n  employee_userid_sap_expiration_date: \"\",\n};\n\nexport const INITIAL_SAP_FORM_STATE = {\n  request: INITIAL_EMPLOYEE_FORM_STATE,\n  sap: {\n    environment: { id: \"ECC\", description: \"ECC-Produção\" },\n    service_type: { id: \"\", description: \"\" },\n    user_type: { id: \"\", description: \"\" },\n    user_id: { id: \"\", description: \"\" },\n    user_licence: \"\",\n    is_job_position: false,\n    job_position: { id: \"\", description: \"\" },\n    is_temporary: { id: \"\", description: \"\" },\n    profile_type: { id: \"\", description: \"\" },\n    profile_start_date: \"\",\n    profile_end_date: \"\",\n    profiles: [],\n    profiles_table: [],\n  },\n};\n\nexport const INITIAL_AS400_FORM_STATE = {\n  request: INITIAL_EMPLOYEE_FORM_STATE,\n  as400: {\n    environment: { id: \"BRCOISP1\", description: \"Produção\" },\n    service_type: {\n      id: \"\",\n      description: \"\",\n    },\n    user_type: { id: \"N\", description: \"Não\" },\n    user_licence: \"\",\n    user_id: { id: \"\", description: \"\" },\n    user_id_source: { id: \"\", description: \"\" },\n    is_job_position: { id: \"N\", description: \"Não\" },\n    job_position: { id: \"\", description: \"\" },\n    system: { id: \"\", description: \"\" },\n    routines: [],\n    company: { id: \"\", description: \"\" },\n    branch: { id: \"\", description: \"\" },\n    region: { id: \"\", description: \"\" },\n    access: { inc: true, exc: true, alt: true, con: true },\n    table: [],\n  },\n};\n\nexport const EMPLOYEE_VALIDATION: Yup.SchemaOf<IEmployee> = Yup.object().shape({\n  id: Yup.string().required(\"Campo obrigatório\"),\n  request_by: Yup.string().default(\"\").optional(),\n  request_status: Yup.string().default(\"\").optional(),\n  request_date: Yup.date().optional(),\n  request_number: Yup.string().required(),\n  request_opentab: Yup.number().required(),\n  request_observation: Yup.string().default(\"\").optional(),\n  request_category: Yup.object()\n    .shape({\n      id: Yup.string(),\n      description: Yup.string(),\n    })\n    .nullable()\n    .optional(),\n  is_contingency: Yup.boolean().required(\"\"),\n  employee_profile_edition_rule: Yup.string().required(\"\"),\n  employee_role: Yup.object()\n    .shape({\n      id: Yup.string(),\n      description: Yup.string(),\n    })\n    .nullable()\n    .test(\"employee_role\", \"Selecione um cargo\", (val: any) => !!val?.id),\n  employee_plataform: Yup.object()\n    .shape({\n      id: Yup.string(),\n      description: Yup.string(),\n    })\n    .nullable()\n    .test(\n      \"employee_plataform\",\n      \"Selecione uma plataforma\",\n      (val: any) => !!val?.id\n    ),\n  employee_costcenter: Yup.object()\n    .shape({\n      id: Yup.string(),\n      description: Yup.string(),\n    })\n    .nullable()\n    .test(\n      \"employee_costcenter\",\n      \"Selecione um centro de custo\",\n      (val: any) => !!val?.id\n    ),\n\n  employee_type: Yup.object()\n    .shape({\n      id: Yup.string(),\n      description: Yup.string(),\n    })\n    .nullable()\n    .test(\n      \"employee_type\",\n      \"Selecione um tipo de colaborador\",\n      (val: any) => !!val?.id\n    ),\n  employee_manager: Yup.object()\n    .shape({\n      id: Yup.string(),\n      description: Yup.string(),\n    })\n    .nullable()\n    .test(\"manager\", \"Please select a manager\", (val: any) => !!val?.id),\n\n  employee_company: Yup.object()\n    .shape({\n      id: Yup.string(),\n      description: Yup.string(),\n    })\n    .nullable()\n    .test(\"employee_company\", \"Selecione uma empresa\", (val: any) => !!val?.id),\n  employee_branch: Yup.object()\n    .shape({\n      id: Yup.string(),\n      description: Yup.string(),\n    })\n    .nullable()\n    .test(\"employee_branch\", \"Selecione uma filial\", (val: any) => !!val?.id),\n  employee: Yup.object()\n    .shape({\n      id: Yup.string(),\n      description: Yup.string(),\n      email: Yup.string(),\n    })\n    .nullable()\n    .test(\"employee\", \"Selecione um colaborador\", (val: any) => !!val?.id),\n  updateEmployee: Yup.boolean(),\n  // eslint-disable-next-line react/forbid-prop-types\n  has_sap_job_positions: Yup.boolean().default(false),\n  employee_sap_job_positions: Yup.array().optional().nullable(),\n  employee_userid_login: Yup.string().optional().nullable(),\n  employee_userid_sap: Yup.string().default(\"\").optional(),\n  employee_userid_sap_status: Yup.string().default(\"\").optional(),\n  employee_userid_sap_expiration_date: Yup.string().default(\"\").optional(),\n\n  employee_userid_as400: Yup.object()\n    .shape({\n      id: Yup.string(),\n      description: Yup.string(),\n    })\n    .nullable()\n    .optional(),\n});\n\nexport const SAP_VALIDATION: Yup.SchemaOf<IRequestSAP> = Yup.object().shape({\n  environment: test_select_object(\n    \"environment\",\n    \"Please select a SAP environment\"\n  ).nullable(),\n  service_type: test_select_object(\n    \"service_type\",\n    \"Please select a service type\"\n  ).nullable(),\n  user_type: test_select_object(\n    \"user_type\",\n    \"Please select a user type\"\n  ).nullable(),\n  user_id: test_select_object(\"user_id\", \"Please select a user id\").nullable(),\n  user_licence: Yup.string()\n    .default(\"\")\n    .when([\"environment\", \"user_type\"], (environment, user_type) => {\n      if (environment?.id === \"ECC\" && user_type.id === \"S\")\n        return Yup.string()\n          .required(\"Camo obrigatório\")\n          .test(\"user_licencse\", \"digite uma licença\", (val: any) => {\n            return val !== \"\";\n          });\n      return Yup.string().optional();\n    }),\n  is_job_position: Yup.boolean().default(false).optional(),\n  profile_type: test_select_object(\"profile_type\", \"Defina o tipo de perfil\"),\n  job_position: default_object_shape.when(\n    \"profile_type\",\n    (profile_type: any) => {\n      if (profile_type.id !== \"1\") {\n        return default_object_shape.test(\n          \"usertype\",\n          \"Please select the jobposition type\",\n          (val: any) => {\n            return val ? !!val.id : false;\n          }\n        );\n      }\n      return default_object_shape.optional();\n    }\n  ),\n  is_temporary: test_select_object(\n    \"is_temporary\",\n    \"Campo Obrigatório\"\n  ).nullable(),\n\n  profile_start_date: Yup.string()\n    .default(\"\")\n    .when(\n      [\"service_type\", \"is_temporary\"],\n      (service_type: any, is_temporary: any) => {\n        if (is_temporary?.id === \"S\" && service_type.id === \"24\") {\n          console.log(\"testando\");\n          return Yup.string().test(\n            \"profile_start_date\",\n            \"Please select the initial date\",\n            (val: any) => {\n              console.log(val);\n              if (val) return val !== \"\";\n              return false;\n            }\n          );\n        }\n        return Yup.string().optional();\n      }\n    ),\n\n  profile_end_date: Yup.mixed().when(\n    [\"service_type\", \"is_temporary\"],\n    (service_type: any, is_temporary: any) => {\n      if (is_temporary?.id === \"S\" && service_type.id === \"24\") {\n        return Yup.string().test(\n          \"profile_start_date\",\n          \"Please select the initial date\",\n          (val: any) => {\n            console.log(val);\n            if (val) return val !== \"\";\n            return false;\n          }\n        );\n      }\n      return Yup.string().optional();\n    }\n  ),\n  profiles: Yup.array().notRequired(),\n  profiles_table: Yup.array().notRequired(),\n});\n\nexport const AS400_VALIDATION: Yup.SchemaOf<IRequestAS400> = Yup.object().shape(\n  {\n    environment: test_select_object(\n      \"environment\",\n      \"Campo obrigatório\"\n    ).nullable(),\n    service_type: test_select_object(\n      \"service_type\",\n      \"Campo Obrigatório\"\n    ).nullable(),\n    user_type: test_select_object(\"user_type\", \"Campo Obrigatório\").nullable(),\n    user_id: test_select_object(\"user_id\", \"Campo Obrigatório\").nullable(),\n    user_licence: Yup.string().default(\"\").optional(),\n    user_id_source: default_object_shape.when(\n      \"service_type\",\n      (service_type: any) => {\n        if (service_type?.id === \"193\") {\n          console.log(\"Validando\");\n          return test_select_object(\n            \"user_id_source\",\n            \"Selecione um usuário base\"\n          );\n        }\n        return default_object_shape.optional();\n      }\n    ),\n    is_job_position: test_select_object(\n      \"is_job_position\",\n      \"Campo obrigatório\"\n    ).nullable(),\n    job_position: default_object_shape.when(\n      \"is_job_position\",\n      (is_job_position: any) => {\n        if (is_job_position.id === \"S\") {\n          return default_object_shape.test(\n            \"usertype\",\n            \"Selecione um perfil\",\n            (val: any) => {\n              return val ? !!val.id : false;\n            }\n          );\n        }\n        return default_object_shape.optional();\n      }\n    ),\n    system: default_object_shape.required(),\n    routines: Yup.array().default([]).notRequired(),\n    company: default_object_shape.optional(),\n    branch: default_object_shape.optional(),\n    region: default_object_shape.optional(),\n    access: default_object_shape.optional(),\n    table: Yup.array(\n      Yup.object({\n        id: Yup.number().default(0).optional(),\n        service_type: Yup.string().default(\"\").optional(),\n        environment: Yup.string().default(\"\").optional(),\n        user_id: Yup.string().default(\"\").optional(),\n        system: Yup.string().default(\"\").optional(),\n        routine: Yup.string().default(\"\").optional(),\n        security_type: Yup.string().default(\"\").optional(),\n        security_company: Yup.string().default(\"\").optional(),\n        security_branchs: Yup.array().default([]).optional(),\n        security_regions: Yup.array().default([]).optional(),\n        security_text: Yup.string().default(\"\").optional(),\n        job_position: default_object_shape.optional(),\n        access: Yup.string().default(\"\").optional(),\n        inc: Yup.boolean().default(false).optional(),\n        exc: Yup.boolean().default(false).optional(),\n        alt: Yup.boolean().default(false).optional(),\n        con: Yup.boolean().default(false).optional(),\n      })\n    )\n      .default([])\n      .when(\"service_type\", (service_type: any) => {\n        if (service_type?.id === \"06\" || service_type?.id === \"20\") {\n          return Yup.array().min(1, \"Indique ao menos uma transação\");\n        }\n        return Yup.array().optional();\n      }),\n  }\n);\n\nexport const EMPLOYEE_FORM_VALIDATION = Yup.object().shape({\n  request: EMPLOYEE_VALIDATION,\n});\n\nexport const SAP_FORM_VALIDATION = Yup.object().shape({\n  sap: SAP_VALIDATION,\n});\n\nexport const AS400_FORM_VALIDATION = Yup.object().shape({\n  as400: AS400_VALIDATION,\n});\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable react/jsx-props-no-spreading */\nimport Box from \"@mui/material/Box\";\nimport * as React from \"react\";\n\nimport {\n  FormikStep,\n  FormikStepper,\n} from \"../../../components/controlsformik/Form/FormikStepper\";\nimport AS400RequestForm from \"../components/AS400/AS400RequestForm\";\nimport AS400SubmitForm from \"../components/AS400/AS400SubmitForm\";\nimport EmployeeForm from \"../components/Employee/EmployeeForm\";\nimport {\n  EMPLOYEE_FORM_VALIDATION,\n  AS400_FORM_VALIDATION,\n  INITIAL_AS400_FORM_STATE,\n} from \"../components/ValidationSchemas\";\n\nconst sleep = (time: number) => new Promise((acc) => setTimeout(acc, time));\n\nexport function NewAS400RequestForm(): JSX.Element {\n  return (\n    <Box\n      sx={{\n        marginTop: \"4px\",\n        \"& .MuiTextField-root\": { m: 1, minWidth: \"30px\" },\n        \"& .MuiInputBase-root\": { m: 1, minWidth: \"30px\" },\n        \"& .MuiDataGrid-root\": { m: 1, minWidth: \"30px\" },\n      }}\n    >\n      <FormikStepper\n        initialValues={{ ...INITIAL_AS400_FORM_STATE }}\n        onSubmit={async (values, actions) => {\n          try {\n            await sleep(3000);\n            console.log(\"values\", values.data);\n            // POST request using fetch with async/await\n            const requestOptions = {\n              method: \"POST\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify(values.data),\n            };\n            const response = await fetch(\n              \"http://localhost:3333/requests/as400\",\n              requestOptions\n            );\n            const data = await response.json();\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              actions.setStatus({ isError: true, error });\n            } else actions.setStatus({ isError: false, data });\n            actions.setSubmitting(false);\n            console.log(data);\n          } catch (error) {\n            console.log(error);\n          }\n        }}\n      >\n        <FormikStep\n          label=\"dados do colaborador\"\n          validationSchema={EMPLOYEE_FORM_VALIDATION}\n        >\n          <EmployeeForm />\n        </FormikStep>\n        <FormikStep\n          label=\"serviço AS400\"\n          validationSchema={AS400_FORM_VALIDATION}\n        >\n          <AS400RequestForm />\n        </FormikStep>\n        <FormikStep label=\"Fim\">\n          <AS400SubmitForm />\n        </FormikStep>\n      </FormikStepper>\n    </Box>\n  );\n}\n","import DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Button } from \"@mui/material\";\nimport { DataGrid, GridCellParams, GridColDef } from \"@mui/x-data-grid\";\nimport * as React from \"react\";\n\ninterface IProps {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  rows: any;\n  removeProfile: (id: number) => void;\n}\n\nconst columns: GridColDef[] = [\n  { field: \"id\", headerName: \"ID\", width: 30 },\n  {\n    field: \"environment\",\n    headerName: \"Ambiente\",\n    width: 90,\n  },\n  { field: \"service_id\", headerName: \"Tipo Serviço\", width: 130 },\n  { field: \"user_id\", headerName: \"User ID\", width: 130 },\n\n  {\n    field: \"profile_type\",\n    headerName: \"Tipo Perfil\",\n    width: 90,\n  },\n  {\n    field: \"is_temporary\",\n    headerName: \"Temporário\",\n    sortable: true,\n    width: 30,\n  },\n\n  {\n    field: \"profile\",\n    headerName: \"Perfil\",\n    sortable: true,\n    width: 400,\n  },\n  {\n    field: \"profile_description\",\n    headerName: \"Descrição\",\n    sortable: true,\n    width: 400,\n  },\n  {\n    field: \"removeprofileaction\",\n    headerName: \"\",\n    renderCell: () => {\n      return (\n        <Button variant=\"contained\" color=\"error\" startIcon={<DeleteIcon />} />\n      );\n    },\n  },\n];\n\nexport default function DataTable({\n  rows,\n  removeProfile,\n}: IProps): JSX.Element {\n  const currentlySelected = (params: GridCellParams) => {\n    const value = params.colDef.field;\n    if (value === \"removeprofileaction\") {\n      const id = params.getValue(params.id, \"id\");\n      if (id) {\n        removeProfile(parseInt(id.toString(), 10));\n      }\n    }\n    return \"\";\n  };\n\n  return (\n    <div style={{ height: 400, width: \"100%\" }}>\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        pageSize={100}\n        rowsPerPageOptions={[5, 10, 30]}\n        checkboxSelection={false}\n        onCellClick={currentlySelected}\n      />\n    </div>\n  );\n}\n","import Grid from \"@mui/material/Grid\";\nimport { useFormikContext } from \"formik\";\nimport React from \"react\";\n\nimport Controls from \"../../../../components/controlsformik/FormikControls\";\nimport * as sapRequestServices from \"../../../../services/data/SAPRequestServices\";\nimport { EServiceIds as ServiceId } from \"../../../../services/data/SAPRequestServices\";\nimport { ISelectData, IRequestEmployee } from \"../Interface\";\nimport SAPRequestTable from \"./SAPRequestTable\";\n\nexport default function SAPRequestForm(): JSX.Element {\n  const JOB_POSITION = \"2\";\n  const { values, setFieldValue, isValid } =\n    useFormikContext<IRequestEmployee>();\n\n  const { request, sap } = values;\n\n  const handleInputSAPRemoveProfile = (id: number) => {\n    if (values?.sap?.profiles_table) {\n      const profiles_table = [...values?.sap?.profiles_table];\n      const profileToRemove = profiles_table.find((value) => value.id === id);\n\n      const new_profiles_table = profiles_table.filter(\n        (value) => value.id !== id\n      );\n\n      new_profiles_table.map((value, index) => {\n        // eslint-disable-next-line no-param-reassign\n        value.id = index + 1;\n        return value;\n      });\n\n      setFieldValue(\"sap.profiles_table\", new_profiles_table);\n\n      // updating the profiles field\n      if (values.sap.profiles && profileToRemove) {\n        const profiles = [...values.sap.profiles];\n\n        const new_profiles = profiles.filter(\n          (value) => value.id !== profileToRemove.profile\n        );\n        setFieldValue(\"sap.profiles\", new_profiles);\n      }\n    }\n  };\n\n  const handleInputSAPAddProfile = (profiles: ISelectData[]) => {\n    const addprofiles = profiles.map((profile) => {\n      const item = {\n        // eslint-disable-next-line no-plusplus\n        id: 0,\n        environment: values?.sap?.environment?.id,\n        service_id: values?.sap?.service_type?.id,\n        service_description: values?.sap?.service_type?.description,\n        user_id: values?.sap?.user_id?.id,\n        profile: profile.id,\n        profile_description: profile.description,\n        profile_type: values?.sap?.profile_type?.description,\n        job_position:\n          values?.sap?.profile_type?.id === \"2\"\n            ? \"\"\n            : values?.sap?.job_position?.id,\n        is_temporary: values?.sap?.is_temporary?.id === \"S\",\n\n        profile_start_date:\n          values.sap?.is_temporary?.id === \"S\"\n            ? values?.sap?.profile_start_date\n            : \"\",\n        profile_end_date:\n          values.sap?.is_temporary?.id === \"S\"\n            ? values?.sap?.profile_end_date\n            : \"\",\n      };\n      return item;\n    });\n\n    const profiles_table = values?.sap?.profiles_table\n      ? [...values.sap.profiles_table, ...addprofiles]\n      : [...addprofiles];\n\n    const uniqueData = Array.from(\n      profiles_table\n        .reduce((map, obj) => map.set(obj.profile, obj), new Map())\n        .values()\n    );\n    const fixId = uniqueData.map((value, index) => {\n      // eslint-disable-next-line no-param-reassign\n      value.id = index + 1;\n      return value;\n    });\n\n    setFieldValue(\"sap.profiles_table\", fixId);\n  };\n\n  React.useEffect(() => {\n    if (!request.updateEmployee) {\n      // update the user only if finished to update employee data.\n      // avoiding circular refreshing\n      const usersap = request.employee_userid_sap;\n      const user_type = { id: \"\", description: \"\" };\n      const service_type = { id: \"\", description: \"\" };\n      const user_id = { id: \"\", description: \"\" };\n      if (sap?.environment?.id === \"ECC\") {\n        console.log(\"environement = ECC\");\n\n        if (!request.employee?.id || !usersap) {\n          user_type.id = \"S\";\n          user_type.description = \"Novo Usuário\";\n          service_type.id = \"\";\n          service_type.description = \"\";\n          user_id.id = \"NovoUsuario\";\n          user_id.description = \"Novo Usuário\";\n        } else {\n          user_id.id = request.employee_userid_sap || \"\";\n          user_id.description = request.employee.description || \"\";\n          user_type.id =\n            request.employee_userid_sap_status === \"Ativo\" ? \"N\" : \"D\";\n          user_type.description =\n            request.employee_userid_sap_status === \"Ativo\"\n              ? \"Existente\"\n              : \"Desbloqueio\";\n        }\n      } else {\n        user_type.id = \"\";\n        user_type.description = \"\";\n        user_id.id = request.employee_userid_sap || \"\";\n        user_id.description = request.employee.description || \"\";\n      }\n\n      setFieldValue(\"sap.user_type\", user_type);\n      setFieldValue(\"sap.service_type\", service_type);\n      setFieldValue(\"sap.user_id\", user_id);\n      setFieldValue(\"sap.profile_type\", { id: \"1\", description: \"Outros\" });\n      setFieldValue(\"sap.is_temporary\", { id: \"N\", description: \"Não\" });\n      setFieldValue(\"sap.profiles\", []);\n      setFieldValue(\"sap.profiles_table\", []);\n    }\n  }, [sap?.environment, request.updateEmployee]);\n\n  React.useEffect(() => {\n    if (sap?.environment?.id !== \"ECC\") {\n      const user_id = { id: \"\", description: \"\" };\n      if (sap?.user_type?.id === \"S\") {\n        user_id.description = \"Novo Usuário\";\n        user_id.id = \"NovoUsuario\";\n      } else {\n        user_id.id = request.employee_userid_sap || \"\";\n        user_id.description = request.employee.description || \"\";\n      }\n      setFieldValue(\"sap.user_id\", user_id);\n      setFieldValue(\"sap.profiles\", []);\n      setFieldValue(\"sap.profiles_table\", []);\n    }\n  }, [sap?.user_type]);\n\n  React.useEffect(() => {\n    setFieldValue(\"sap.profiles\", []);\n  }, [sap?.service_type]);\n\n  return (\n    <>\n      <Grid container justifyContent=\"space-between\" spacing={2}>\n        <Grid item xs={6}>\n          <Grid container spacing={1}>\n            <Grid item xs={4}>\n              <Controls.InputSelect\n                name=\"sap.environment\"\n                label=\"Ambiente SAP\"\n                labelWithId={false}\n                getOptions={sapRequestServices.getSAPEnvironmentCollection}\n                editMode\n              />\n            </Grid>\n            <Grid item xs={8}>\n              <Controls.InputSelect\n                name=\"sap.service_type\"\n                label=\"Tipo Serviço\"\n                labelWithId\n                getOptions={sapRequestServices.getSAPServiceTypeCollection}\n                optionsPrimaryKey={\n                  sap &&\n                  sap.environment &&\n                  sap.user_type &&\n                  sap.environment.id === \"ECC\"\n                    ? sap.user_type.id\n                    : \"\"\n                }\n                editMode\n              />\n            </Grid>\n          </Grid>\n          {sap?.service_type && sap.service_type.id === ServiceId.AddProfile && (\n            <>\n              <Grid container spacing={1}>\n                <Grid item xs={3}>\n                  <Controls.InputSelect\n                    name=\"sap.profile_type\"\n                    label=\"Tipo Perfil\"\n                    labelWithId={false}\n                    getOptions={sapRequestServices.getSAPProfileTypeCollection}\n                    editMode={request.has_sap_job_positions}\n                  />\n                </Grid>\n                {sap?.profile_type && sap.profile_type.id === JOB_POSITION && (\n                  <Grid item xs={4}>\n                    <Controls.InputSelect\n                      name=\"sap.job_position\"\n                      label=\"Job Position\"\n                      labelWithId={false}\n                      defaultOptions={undefined}\n                      editMode\n                    />\n                  </Grid>\n                )}\n                {sap?.profile_type && sap?.profile_type?.id !== JOB_POSITION && (\n                  <>\n                    <Grid item xs={2}>\n                      <Controls.InputSelect\n                        name=\"sap.is_temporary\"\n                        label=\"Temporário\"\n                        labelWithId={false}\n                        getOptions={\n                          sapRequestServices.getSAPTemporyFieldCollection\n                        }\n                        editMode\n                      />\n                    </Grid>\n                  </>\n                )}\n                {sap?.profile_type &&\n                  sap.is_temporary &&\n                  sap.profile_type.id !== JOB_POSITION &&\n                  sap.is_temporary.id === \"S\" && (\n                    <>\n                      <Grid item xs={3}>\n                        <Controls.InputDatePicker\n                          label=\"De\"\n                          name=\"sap.profile_start_date\"\n                        />\n                      </Grid>\n                      <Grid item xs={2}>\n                        <Controls.InputDatePicker\n                          label=\"Até\"\n                          name=\"sap.profile_end_date\"\n                        />\n                      </Grid>\n                    </>\n                  )}\n              </Grid>\n            </>\n          )}\n\n          {sap?.profile_type &&\n            sap?.service_type &&\n            sap.profile_type.id !== \"2\" &&\n            (sap.service_type.id === ServiceId.AddProfile ||\n              sap.service_type.id === ServiceId.ExcludeProfile) &&\n            isValid && (\n              <Grid container spacing={1}>\n                <Grid item xs={12}>\n                  <Controls.InputSAPProfiles\n                    name=\"sap.profiles\"\n                    label=\"Perfil\"\n                    placeHolder=\"Digite a descrição ou código de um perfil\"\n                    parentValue={sap?.environment?.id || \"\"}\n                    editMode\n                    addToTable\n                    handleProfileChange={handleInputSAPAddProfile}\n                    disabledOptions={\n                      sap.profiles_table\n                        ? sap.profiles_table?.map((profile) => {\n                            const obj = {\n                              id: profile.profile,\n                              description: profile.profile_description,\n                              email: \"\",\n                            };\n                            return obj;\n                          })\n                        : []\n                    }\n                  />\n                </Grid>\n              </Grid>\n            )}\n        </Grid>\n\n        <Grid item xs={6}>\n          <Grid container spacing={1}>\n            <Grid item xs={3}>\n              <Controls.InputSelect\n                name=\"sap.user_type\"\n                label=\"Usuario\"\n                labelWithId={false}\n                getOptions={sapRequestServices.getSAPUserTypeCollection}\n                optionsPrimaryKey={sap?.service_type?.id}\n                editMode={sap?.environment?.id !== \"ECC\"}\n              />\n            </Grid>\n            <Grid item xs={8}>\n              <Controls.InputSelect\n                name=\"sap.user_id\"\n                label=\"User ID\"\n                labelWithId\n                getOptions={sapRequestServices.getSAPUserIdCollection}\n                optionsPrimaryKey={sap?.environment?.id}\n                editMode={\n                  sap?.environment?.id !== \"ECC\" && sap?.user_type?.id !== \"S\"\n                }\n              />\n            </Grid>\n          </Grid>\n          {sap?.environment?.id === \"ECC\" && sap?.user_type?.id === \"S\" && (\n            <>\n              <Grid container spacing={1}>\n                <Grid item xs={6}>\n                  <Controls.InputText\n                    name=\"sap.user_licence\"\n                    label=\"Reutilizar licença\"\n                    fullWidth\n                    inputProps={{\n                      readOnly: false,\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </>\n          )}\n        </Grid>\n        {(sap?.service_type?.id === ServiceId.AddProfile ||\n          sap?.service_type?.id === ServiceId.ExcludeProfile) && (\n          <>\n            <Grid item xs={12}>\n              <Grid container spacing={1}>\n                <Grid item xs={12}>\n                  <SAPRequestTable\n                    rows={sap?.profiles_table}\n                    removeProfile={handleInputSAPRemoveProfile}\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </>\n        )}\n      </Grid>\n    </>\n  );\n}\n\n/*\n      <Button\n        variant=\"contained\"\n        onClick={() => {\n          console.log(values);\n          console.log(errors);\n        }}\n      >\n        show values\n      </Button> */\n","/* eslint-disable react/jsx-props-no-spreading */\nimport MuiAlert, { AlertProps } from \"@mui/material/Alert\";\nimport Stack from \"@mui/material/Stack\";\nimport { useFormikContext } from \"formik\";\nimport React from \"react\";\n\nimport { EServiceIds } from \"../../../../services/data/SAPRequestServices\";\nimport { IRequestEmployee } from \"../Interface\";\n\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\n  props,\n  ref\n) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\ninterface ICreateSASRequestDTO {\n  requested_by_id: string;\n  requested_by_name: string;\n  requested_by_email: string;\n  request_number: string;\n  request_status: number;\n  request_type: string;\n  request_observation: string;\n  request_copy_list: string;\n  employee_id: string;\n  employee_fullname: string;\n  employee_email: string;\n  employee_type: string;\n  employee_type_description: string;\n  employee_profile_edition_rule: string;\n  employee_role_id: string;\n  employee_role_description: string;\n  employee_plataform_id: string;\n  employee_plataform_description: string;\n  employee_costcenter_id: string;\n  employee_costcenter_description: string;\n  employee_company_id: string;\n  employee_company_description: string;\n  employee_branch_id: string;\n  employee_branch_description: string;\n  employe_manager_id: string;\n  employee_manager_name: string;\n  employee_login: string;\n  employee_sap_id: string;\n  employee_userid_sap_status: string;\n  employee_userid_sap_expiration_date: string;\n  employee_as400_id: string;\n  employee_userid_as400_description: string;\n  updateEmployee: boolean;\n}\n\ninterface ISAPUserRequest {\n  service_id: string;\n  service_description: string;\n  environment: string;\n  is_new_user: boolean;\n  user_id: string;\n  reused_user_id_license: string;\n  observation: string;\n}\n\nexport default function SAPSubmitForm(): JSX.Element {\n  const setRequestType = () => {\n    return \"SAP\";\n  };\n\n  const { values, setFieldValue, status } =\n    useFormikContext<IRequestEmployee>();\n\n  const { request, sap } = values;\n  const createJson = () => {\n    const employee: ICreateSASRequestDTO = {\n      requested_by_id: request.request_by ? request.request_by : \"\",\n      requested_by_name: request.request_by ? request.request_by : \"\",\n      requested_by_email: request.request_by ? request.request_by : \"\",\n      request_number: \"\",\n      request_status: -1,\n      request_type: setRequestType(),\n      request_observation: request.request_observation,\n      request_copy_list: \"falta\",\n      employee_id: request.employee.id,\n      employee_fullname: request.employee.description,\n      employee_email: request.employee.email ? request.employee.email : \"\",\n      employee_type: request.employee_type ? request.employee_type.id : \"\",\n      employee_type_description: request.employee_type\n        ? request.employee_type.description\n        : \"\",\n      employee_profile_edition_rule: request.employee_profile_edition_rule,\n      employee_role_id: request.employee_role ? request.employee_role.id : \"\",\n      employee_role_description: request.employee_role\n        ? request.employee_role.description\n        : \"\",\n      employee_plataform_id: request.employee_plataform\n        ? request.employee_plataform.id\n        : \"\",\n      employee_plataform_description: request.employee_plataform\n        ? request.employee_plataform.description\n        : \"\",\n      employee_costcenter_id: request.employee_costcenter\n        ? request.employee_costcenter.id\n        : \"\",\n      employee_costcenter_description: request.employee_costcenter\n        ? request.employee_costcenter.description\n        : \"\",\n      employee_company_id: request.employee_company\n        ? request.employee_company.id\n        : \"\",\n      employee_company_description: request.employee_company\n        ? request.employee_company.description\n        : \"\",\n      employee_branch_id: request.employee_branch\n        ? request.employee_branch.id\n        : \"\",\n      employee_branch_description: request.employee_branch\n        ? request.employee_branch.description\n        : \"\",\n      employe_manager_id: request.employee_manager\n        ? request.employee_manager.id\n        : \"\",\n      employee_manager_name: request.employee_manager\n        ? request.employee_manager.description\n        : \"\",\n      employee_login: request.employee_userid_login\n        ? request.employee_userid_login\n        : \"\",\n      employee_sap_id: request.employee_userid_sap\n        ? request.employee_userid_sap\n        : \"\",\n      employee_userid_sap_status: request.employee_userid_sap_status\n        ? request.employee_userid_sap_status\n        : \"\",\n      employee_userid_sap_expiration_date: request.employee_userid_sap_status\n        ? request.employee_userid_sap_status\n        : \"\",\n      employee_as400_id: \"\",\n      employee_userid_as400_description: \"\",\n      updateEmployee: request.updateEmployee ? request.updateEmployee : false,\n    };\n\n    const user: ISAPUserRequest = {\n      service_id: \"\",\n      service_description: \"\",\n      environment: \"\",\n      is_new_user: false,\n      user_id: \"\",\n      reused_user_id_license: \"\",\n      observation: \"\",\n    };\n\n    if (sap.service_type.id === EServiceIds.BlockUser) {\n      user.service_id = EServiceIds.BlockUser;\n      user.service_description = \"Bloqueio de Usuário\";\n      user.environment = sap.environment.id;\n      user.is_new_user = false;\n      user.user_id = sap.user_id.id;\n      user.reused_user_id_license = sap.user_licence;\n      user.observation = \"\";\n      return {\n        employee,\n        user,\n      };\n    }\n    if (sap.user_type.id === \"S\") {\n      user.service_id = EServiceIds.CreateUser;\n      user.environment = sap.environment.id;\n      user.service_description = \"Criação de Usuário\";\n      user.is_new_user = true;\n      user.user_id = sap.user_id.id;\n      user.reused_user_id_license = sap.user_licence;\n      user.observation = \"\";\n    }\n    if (sap.user_type.id === \"D\") {\n      user.service_id = EServiceIds.UnBlockUser;\n      user.service_description = \"Desbloqueio de Usuário\";\n      user.environment = sap.environment.id;\n      user.is_new_user = false;\n      user.user_id = sap.user_id.id;\n      user.reused_user_id_license = sap.user_licence;\n      user.observation = \"\";\n    }\n\n    const profiles = sap.profiles_table?.map((row) => {\n      return {\n        service_id: row.service_id,\n        service_description: row.service_description,\n        environment: row.environment,\n        is_new_user: user.is_new_user,\n        user_id: row.user_id,\n        is_job_postion: row.job_position !== \"\",\n        job_position: row.job_position,\n        profile_name: row.profile,\n        profile_description: row.profile_description,\n        is_profile_temporary: row.is_temporary,\n        profile_valide_at: new Date(row.profile_start_date),\n        profile_expires_at: new Date(row.profile_end_date),\n        has_conflict: false,\n        restricted_access: false,\n      };\n    });\n\n    return user.service_id === \"\"\n      ? {\n          employee,\n          profiles,\n        }\n      : {\n          employee,\n          user,\n          profiles,\n        };\n  };\n\n  React.useEffect(() => {\n    const data = createJson();\n    setFieldValue(\"data\", data);\n  }, []);\n\n  return (\n    <Stack\n      spacing={2}\n      sx={{\n        width: \"100%\",\n        marginTop: \"120px\",\n        alignContent: \"center\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      {!status && (\n        <Alert severity=\"info\">\n          Clique em enviar para registrar sua solicitação\n        </Alert>\n      )}\n      {status && status?.isError && (\n        <Alert severity=\"error\">{status.error}</Alert>\n      )}\n      {status && !status?.isError && (\n        <Alert severity=\"success\">\n          Solicitação criada com sucesso: {status.data.request_number}\n        </Alert>\n      )}\n    </Stack>\n  );\n}\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable react/jsx-props-no-spreading */\nimport Box from \"@mui/material/Box\";\nimport * as React from \"react\";\n\nimport {\n  FormikStep,\n  FormikStepper,\n} from \"../../../components/controlsformik/Form/FormikStepper\";\nimport EmployeeForm from \"../components/Employee/EmployeeForm\";\nimport SAPRequestForm from \"../components/SAP/SAPRequestForm\";\nimport SAPSubmitForm from \"../components/SAP/SAPSubmitForm\";\nimport {\n  EMPLOYEE_FORM_VALIDATION,\n  SAP_FORM_VALIDATION,\n  INITIAL_SAP_FORM_STATE,\n} from \"../components/ValidationSchemas\";\n\nconst sleep = (time: number) => new Promise((acc) => setTimeout(acc, time));\n\nexport function NewSAPRequestForm(): JSX.Element {\n  return (\n    <Box\n      sx={{\n        marginTop: \"4px\",\n        \"& .MuiTextField-root\": { m: 1, minWidth: \"30px\" },\n        \"& .MuiInputBase-root\": { m: 1, minWidth: \"30px\" },\n        \"& .MuiDataGrid-root\": { m: 1, minWidth: \"30px\" },\n      }}\n    >\n      <FormikStepper\n        initialValues={{ ...INITIAL_SAP_FORM_STATE }}\n        onSubmit={async (values, actions) => {\n          try {\n            await sleep(3000);\n            console.log(\"values\", values.data);\n            // POST request using fetch with async/await\n            const requestOptions = {\n              method: \"POST\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify(values.data),\n            };\n            const response = await fetch(\n              \"http://localhost:3333/requests/sap\",\n              requestOptions\n            );\n            const data = await response.json();\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              actions.setStatus({ isError: true, error });\n            } else actions.setStatus({ isError: false, data });\n            actions.setSubmitting(false);\n            console.log(data);\n          } catch (error) {\n            console.log(error);\n          }\n        }}\n      >\n        <FormikStep\n          label=\"dados do colaborador\"\n          validationSchema={EMPLOYEE_FORM_VALIDATION}\n        >\n          <EmployeeForm />\n        </FormikStep>\n        <FormikStep label=\"serviço SAP\" validationSchema={SAP_FORM_VALIDATION}>\n          <SAPRequestForm />\n        </FormikStep>\n        <FormikStep label=\"ZSOD\">Justificativa ZSOD</FormikStep>\n        <FormikStep label=\"Fim\">\n          <SAPSubmitForm />\n        </FormikStep>\n      </FormikStepper>\n    </Box>\n  );\n}\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from \"react\";\nimport { Route, Redirect, RouteProps } from \"react-router-dom\";\n\nimport { useAuth } from \"../hooks/useAuth\";\n\ninterface IPrivateRouteProps extends RouteProps {\n  // tslint:disable-next-line:no-any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  component: any;\n}\n\nconst PrivateRoute = (props: IPrivateRouteProps): JSX.Element => {\n  const { component: Component, location, ...rest } = props;\n  const { accountInfo } = useAuth();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        accountInfo?.isAuthenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/signin\",\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import {\n  ThemeProvider,\n  Theme,\n  StyledEngineProvider,\n  createTheme,\n} from \"@mui/material/styles\";\nimport React, { Fragment } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport Layout from \"./components/Layout/Layout\";\nimport { AuthProvider } from \"./contexts/auth\";\nimport { Home, Request, Requests } from \"./pages/index\";\nimport { NewAS400RequestForm } from \"./pages/RequestStepForm/AS400/NewAS400RequestForm\";\nimport { NewSAPRequestForm } from \"./pages/RequestStepForm/SAP/NewSAPRequestForm\";\nimport SignIn from \"./pages/SignIn\";\nimport PrivateRoute from \"./routes/PrivateRoute\";\n\ndeclare module \"@mui/styles/defaultTheme\" {\n  // eslint-disable-next-line @typescript-eslint/no-empty-interface\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  type DefaultTheme = Theme;\n}\n\nconst theme = createTheme({\n  palette: {\n    primary: { main: \"#31546d\", light: \"#5f809b\", dark: \"#002b42\" },\n    secondary: { main: \"#5c6670\", light: \"#89949e\", dark: \"#323c45\" },\n  },\n});\n\nexport default function Router(): JSX.Element {\n  return (\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <BrowserRouter>\n          <AuthProvider>\n            <>\n              <Switch>\n                <Layout>\n                  <Route path=\"/signin\" exact component={SignIn} />\n                  <PrivateRoute path=\"/\" exact component={Home} />\n                  <PrivateRoute path=\"/home\" exact component={Home} />\n                  <PrivateRoute path=\"/requests\" exact component={Requests} />\n                  <Route\n                    path=\"/sap/request\"\n                    exact\n                    component={NewSAPRequestForm}\n                  />\n                  <Route\n                    path=\"/as400/request\"\n                    exact\n                    component={NewAS400RequestForm}\n                  />\n                  <PrivateRoute path=\"/request/:id\" exact component={Request} />\n                  <PrivateRoute\n                    path=\"/requests/ordered/:orderby\"\n                    exact\n                    component={Requests}\n                  />\n                </Layout>\n              </Switch>\n            </>\n          </AuthProvider>\n        </BrowserRouter>\n      </ThemeProvider>\n    </StyledEngineProvider>\n  );\n}\n","import { CssBaseline } from \"@mui/material\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Router from \"./router\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <Router />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}