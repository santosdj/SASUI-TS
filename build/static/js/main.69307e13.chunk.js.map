{"version":3,"sources":["services/token.service.ts","services/api.ts","utils/configAzureAd.ts","utils/graphService.ts","contexts/auth.tsx","hooks/useAuth.ts","components/Menu/MenuMain.tsx","assets/sap2.svg","components/Menu/MenuSAP.tsx","components/Menu/MenuSolicitacoes.tsx","components/Layout/useLayout.ts","components/Layout/AppBar/index.tsx","components/Layout/Layout.tsx","components/Home/UserAprovalRequests.tsx","components/Home/UserRequestColumns.ts","services/request.service.ts","components/Home/UserRequests.tsx","components/Home/UserTodoRequests.tsx","pages/Home.tsx","components/controls/WorkflowResponsableTable.tsx","components/controls/WorkFlowSteps.tsx","pages/Request/components/AS400Table.tsx","components/controls/InputReadText.tsx","pages/Request/components/EmployeeForm.tsx","pages/Request/components/SAPTable.tsx","pages/Request/Request.tsx","components/Table/TableHead.tsx","components/Table/TableToolBar.tsx","components/Table/useTableStyles.ts","components/Table/index.tsx","pages/Requests.tsx","hooks/useRequestTable.ts","assets/LDC_logo.png","pages/SignIn.tsx","components/controlsformik/Form/FormikStepper.tsx","components/controlsformik/CheckBoxAutoComplete.tsx","services/sap.service.ts","components/controlsformik/InputText.tsx","components/controlsformik/FormikControls.tsx","services/as400.service.ts","components/controlsformik/InputSelect.tsx","components/controlsformik/InputEmployee.tsx","components/controlsformik/InputSAPProfiles.tsx","components/controlsformik/InputDatePicker.tsx","components/controlsformik/InputAutoComplete.tsx","components/controlsformik/CheckBoxAS400Access.tsx","pages/RequestStepForm/components/AS400/AS400RequestTable.tsx","pages/RequestStepForm/components/AS400/AS400RequestForm.tsx","pages/RequestStepForm/components/AS400/AS400SubmitForm.tsx","services/employee.service.ts","pages/RequestStepForm/components/Employee/EmployeeForm.tsx","pages/RequestStepForm/components/ValidationSchemas.tsx","pages/RequestStepForm/AS400/NewAS400RequestForm.tsx","pages/RequestStepForm/components/SAP/SAPRequestTable.tsx","pages/RequestStepForm/components/SAP/SAPRequestForm.tsx","pages/RequestStepForm/components/SAP/SAPSubmitForm.tsx","pages/RequestStepForm/SAP/NewSAPRequestForm.tsx","routes/PrivateRoute.tsx","router.tsx","index.tsx"],"names":["refreshtokenname","accesstokenname","localStorage","getItem","this","token","setItem","console","log","removeItem","api","axios","create","baseURL","process","headers","interceptors","request","use","a","config","undefined","TokenService","getLocalAccessToken","Authorization","error","response","res","err","originalConfig","url","status","_retry","post","getLocalRefreshToken","rs","data","authtoken","refreshtoken","setLocalAccessToken","setLocalRefreshToken","Promise","reject","msalConfig","auth","clientId","redirectUri","authority","knownAuthorities","postLogoutRedirectUri","cache","cacheLocation","storeAuthStateInCookie","loginRequest","scopes","loginRequest2","graph","require","getAuthenticatedClient","accessToken","Client","init","authProvider","done","getUserDetails","client","select","get","user","getUserPhoto","userId","fetch","method","AuthContext","createContext","msalInstance","PublicClientApplication","AuthProvider","children","useState","accountInfo","setAccountInfo","getAuthResult","accounts","getAllAccounts","length","Error","acquireTokenSilent","account","silentResult","acquireTokenPopup","interactiveResult","getBackEndAuthResult","idToken","email","message","success","getMyPhoto","then","ok","blob","photoBlob","URL","createObjectURL","result","getUserProfile","useCallback","authResult","mail","backendResult","displayName","userPrincipalName","avatar","isAuthenticated","window","alert","loginPopup","prompt","useEffect","Provider","value","signInWithAD","signOut","removeTokens","logoutRedirect","useAuth","context","useContext","useStyles","makeStyles","root","width","maxWidth","nested","paddingLeft","MenuMain","classes","List","component","className","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","color","MenuSAP","React","open","setOpen","onClick","src","sapicon","alt","Collapse","in","timeout","unmountOnExit","disablePadding","MenuSolicitacoes","useLayout","drawerWidth","theme","createStyles","display","title","breakpoints","up","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","search","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","searchIcon","height","pointerEvents","inputRoot","inputInput","cardSection","minHeight","cardContent","cardAvatar","margin","sectionDesktop","sectionMobile","grow","accountmenu","desktopid","mobileid","profiletext","accounttext","avataralt","count","text","menutext","notification","placeholder","useTheme","openedMixin","closedMixin","Drawer","styled","MuiDrawer","shouldForwardProp","prop","boxSizing","AppBar","MuiAppBar","MenuNavigator","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","newMenu","Card","CardActionArea","CardContent","Avatar","CardActions","Button","size","renderMenu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","onClose","renderMobileMenu","MenuItem","IconButton","Badge","badgeContent","Toolbar","edge","clsx","Typography","variant","noWrap","InputBase","input","inputProps","direction","Divider","Layout","UserAprovalRequests","draftColumns","field","headerName","sortable","openColumns","closedColumns","RequestService","description","userid","listtype","rows","map","entry","index","request_id","request_by","requested_by_name","request_status","request_date","created_at","request_number","request_observation","employee_role","employee_role_id","employee_role_description","employee_plataform","employee_plataform_id","employee_plataform_description","employee_costcenter","employee_costcenter_id","employee_costcenter_description","request_category","employee_type","employee_type_description","employee_manager","employe_manager_id","employee_manager_name","employee_company","employee_company_id","employee_company_description","employee_branch","employee_branch_id","employee_branch_description","employee","employee_id","employee_fullname","employee_email","employee_userid_login","employee_login","employee_userid_as400","employee_as400_id","employee_as400_id_description","request_type","manager","workflow","license","users","fullname","join","ci","cioilseeds","lider","lider_backup","executors","obj","formatEmployeeData","sap","saporderprofile","service_id","service_description","environment","user_id","job_position","profile_name","profile_description","is_profile_temporary","profile_expires_at","profile_valide_at","has_conflict","restricted_access","responsable","getCurrentResponsable","sapuser","saporderuser","as400","as400orderprofile","is_new_user","system","routine","access_type","restricted_acces","limited_access","company_id","branch_id","branch_name","region_id","region_name","access","access_observation","as400user","as400orderuser","copy_user_id_status","copy_user_id","saptable","as400table","UserRequests","report","columns","setRows","isCancelled","setIsCancelled","history","useHistory","getUserRequestsByUserId","fetchData","style","pageSize","rowsPerPageOptions","checkboxSelection","onCellDoubleClick","params","getValue","push","UserTodoRequests","Home","setValue","isLoading","setIsLoading","draft","closed","aproving","executing","userRequestCount","setUserRequestCount","getUserRequestCount","userCount","TabPanel","props","other","role","hidden","Box","p","Paper","square","Tabs","onChange","newValue","indicatorColor","textColor","Tab","icon","label","disabled","WorkflowResponsableTable","TableContainer","Table","sx","minWidth","TableHead","TableRow","TableCell","align","TableBody","responsables","row","border","group","doingCount","doneCount","doneBy","WorkFlowSteps","initialData","setInitialData","steps","activeStep","setActiveStep","Set","skipped","setSkipped","getRequestWorkFlow","forEach","element","isRequired","pos","findIndex","isInitial","isStepSkipped","step","has","Stepper","marginTop","marginBottom","alignContent","stepProps","labelProps","statusObservation","optional","completed","isConcluded","Step","StepLabel","mt","mb","flexDirection","pt","flex","prevActiveStep","mr","newSkipped","values","delete","AS400Table","InputReadText","name","fullWidth","multiline","maxRows","TextField","defaultValue","InputProps","readOnly","EmployeeForm","Grid","container","item","xs","toLocaleString","SAPTable","Request","useParams","getRequestById","m","EnhancedTableHead","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","headCells","Checkbox","indeterminate","checked","headCell","numeric","sortDirection","TableSortLabel","active","property","visuallyHidden","useToolbarStyles","paddingRight","highlight","mode","secondary","main","lighten","light","dark","EnhancedTableToolbar","Tooltip","paper","table","clip","overflow","top","descendingComparator","b","getComparator","stableSort","array","comparator","stabilizedThis","el","sort","EnhancedTable","headerData","tableType","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","handleClick","selectedIndex","indexOf","newSelected","concat","slice","handleOpenRequestClick","requestId","emptyRows","Math","min","target","newSelecteds","n","isItemSelected","labelId","line","hover","tabIndex","stopPropagation","scope","tableRowByStatus","tableRowByNumber","colSpan","TablePagination","onPageChange","newPage","onRowsPerPageChange","parseInt","FormControlLabel","control","Switch","Requests","requests","setRequests","orderby","getRequestList","SignIn","mainContent","thisContent","logo","FormikStep","FormikStepper","childrenArray","toArray","setStep","setCompleted","currentChild","isLastStep","validationSchema","onSubmit","helpers","s","isSubmitting","autoComplete","alternativeLabel","child","startIcon","CircularProgress","type","endIcon","fontSize","checkedIcon","EUserTypes","EServiceIds","SAPService","getSAPTemporyFieldCollection","getSAProfileCollection","param","take","mapeddata","AddProfile","New","Existent","Blocked","UnBlockUser","ExcludeProfile","BlockUser","user_user_id","user_user_name","manager_id","cost_center_id","sapService","InputText","labelWithId","otherProps","useField","mata","configTextField","touched","helperText","FormikControls","InputSelect","optionsPrimaryKey","onChangeCleanFieldName","editMode","defaultOptions","getOptions","useFormikContext","setFieldValue","setTouched","inputValue","setInputValue","options","setOptions","loading","Autocomplete","onOpen","onBlur","isOptionEqualToValue","option","toUpperCase","getOptionLabel","onInputChange","newInputValue","renderInput","endAdornment","InputEmployee","setLabelOption","setLabelHintOptions","getResults","throttle","callback","results","newOptions","filterOptions","x","filterSelectedOptions","renderOption","AccountCircle","InputSAPProfiles","placeHolder","parentValue","addToTable","handleProfileChange","disabledOptions","multiple","getOptionDisabled","find","InputDatePicker","otherprops","configError","InputLabelProps","shrink","InputAutoComplete","CheckBoxAutoComplete","disableCloseOnSelect","CheckBoxAS400Access","inc","exc","con","handleChange","evt","FormControl","FormGroup","labelPlacement","AS400Service","CopyUser","profiles","profile","routines","routine_id","system_id","trim","branch","branchs","regions","as400Service","valueGetter","renderCell","CustomToolbar","selectionModel","removeProfile","updateProfile","addProfiles","checkFieldNotNull","ids","toString","company","region","getCompanyOnlyCollection","getBranchOnlyCollection","getRegionCollection","handleAddClick","handleDeleteClick","AS400RequestTable","setSelectionModel","onCellClick","colDef","onSelectionModelChange","newSelectionModel","components","componentsProps","AS400RequestForm","setAccess","include","exclude","change","handleAddJobPositionClick","getAS400JobPosition","service_type","security_type","security_company","security_branchs","security_regions","security_text","ServiceId","user_type","getAS400ServiceTypeCollection","getAS400EnvironmentCollection","getAS400UserTypeCollection","getAS400YesNoCollection","is_job_position","getAS400JobPositionCollection","getAS400SystemCollection","getAS400UsersByNameCollection","getAS400RoutineCollection","new_table","filter","addroutines","uniqueData","Array","from","reduce","set","Map","fixId","Alert","forwardRef","ref","elevation","AS400SubmitForm","requested_by_id","requested_by_email","request_copy_list","employee_profile_edition_rule","employee_sap_id","employee_userid_sap","employee_userid_sap_status","employee_userid_sap_expiration_date","employee_userid_as400_description","updateEmployee","reused_user_id_license","observation","user_licence","user_id_source","CreateUser","company_name","createJson","Stack","severity","isError","EmployeeService","newdata","full_name","employee_without_id","is_contingency","has_sap_job_positions","employee_sap_job_positions","plataform","costCenter","as400User","user_name","employee_sap_id_status","employee_sap_id_expiration_date","getJobPositionCollection","jobPositions","setValues","canEditEmployeeFields","rule","getEmployeeValues","newValues","updateForm","getEmployeeByNameCollection","setEmployeeNameOption","setEmployeeHintNameOptions","getEmployeeTypeCollection","getRoleCollection","getCostCenterCollection","getManagerCollection","canEditManagerField","setEmployeeEmailOption","setEmployeeHintEmailOptions","getPlataformCollection","getCompanyBranchCollection","select_object","Yup","default","ensure","test_select_object","msg","test","val","default_object_shape","INITIAL_EMPLOYEE_FORM_STATE","Date","request_opentab","INITIAL_SAP_FORM_STATE","is_temporary","profile_type","profile_start_date","profile_end_date","profiles_table","INITIAL_AS400_FORM_STATE","EMPLOYEE_VALIDATION","required","nullable","SAP_VALIDATION","when","notRequired","AS400_VALIDATION","EMPLOYEE_FORM_VALIDATION","SAP_FORM_VALIDATION","AS400_FORM_VALIDATION","sleep","time","acc","setTimeout","NewAS400RequestForm","initialValues","actions","requestOptions","body","JSON","stringify","json","setStatus","setSubmitting","DataTable","SAPRequestForm","isValid","usersap","getSAPEnvironmentCollection","getSAPServiceTypeCollection","getSAPProfileTypeCollection","addprofiles","getSAPUserTypeCollection","getSAPUserIdCollection","profileToRemove","new_profiles_table","new_profiles","SAPSubmitForm","is_job_postion","NewSAPRequestForm","PrivateRoute","Component","location","rest","render","pathname","state","createTheme","Router","StyledEngineProvider","injectFirst","ThemeProvider","path","exact","ReactDOM","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.69307e13.chunk.js","sourcesContent":["class TokenService {\n  private refreshtokenname = \"@SAS:refreshToken\";\n  private accesstokenname = \"@SAS:accessToken\";\n  getLocalRefreshToken() {\n    return localStorage.getItem(this.refreshtokenname);\n  }\n  getLocalAccessToken() {\n    return localStorage.getItem(this.accesstokenname);\n  }\n\n  setLocalRefreshToken(token: string) {\n    return localStorage.setItem(this.refreshtokenname, token);\n  }\n  setLocalAccessToken(token: string) {\n    console.log(\"setting access tokens =\", token);\n    return localStorage.setItem(this.accesstokenname, token);\n  }\n  removeTokens() {\n    localStorage.removeItem(this.accesstokenname);\n    localStorage.removeItem(this.refreshtokenname);\n  }\n}\n\nexport default new TokenService();\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-underscore-dangle */\nimport axios, { AxiosRequestConfig } from \"axios\";\n\nimport TokenService from \"./token.service\";\n\n// import { getToken } from \"./auth\";\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_SAS_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\napi.interceptors.request.use(async (config) => {\n  return config;\n});\n\napi.interceptors.request.use(\n  async (config: AxiosRequestConfig) => {\n    if (config.headers === undefined) {\n      // eslint-disable-next-line no-param-reassign\n      config.headers = {};\n    }\n    const token = TokenService.getLocalAccessToken();\n    if (token) {\n      // eslint-disable-next-line no-param-reassign\n      config.headers.Authorization = `Bearer ${token}`;\n      config.headers[\"x-access-token\"] = token;\n    }\n    return config;\n  },\n  (error) => error\n);\n\napi.interceptors.response.use(\n  (res) => {\n    return res;\n  },\n  async (err) => {\n    const originalConfig = err.config;\n\n    if (originalConfig.url !== \"/sessions/azure\" && err.response) {\n      // Access Token was expired\n      // eslint-disable-next-line no-underscore-dangle\n      if (err.response.status === 401 && !originalConfig._retry) {\n        originalConfig._retry = true;\n        console.log(\"refreshing token\");\n\n        try {\n          const rs = await api.post(\"/refresh-token\", {\n            token: TokenService.getLocalRefreshToken(),\n          });\n          console.log(\"token refreshed\", rs.data);\n          const { authtoken, refreshtoken } = rs.data;\n\n          TokenService.setLocalAccessToken(authtoken);\n          TokenService.setLocalRefreshToken(refreshtoken);\n\n          return api(originalConfig);\n        } catch (_error) {\n          return Promise.reject(_error);\n        }\n      }\n    }\n\n    return Promise.reject(err);\n  }\n);\n\nexport default api;\n","import { Configuration } from \"@azure/msal-browser\";\n// Config object to be passed to Msal on creation\nexport const msalConfig: Configuration = {\n  auth: {\n    clientId: process.env.REACT_APP_CLIENT_ID as string,\n    redirectUri: process.env.REACT_APP_REDIRECT_URL,\n    authority: `https://${process.env.REACT_APP_KNOWNAUTHORITIES}/${process.env.REACT_APP_TENANT_ID}`,\n    knownAuthorities: [process.env.REACT_APP_KNOWNAUTHORITIES as string],\n    postLogoutRedirectUri: \"/\",\n  },\n  cache: {\n    cacheLocation: \"localStorage\",\n    storeAuthStateInCookie: false,\n  },\n};\n\nexport const loginRequest = {\n  scopes: [`${process.env.REACT_APP_CLIENT_ID}/.default`],\n};\n\nexport const loginRequest2 = {\n  scopes: [\"user.read\"],\n};\n","// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst graph = require(\"@microsoft/microsoft-graph-client\");\n\nfunction getAuthenticatedClient(accessToken: string) {\n  const client = graph.Client.init({\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    authProvider: (done: any) => {\n      done(null, accessToken);\n    },\n  });\n\n  return client;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport async function getUserDetails(accessToken: string): Promise<any> {\n  const client = getAuthenticatedClient(accessToken);\n\n  const user = await client\n    .api(\"/me\")\n    .select(\"displayName,mail,userPrincipalName,photo\")\n    .get();\n\n  return user;\n}\n\nexport async function getUserPhoto(\n  userId: string,\n  accessToken: string\n): Promise<Response> {\n  const url = `https://graph.microsoft.com/v1.0/${userId}/photo/$value`;\n\n  return fetch(url, {\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${accessToken}`,\n      \"Content-Type\": \"application/json\",\n    },\n  });\n}\n","/* eslint-disable consistent-return */\n/* eslint-disable func-names */\nimport {\n  PublicClientApplication,\n  Configuration,\n  AuthenticationResult,\n} from \"@azure/msal-browser\";\nimport React, {\n  createContext,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useState,\n} from \"react\";\n\nimport api from \"../services/api\";\nimport TokenService from \"../services/token.service\";\nimport {\n  msalConfig,\n  loginRequest,\n  loginRequest2,\n} from \"../utils/configAzureAd\";\nimport { getUserDetails, getUserPhoto } from \"../utils/graphService\";\n\ninterface IBackendAuthResult {\n  authtoken: string;\n  refreshtoken: string;\n  message: string;\n  success: boolean;\n}\n\ntype accountType = {\n  isAuthenticated: boolean;\n  user: {\n    displayName: string;\n    email: string;\n    avatar: string;\n  };\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error: any;\n};\n\ntype AuthContextType = {\n  signInWithAD: () => Promise<void>;\n  signOut: () => void;\n  accountInfo: accountType | undefined;\n};\n\ntype AuthContextProviderProps = {\n  children: ReactNode;\n};\n\nexport const AuthContext = createContext({} as AuthContextType);\n\nconst msalInstance = new PublicClientApplication(msalConfig as Configuration);\n\nexport function AuthProvider({\n  children,\n}: AuthContextProviderProps): JSX.Element {\n  const [accountInfo, setAccountInfo] = useState<accountType>();\n\n  const getAuthResult = async (\n    scopes: string[]\n  ): Promise<AuthenticationResult> => {\n    try {\n      const accounts = msalInstance.getAllAccounts();\n\n      if (accounts.length <= 0) throw new Error(\"Login required\");\n      const silentResult = await msalInstance.acquireTokenSilent({\n        scopes,\n        account: accounts[0],\n      });\n\n      return silentResult;\n    } catch (err) {\n      if (err) {\n        const interactiveResult = await msalInstance.acquireTokenPopup({\n          scopes,\n        });\n\n        return interactiveResult;\n      }\n      throw err;\n    }\n  };\n\n  const getBackEndAuthResult = async (\n    idToken: string,\n    email: string\n  ): Promise<IBackendAuthResult> => {\n    try {\n      const response = await api.post(\"/sessions/azure\", {\n        idToken,\n        email,\n      });\n      return {\n        authtoken: response.data.authtoken,\n        refreshtoken: response.data.refreshtoken,\n        message: \"\",\n        success: true,\n      };\n    } catch (err: any) {\n      return {\n        authtoken: \"\",\n        refreshtoken: \"\",\n        message: err.response ? err.response.data.message : err.message,\n        success: false,\n      };\n    }\n  };\n\n  async function getMyPhoto(accessToken: string) {\n    const result = await getUserPhoto(\"me\", accessToken)\n      .then(function (response) {\n        if (response.ok) {\n          return response.blob();\n        }\n      })\n      .then(function (photoBlob) {\n        if (photoBlob) {\n          return URL.createObjectURL(photoBlob);\n        }\n      });\n    return result;\n  }\n\n  const getUserProfile = useCallback(async () => {\n    try {\n      // const accessToken = await getAccessToken(loginRequest2.scopes);\n      const authResult = await getAuthResult(loginRequest2.scopes);\n\n      const { accessToken, idToken } = authResult;\n\n      if (accessToken) {\n        const user = await getUserDetails(accessToken);\n        console.log(user);\n        localStorage.setItem(\"@AzureAd:accessToken\", accessToken);\n        localStorage.setItem(\"@AzureAd:idToken\", idToken);\n        console.log(\"Setting account...\");\n\n        // get api access token.. if fails login fails..\n        const backendResult = await getBackEndAuthResult(idToken, user.mail);\n\n        if (backendResult.success) {\n          setAccountInfo({\n            isAuthenticated: true,\n            user: {\n              displayName: user.displayName,\n              email: user.mail || user.userPrincipalName,\n              avatar: (await getMyPhoto(accessToken)) as string,\n            },\n            error: null,\n          });\n          TokenService.setLocalAccessToken(backendResult.authtoken);\n          TokenService.setLocalRefreshToken(backendResult.refreshtoken);\n        } else {\n          // eslint-disable-next-line no-alert\n          window.alert(`Erro ao autenticar ${backendResult.message}`);\n          setAccountInfo({\n            isAuthenticated: false,\n            user: { displayName: \"\", email: \"\", avatar: \"\" },\n            error: backendResult.message,\n          });\n        }\n      }\n    } catch (err) {\n      setAccountInfo({\n        isAuthenticated: false,\n        user: { displayName: \"\", email: \"\", avatar: \"\" },\n        error: err,\n      });\n    }\n  }, []);\n\n  async function signInWithAD() {\n    try {\n      await msalInstance.loginPopup({\n        scopes: loginRequest.scopes,\n        prompt: \"select_account\",\n      });\n\n      await getUserProfile();\n      console.log(\"peguei o perfil...retornando...\");\n    } catch (err) {\n      setAccountInfo({\n        isAuthenticated: false,\n        user: { displayName: \"\", email: \"\", avatar: \"\" },\n        error: err,\n      });\n    }\n  }\n\n  const signOut = () => {\n    localStorage.removeItem(\"@AzureAd:accessToken\");\n    localStorage.removeItem(\"@AzureAd:idToken\");\n    TokenService.removeTokens();\n    msalInstance.logoutRedirect();\n  };\n\n  useEffect(() => {\n    const accounts = msalInstance.getAllAccounts();\n    console.log(\"No use effect do context\");\n    if (accounts && accounts.length > 0) {\n      getUserProfile();\n      console.log(\"Pegou o user profile no useEffect\");\n    }\n  }, [getUserProfile]);\n\n  return (\n    <AuthContext.Provider value={{ signInWithAD, signOut, accountInfo }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n","import { useContext } from \"react\";\n\nimport { AuthContext } from \"../contexts/auth\";\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n\n  return context;\n}\n","import AddCircleIcon from \"@mui/icons-material/AddCircle\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n  },\n  nested: {\n    paddingLeft: 16,\n  },\n}));\n\nexport default function MenuMain(): JSX.Element {\n  const classes = useStyles();\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n    >\n      <ListItem button key=\"Home\" component={Link} to=\"/\">\n        <ListItemIcon>\n          <HomeIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Home\" />\n      </ListItem>\n\n      <ListItem button key=\"Nova\" component={Link} to=\"/sap/request\">\n        <ListItemIcon>\n          <AddCircleIcon color=\"primary\" />\n        </ListItemIcon>\n        <ListItemText primary=\"SAP\" />\n      </ListItem>\n\n      <ListItem button key=\"Nova 2\" component={Link} to=\"/as400/request\">\n        <ListItemIcon>\n          <AddCircleIcon color=\"primary\" />\n        </ListItemIcon>\n        <ListItemText primary=\"AS400\" />\n      </ListItem>\n    </List>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/sap2.bc41474a.svg\";","import ArtTrackIcon from \"@mui/icons-material/ArtTrack\";\nimport ControlCameraIcon from \"@mui/icons-material/ControlCamera\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport FormatListNumberedIcon from \"@mui/icons-material/FormatListNumbered\";\nimport { List, ListItem, ListItemText, Collapse } from \"@mui/material\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport sapicon from \"../../assets/sap2.svg\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n  },\n  nested: {\n    paddingLeft: 16,\n  },\n}));\n\nexport default function MenuSAP(): JSX.Element {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n    >\n      <ListItem component={Link} to=\"/requests/ordered/ci\">\n        <ListItemIcon>\n          <ControlCameraIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Controles Internos\" />\n      </ListItem>\n\n      <ListItem button onClick={handleClick}>\n        <ListItemIcon color=\"primary\">\n          <span>\n            <img src={sapicon} alt=\"Menu SAP\" />\n          </span>\n        </ListItemIcon>\n        <ListItemText primary=\"\" />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          <ListItem button className={classes.nested}>\n            <ListItemIcon>\n              <FormatListNumberedIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Em análise\" />\n          </ListItem>\n          <ListItem button className={classes.nested}>\n            <ListItemIcon>\n              <ArtTrackIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Em Execução\" />\n          </ListItem>\n          <ListItem button className={classes.nested}>\n            <ListItemIcon>\n              <ArtTrackIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Todas\" />\n          </ListItem>\n        </List>\n      </Collapse>\n    </List>\n  );\n}\n","import ArtTrackIcon from \"@mui/icons-material/ArtTrack\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport FolderOpenIcon from \"@mui/icons-material/FolderOpen\";\nimport FormatListNumberedIcon from \"@mui/icons-material/FormatListNumbered\";\nimport { List, ListItem, ListItemText, Collapse } from \"@mui/material\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n  },\n  nested: {\n    paddingLeft: 16,\n  },\n}));\n\nexport default function MenuSolicitacoes(): JSX.Element {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n    >\n      <ListItem button onClick={handleClick}>\n        <ListItemIcon>\n          <FolderOpenIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Solicitações\" />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          <ListItem\n            button\n            className={classes.nested}\n            component={Link}\n            to=\"/requests/ordered/number\"\n          >\n            <ListItemIcon>\n              <FormatListNumberedIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Número\" />\n          </ListItem>\n          <ListItem\n            button\n            className={classes.nested}\n            component={Link}\n            to=\"/requests/ordered/status\"\n          >\n            <ListItemIcon>\n              <ArtTrackIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Status\" />\n          </ListItem>\n        </List>\n      </Collapse>\n    </List>\n  );\n}\n","import { alpha, ClassNameMap, Theme, useTheme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\ntype AppConfigType = {\n  accountmenu: {\n    desktopid: string;\n    mobileid: string;\n    profiletext: string;\n    accounttext: string;\n    avatar?: string;\n    avataralt: string;\n  };\n  message: {\n    count: number;\n    text: string;\n    menutext: string;\n  };\n  notification: {\n    count: number;\n    text: string;\n    menutext: string;\n  };\n  search: {\n    placeholder: string;\n  };\n};\n\nexport function useLayout(): {\n  config: AppConfigType;\n  classes: ClassNameMap;\n  drawerWidth: number;\n  theme: Theme;\n} {\n  const drawerWidth = 230;\n  const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n      root: {\n        display: \"flex\",\n      },\n      title: {\n        display: \"none\",\n        [theme.breakpoints.up(\"sm\")]: {\n          display: \"block\",\n        },\n        paddingRight: \"20px\",\n      },\n      appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n      },\n      appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.enteringScreen,\n        }),\n      },\n      menuButton: {\n        marginRight: 36,\n      },\n      hide: {\n        display: \"none\",\n      },\n      drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: \"nowrap\",\n      },\n      drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.enteringScreen,\n        }),\n      },\n      drawerClose: {\n        transition: theme.transitions.create(\"width\", {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: \"hidden\",\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up(\"sm\")]: {\n          width: theme.spacing(9) + 1,\n        },\n      },\n      toolbar: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n      },\n      content: {\n        flexGrow: 1,\n        padding: theme.spacing(0.3),\n      },\n      search: {\n        position: \"relative\",\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\n        \"&:hover\": {\n          backgroundColor: alpha(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: \"100%\",\n        [theme.breakpoints.up(\"sm\")]: {\n          marginLeft: theme.spacing(3),\n          width: \"auto\",\n        },\n      },\n      searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      },\n      inputRoot: {\n        color: \"inherit\",\n      },\n      inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n        transition: theme.transitions.create(\"width\"),\n        width: \"100%\",\n        [theme.breakpoints.up(\"md\")]: {\n          width: \"20ch\",\n        },\n      },\n      cardSection: {\n        minHeight: 140,\n        width: \"100%\",\n      },\n      cardContent: {\n        display: \"flex\",\n        alignItems: \"center\",\n      },\n      cardAvatar: {\n        display: \"block\",\n        width: 100,\n        height: 100,\n        margin: 20,\n      },\n      sectionDesktop: {\n        display: \"none\",\n        [theme.breakpoints.up(\"md\")]: {\n          display: \"flex\",\n        },\n      },\n      sectionMobile: {\n        display: \"flex\",\n        [theme.breakpoints.up(\"md\")]: {\n          display: \"none\",\n        },\n      },\n      grow: {\n        flexGrow: 1,\n      },\n    })\n  );\n\n  const config: AppConfigType = {\n    accountmenu: {\n      desktopid: \"account-menu\",\n      mobileid: \"account-menu-mobile\",\n      profiletext: \"Perfil\",\n      accounttext: \"Conta\",\n      avatar: \"https://material-ui.com/static/images/avatar/1.jpg\",\n      avataralt: \"Fake user\",\n    },\n    message: {\n      count: 4,\n      text: `show ${2} new mails`,\n      menutext: \"Mensagens\",\n    },\n    notification: {\n      count: 6,\n      text: `show ${4} new alerts`,\n      menutext: \"Notificações\",\n    },\n    search: {\n      placeholder: \"Pesquisar...\",\n    },\n  };\n  const theme = useTheme();\n  const classes = useStyles();\n  return { config, classes, drawerWidth, theme };\n}\n","import AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport MailIcon from \"@mui/icons-material/Mail\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport {\n  Toolbar,\n  Typography,\n  Divider,\n  Avatar,\n  Menu,\n  MenuItem,\n  Badge,\n  InputBase,\n  Card,\n  CardActionArea,\n  CardContent,\n  CardActions,\n  Button,\n} from \"@mui/material\";\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from \"@mui/material/AppBar\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { styled, Theme, CSSObject } from \"@mui/material/styles\";\nimport clsx from \"clsx\";\nimport React, { Fragment } from \"react\";\n\nimport { useAuth } from \"../../../hooks/useAuth\";\nimport MenuMain from \"../../Menu/MenuMain\";\nimport MenuSAP from \"../../Menu/MenuSAP\";\nimport MenuSolicitacoes from \"../../Menu/MenuSolicitacoes\";\nimport { useLayout } from \"../useLayout\";\n\nconst drawerWidth = 230;\nconst openedMixin = (theme: Theme): CSSObject => ({\n  width: drawerWidth,\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen,\n  }),\n  overflowX: \"hidden\",\n});\n\nconst closedMixin = (theme: Theme): CSSObject => ({\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  overflowX: \"hidden\",\n  width: `calc(${theme.spacing(7)} + 1px)`,\n  [theme.breakpoints.up(\"sm\")]: {\n    width: `calc(${theme.spacing(9)} + 1px)`,\n  },\n});\n\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  whiteSpace: \"nowrap\",\n  boxSizing: \"border-box\",\n  ...(open && {\n    ...openedMixin(theme),\n    \"& .MuiDrawer-paper\": openedMixin(theme),\n  }),\n  ...(!open && {\n    ...closedMixin(theme),\n    \"& .MuiDrawer-paper\": closedMixin(theme),\n  }),\n}));\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ninterface AppBarProps extends MuiAppBarProps {\n  open?: boolean;\n}\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})<AppBarProps>(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create([\"width\", \"margin\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nexport default function MenuNavigator(): JSX.Element {\n  const { accountInfo, signOut } = useAuth();\n  const [open, setOpen] = React.useState(false);\n  const { config, classes, theme } = useLayout();\n\n  const handleDrawerOpen = () => {\n    console.log(\"handle open\");\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    console.log(\"handle close\");\n    setOpen(false);\n  };\n\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] =\n    React.useState<null | HTMLElement>(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const newMenu = (\n    <Card className={classes.cardSection}>\n      <CardActionArea>\n        <CardContent>\n          <Avatar\n            alt={accountInfo?.user.displayName}\n            src={accountInfo?.user.avatar}\n            className={classes.cardAvatar}\n          />\n          <div>\n            <div>{accountInfo?.user.displayName}</div>\n            <div>{accountInfo?.user.email}</div>\n          </div>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" onClick={signOut}>\n          Sign Out\n        </Button>\n        <Button size=\"small\" color=\"primary\" onClick={handleMenuClose}>\n          Fechar\n        </Button>\n      </CardActions>\n    </Card>\n  );\n\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={config.accountmenu.desktopid}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      {newMenu}\n    </Menu>\n  );\n\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={config.accountmenu.mobileid}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton\n          aria-label={config.message.text}\n          color=\"inherit\"\n          size=\"large\"\n        >\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>{config.message.menutext}</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton\n          aria-label={config.notification.text}\n          color=\"inherit\"\n          size=\"large\"\n        >\n          <Badge badgeContent={config.notification.count} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>{config.notification.menutext}</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls={config.accountmenu.desktopid}\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n          size=\"large\"\n        />\n        <AccountCircle />\n        <p>{config.accountmenu.profiletext}</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar position=\"fixed\" open={open}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n            size=\"large\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            SAS On Cloud\n          </Typography>\n          <div className={classes.grow} />\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder={config.search.placeholder}\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton\n              aria-label={config.message.text}\n              color=\"inherit\"\n              size=\"large\"\n            >\n              <Badge badgeContent={config.message.count} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              aria-label={config.notification.text}\n              color=\"inherit\"\n              size=\"large\"\n            >\n              <Badge badgeContent={config.notification.count} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={config.accountmenu.desktopid}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n              size=\"large\"\n            >\n              <Avatar\n                alt={accountInfo?.user.displayName}\n                src={accountInfo?.user.avatar}\n              />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={config.accountmenu.mobileid}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n              size=\"large\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n\n      <Drawer variant=\"permanent\" open={open}>\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose} size=\"large\">\n            {theme.direction === \"rtl\" ? (\n              <ChevronRightIcon />\n            ) : (\n              <ChevronLeftIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <MenuMain />\n        <Divider />\n        <MenuSolicitacoes />\n        <MenuSAP />\n      </Drawer>\n    </>\n  );\n}\n","import React, { ReactNode } from \"react\";\n\nimport MenuNavigator from \"./AppBar\";\nimport { useLayout } from \"./useLayout\";\n\ntype LayoutProps = {\n  children: ReactNode;\n};\n\nexport default function Layout({ children }: LayoutProps): JSX.Element {\n  const { classes } = useLayout();\n\n  return (\n    <div className={classes.root}>\n      <MenuNavigator />\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {children}\n      </main>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function UserAprovalRequests(): JSX.Element {\n  return <div>Para aprovar</div>;\n}\n","import { GridColDef } from \"@mui/x-data-grid\";\n\nconst draftColumns: GridColDef[] = [\n  {\n    field: \"id\",\n    headerName: \"ID\",\n    width: 100,\n    hide: true,\n  },\n  {\n    field: \"status\",\n    headerName: \"Status\",\n    width: 100,\n  },\n  {\n    field: \"employee_fullname\",\n    headerName: \"Colaborador\",\n    width: 300,\n  },\n\n  {\n    field: \"employee_email\",\n    headerName: \"Email\",\n    width: 200,\n  },\n  {\n    field: \"employee_type_description\",\n    headerName: \"Tipo colaborador\",\n    sortable: true,\n    width: 120,\n  },\n  {\n    field: \"request_type\",\n    headerName: \"Tipo Chamado\",\n    sortable: true,\n    width: 150,\n  },\n  {\n    field: \"updated_at\",\n    headerName: \"atualizado em\",\n    sortable: true,\n    width: 200,\n  },\n];\n\nconst openColumns: GridColDef[] = [\n  {\n    field: \"id\",\n    headerName: \"ID\",\n    width: 100,\n    hide: true,\n  },\n  {\n    field: \"status\",\n    headerName: \"Status\",\n    width: 100,\n  },\n  {\n    field: \"request_number\",\n    headerName: \"Número\",\n    width: 180,\n  },\n  {\n    field: \"employee_fullname\",\n    headerName: \"Colaborador\",\n    width: 300,\n  },\n  {\n    field: \"employee_type_description\",\n    headerName: \"Tipo colaborador\",\n    sortable: true,\n    width: 120,\n  },\n  {\n    field: \"request_type\",\n    headerName: \"Tipo Chamado\",\n    sortable: true,\n    width: 150,\n  },\n  {\n    field: \"updated_at\",\n    headerName: \"atualizado em\",\n    sortable: true,\n    width: 200,\n  },\n];\n\nconst closedColumns: GridColDef[] = [\n  {\n    field: \"id\",\n    headerName: \"ID\",\n    width: 100,\n    hide: true,\n  },\n  {\n    field: \"request_status\",\n    headerName: \"Status\",\n    width: 100,\n  },\n  {\n    field: \"request_number\",\n    headerName: \"Número\",\n    width: 180,\n  },\n  {\n    field: \"employee_fullname\",\n    headerName: \"Colaborador\",\n    width: 300,\n  },\n  {\n    field: \"employee_type_description\",\n    headerName: \"Tipo colaborador\",\n    sortable: true,\n    width: 120,\n  },\n  {\n    field: \"request_type\",\n    headerName: \"Tipo Chamado\",\n    sortable: true,\n    width: 150,\n  },\n  {\n    field: \"updated_at\",\n    headerName: \"atualizado em\",\n    sortable: true,\n    width: 200,\n  },\n];\n\nexport { draftColumns, openColumns, closedColumns };\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { IData } from \"../pages/RequestStepForm/components/Interface\";\nimport { IUserRequestCount } from \"../utils/interfaces/home.interfaces\";\nimport api from \"./api\";\n\nclass RequestService {\n  async getRequestList(): Promise<any> {\n    const response = await api.get(`/requests`);\n    const { data } = response;\n    return data;\n  }\n\n  async getServicesCollection(id?: string): Promise<IData[]> {\n    const data = [\n      {\n        id: \"SAP\",\n        description: \"SAP\",\n      },\n      {\n        id: \"AS400\",\n        description: \"AS400\",\n      },\n      {\n        id: \"Desligamento\",\n        description: \"Desligamento\",\n      },\n      {\n        id: \"Outros\",\n        description: \"Outros\",\n      },\n    ];\n    return data;\n  }\n\n  async getUserRequestsByUserId(\n    userid: string,\n    listtype: string\n  ): Promise<any> {\n    const response = await api.get(`/requests/user/${userid}/${listtype}`);\n    const { data } = response;\n\n    if (data) {\n      console.log(data);\n      const rows = data.map((entry: any, index: any) => {\n        return {\n          ...entry,\n          id: entry.request_id,\n          status: entry.status.status,\n        };\n      });\n      return rows;\n    }\n    return null;\n  }\n\n  async getUserRequestCount(user: string): Promise<IUserRequestCount> {\n    const response = await api.get(`/requests/count/${user}`);\n    const { data } = response;\n    return data;\n  }\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  formatEmployeeData(data: any): any {\n    return {\n      id: data.request_id,\n      request_by: data.requested_by_name,\n      request_status: data.status.status,\n      request_date: data.created_at,\n      request_number: data.request_number,\n      request_observation: data.request_observation,\n      employee_role: {\n        id: data.employee_role_id,\n        description: data.employee_role_description,\n      },\n      employee_plataform: {\n        id: data.employee_plataform_id,\n        description: data.employee_plataform_description,\n      },\n      employee_costcenter: {\n        id: data.employee_costcenter_id,\n        description: data.employee_costcenter_description,\n      },\n      request_category: { id: \"\", description: \"\" },\n      employee_type: {\n        id: data.employee_type,\n        description: data.employee_type_description,\n      },\n      employee_manager: {\n        id: data.employe_manager_id,\n        description: data.employee_manager_name,\n      },\n      employee_company: {\n        id: data.employee_company_id,\n        description: data.employee_company_description,\n      },\n      employee_branch: {\n        id: data.employee_branch_id,\n        description: data.employee_branch_description,\n      },\n      employee: {\n        id: data.employee_id,\n        description: data.employee_fullname,\n        email: data.employee_email,\n      },\n      employee_userid_login: data.employee_login,\n      employee_userid_as400: {\n        id: data.employee_as400_id,\n        description: data.employee_as400_id_description,\n      },\n      request_type: data.request_type,\n    };\n  }\n\n  getCurrentResponsable(manager: string, value: any): string {\n    const status = value.workflow ? value.workflow.status.id : -1;\n\n    if (status !== -1) {\n      console.log(\"\");\n      if (status === 0) return manager;\n      if (status === 1)\n        return value.license.users\n          .map((user: any) => user.fullname)\n          .join(\" / \");\n      if (status === 2)\n        return value.ci.users.map((user: any) => user.fullname).join(\" / \");\n      if (status === 3)\n        return value.cioilseeds.users\n          .map((user: any) => user.fullname)\n          .join(\" / \");\n      if (status === 4)\n        return `${value?.lider?.fullname} / ${value?.lider_backup?.fullname}`;\n      if (status === 5) return \"N.A\";\n      if (status === 6)\n        return value.executors.users.map((user: any) => user.fullname);\n    }\n\n    return \"N.A\";\n  }\n\n  async getRequestById(id: string): Promise<any> {\n    const response = await api.get(`/requests/${id}`);\n    const { data } = response;\n\n    const obj = this.formatEmployeeData(data);\n\n    const sap = data.saporderprofile\n      ? data.saporderprofile.map((value: any) => {\n          return {\n            id: value.id,\n            service_id: value.service_id,\n            service_description: value.service_description,\n            environment: value.environment,\n            user_id: value.user_id,\n            job_position:\n              value.job_position === \"\" ? \"Outros\" : value.job_position,\n            profile_name: value.profile_name,\n            profile_description: value.profile_description,\n            is_profile_temporary: value.is_profile_temporary,\n            profile_expires_at: value.profile_expires_at,\n            profile_valide_at: value.profile_valide_at,\n            has_conflict: value.has_conflict,\n            restricted_access: value.restricted_access,\n            status: value.workflow ? value.workflow.status.status : \"\",\n            responsable: this.getCurrentResponsable(\n              data.employee_manager_name,\n              value\n            ),\n          };\n        })\n      : null;\n\n    const sapuser = data.saporderuser\n      ? data.saporderuser.map((value: any) => {\n          return {\n            id: value.id,\n            service_id: value.service_id,\n            service_description: value.service_description,\n            environment: value.environment,\n            user_id: value.user_id,\n            job_position: \"\",\n            profile_name: \"\",\n            profile_description: \"\",\n            is_profile_temporary: \"\",\n            profile_expires_at: \"\",\n            profile_valide_at: \"\",\n            has_conflict: false,\n            restricted_access: false,\n            status: value.workflow ? value.workflow.status.status : \"\",\n            responsable: this.getCurrentResponsable(\n              data.employee_manager_name,\n              value\n            ),\n          };\n        })\n      : null;\n\n    const as400 = data.as400orderprofile\n      ? data.as400orderprofile.map((value: any) => {\n          return {\n            id: value.id,\n            service_id: value.service_id,\n            service_description: value.service_description,\n            environment: value.environment,\n            is_new_user: value.is_new_user,\n            user_id: value.user_id,\n            system: value.system,\n            routine: value.routine,\n            access_type: value.access_type,\n            restricted_access: value.restricted_acces,\n            limited_access: value.limited_access,\n            company_id: value.company_id,\n            branch_id: value.branch_id,\n            branch_name: value.branch_name,\n            region_id: value.region_id,\n            region_name: value.region_name,\n            access: value.access,\n            access_observation: value.access_observation,\n            job_position: value.job_position,\n            status: value.workflow ? value.workflow.status.status : \"\",\n            responsable: this.getCurrentResponsable(\n              data.employee_manager_name,\n              value\n            ),\n          };\n        })\n      : null;\n\n    const as400user = data.as400orderuser\n      ? data.as400orderuser.map((value: any) => {\n          return {\n            id: value.id,\n            service_id: value.service_id,\n            service_description: value.service_description,\n            environment: value.environment,\n            is_new_user: value.is_new_user,\n            user_id: value.user_id,\n            copy_user_id_status: value.copy_user_id_status,\n            copy_user_id: value.copy_user_id,\n            status: value.workflow ? value.workflow.status.status : \"\",\n            responsable: this.getCurrentResponsable(\n              data.employee_manager_name,\n              value\n            ),\n          };\n        })\n      : null;\n\n    const result = {\n      ...obj,\n      saptable: sap || sapuser ? [...sap, ...sapuser] : null,\n      as400table: [...as400user, ...as400],\n    };\n    return result;\n  }\n\n  async getRequestWorkFlow(request_id: string): Promise<any> {\n    const response = await api.get(`/requests/workflow/${request_id}`);\n    const { data } = response;\n    return data;\n  }\n}\n\nexport default new RequestService();\n","import { DataGrid, GridCellParams, GridColDef } from \"@mui/x-data-grid\";\nimport * as React from \"react\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useAuth } from \"../../hooks/useAuth\";\nimport RequestService from \"../../services/request.service\";\n\ninterface IProps {\n  report: string;\n  columns: GridColDef[];\n}\n\nexport default function UserRequests({ report, columns }: IProps): JSX.Element {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const [rows, setRows] = React.useState<any>();\n  const { accountInfo } = useAuth();\n  const [isCancelled, setIsCancelled] = React.useState<boolean>(false);\n  const history = useHistory();\n\n  const handleCellClick = (params: GridCellParams) => {\n    const id = params.getValue(params.id, \"id\");\n    history.push(`/request/${id}`);\n    return \"\";\n  };\n\n  async function fetchData() {\n    const rows = await RequestService.getUserRequestsByUserId(\n      accountInfo?.user.displayName || \"\",\n      report\n    );\n    if (!isCancelled) {\n      setRows(rows);\n    }\n  }\n\n  useEffect(() => {\n    setIsCancelled(false);\n    fetchData();\n\n    return () => {\n      setIsCancelled(true);\n    };\n  }, []);\n\n  return (\n    <div style={{ height: 650, width: \"95%\" }}>\n      <DataGrid\n        rows={rows || []}\n        columns={columns}\n        pageSize={50}\n        rowsPerPageOptions={[10, 20, 50, 100]}\n        checkboxSelection={false}\n        onCellDoubleClick={handleCellClick}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function UserTodoRequests(): JSX.Element {\n  return <div>to be done</div>;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport AssignmentIndIcon from \"@mui/icons-material/AssignmentInd\";\nimport CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\nimport DraftsIcon from \"@mui/icons-material/Drafts\";\nimport ListAltIcon from \"@mui/icons-material/ListAlt\";\nimport RadioButtonUncheckedIcon from \"@mui/icons-material/RadioButtonUnchecked\";\nimport { Tabs, Tab, Paper, Box, Typography } from \"@mui/material\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport React, { useEffect } from \"react\";\n\nimport UserAprovalRequests from \"../components/Home/UserAprovalRequests\";\nimport {\n  draftColumns,\n  openColumns,\n  closedColumns,\n} from \"../components/Home/UserRequestColumns\";\nimport UserRequests from \"../components/Home/UserRequests\";\nimport UserTodoRequests from \"../components/Home/UserTodoRequests\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport RequestService from \"../services/request.service\";\nimport { IUserRequestCount } from \"../utils/interfaces/home.interfaces\";\n\ninterface ITabPanelProps {\n  // eslint-disable-next-line react/require-default-props\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n});\n\nexport function Home(): JSX.Element {\n  const { accountInfo } = useAuth();\n  const classes = useStyles();\n  const [value, setValue] = React.useState(1);\n  const [isLoading, setIsLoading] = React.useState(true);\n\n  const [userRequestCount, setUserRequestCount] =\n    React.useState<IUserRequestCount>({\n      draft: 0,\n      open: 0,\n      closed: 0,\n      aproving: 0,\n      executing: 0,\n    });\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  async function fetchData() {\n    const user = accountInfo?.user.displayName;\n    const userCount = await RequestService.getUserRequestCount(user as string);\n    setUserRequestCount(userCount);\n  }\n\n  useEffect(() => {\n    fetchData();\n    setIsLoading(false);\n  }, []);\n\n  function TabPanel(props: ITabPanelProps) {\n    const { children, value, index, ...other } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`scrollable-prevent-tabpanel-${index}`}\n        aria-labelledby={`scrollable-prevent-tab-${index}`}\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...other}\n      >\n        {value === index && (\n          <Box p={3}>\n            <Typography component=\"div\">{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <Paper square className={classes.root}>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        variant=\"fullWidth\"\n        indicatorColor=\"secondary\"\n        textColor=\"secondary\"\n        aria-label=\"icon label tabs example\"\n      >\n        <Tab\n          icon={<DraftsIcon />}\n          label={`Rascunhos(${userRequestCount?.draft})`}\n        />\n        <Tab\n          icon={<RadioButtonUncheckedIcon />}\n          label={`Em Andamento(${userRequestCount?.open})`}\n          disabled={userRequestCount?.open === 0}\n        />\n        <Tab\n          icon={<CheckCircleOutlineIcon />}\n          label={`Encerrados(${userRequestCount?.closed})`}\n        />\n        <Tab\n          icon={<AssignmentIndIcon />}\n          label={`Para Aprovar(${userRequestCount?.aproving}\n        )`}\n        />\n        <Tab\n          icon={<ListAltIcon />}\n          label={`Para Executar(${userRequestCount?.executing})`}\n        />\n      </Tabs>\n\n      {isLoading && \"...loading\"}\n      {!isLoading && (\n        <>\n          <TabPanel value={value} index={0}>\n            <UserRequests columns={draftColumns} report=\"draft\" />\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <UserRequests columns={openColumns} report=\"open\" />\n          </TabPanel>\n          <TabPanel value={value} index={2}>\n            <UserRequests columns={closedColumns} report=\"closed\" />\n          </TabPanel>\n          <TabPanel value={value} index={3}>\n            <UserAprovalRequests />\n          </TabPanel>\n          <TabPanel value={value} index={4}>\n            <UserTodoRequests />\n          </TabPanel>\n        </>\n      )}\n    </Paper>\n  );\n}\n","import Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport * as React from \"react\";\n\nimport { INewStep } from \"./WorkFlowSteps\";\n\ninterface IProps {\n  rows: INewStep;\n}\n\nexport default function WorkflowResponsableTable({\n  rows,\n}: IProps): JSX.Element {\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Grupo</TableCell>\n            <TableCell align=\"right\">Responsáveis</TableCell>\n            <TableCell align=\"right\">Pendentes</TableCell>\n            <TableCell align=\"right\">Analisados</TableCell>\n            <TableCell align=\"right\">Analisado por</TableCell>\n            <TableCell align=\"right\">Analisado em</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.responsables.map((row, index) => (\n            <TableRow\n              // eslint-disable-next-line react/no-array-index-key\n              key={index}\n              sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n            >\n              <TableCell align=\"right\">{row.group}</TableCell>\n              <TableCell align=\"right\">{row.users.join(\" / \")}</TableCell>\n              <TableCell align=\"right\">{row.doingCount}</TableCell>\n              <TableCell align=\"right\">{row.doneCount}</TableCell>\n              <TableCell align=\"right\">{row.doneBy}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable react/jsx-props-no-spreading */\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Typography from \"@mui/material/Typography\";\nimport * as React from \"react\";\n\nimport RequestService from \"../../services/request.service\";\nimport WorkflowResponsableTable from \"./WorkflowResponsableTable\";\n\ninterface IProps {\n  request_id: string;\n}\n\nexport interface INewStep {\n  id: number;\n  status: string;\n  statusObservation: string;\n  text: \"\";\n  isCurrent: boolean;\n  isRequired: boolean;\n  isConcluded: boolean;\n  statusDate: Date;\n  concludedOn: Date;\n  responsables: {\n    isDone: boolean;\n    doneBy: string;\n    group: string;\n    users: string[];\n    doneCount: number;\n    doingCount: number;\n  }[];\n}\n\nexport default function WorkFlowSteps({ request_id }: IProps): JSX.Element {\n  const [isCancelled, setIsCancelled] = React.useState<boolean>(false);\n  const [initialData, setInitialData] = React.useState<INewStep[]>([]);\n  const steps: INewStep[] = [];\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set<number>());\n\n  async function fetchData() {\n    const data = await RequestService.getRequestWorkFlow(request_id);\n\n    if (!isCancelled) {\n      data.forEach((element: any) => {\n        if (element.isRequired) {\n          steps.push(element);\n        }\n      });\n      setInitialData(steps);\n      console.log(data);\n\n      const pos = steps.findIndex((value: any) => value.isInitial);\n      if (pos === -1) setActiveStep(0);\n      else setActiveStep(pos);\n      console.log(\"posição corrente\", pos);\n      console.log(\"definiu initial data\", data);\n    }\n  }\n\n  React.useEffect(() => {\n    setIsCancelled(false);\n    fetchData();\n    console.log(\"terminou de carregar\");\n\n    return () => {\n      console.log(\"entrou no cancelado\");\n      setIsCancelled(true);\n    };\n  }, []);\n\n  //  const isStepOptional = (step: number) => {\n  //  return true;\n  // };\n\n  const isStepSkipped = (step: number) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep((prevActiveStep) =>\n      prevActiveStep + 1 === initialData.length ? 0 : prevActiveStep + 1\n    );\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <Box sx={{ width: \"100%\" }}>\n      {initialData && (\n        <Stepper\n          activeStep={activeStep || 0}\n          sx={{\n            marginTop: \"24px\",\n            marginBottom: \"24px\",\n            alignContent: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          {initialData.map((value, index) => {\n            const stepProps: { completed?: boolean } = {};\n            const labelProps: {\n              optional?: React.ReactNode;\n            } = {};\n\n            if (value.statusObservation) {\n              labelProps.optional = (\n                <Typography variant=\"caption\">\n                  {value.statusObservation}\n                </Typography>\n              );\n            }\n\n            if (isStepSkipped(index)) {\n              stepProps.completed = value.isConcluded;\n            }\n            stepProps.completed = value.isConcluded;\n\n            return (\n              <Step key={value.status} {...stepProps} color=\"success\">\n                <StepLabel {...labelProps}>{value.status}</StepLabel>\n              </Step>\n            );\n          })}\n        </Stepper>\n      )}\n      {activeStep === initialData.length ? (\n        <>\n          <Typography sx={{ mt: 2, mb: 1 }}>\n            All steps completed - you&apos;re finished\n          </Typography>\n          <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n            <Box sx={{ flex: \"1 1 auto\" }} />\n            <Button onClick={handleReset}>Reset</Button>\n          </Box>\n        </>\n      ) : (\n        <>\n          <Typography sx={{ mt: 2, mb: 1 }}>\n            {initialData[activeStep].text}\n            <WorkflowResponsableTable rows={initialData[activeStep]} />\n          </Typography>\n          <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n            <Button\n              color=\"inherit\"\n              disabled={activeStep === 0}\n              onClick={handleBack}\n              sx={{ mr: 1 }}\n            >\n              Back\n            </Button>\n            <Box sx={{ flex: \"1 1 auto\" }} />\n            <Button onClick={handleNext}>\n              {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n            </Button>\n          </Box>\n        </>\n      )}\n    </Box>\n  );\n}\n","import { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport * as React from \"react\";\n\ninterface IProps {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  rows: any;\n}\n\nconst columns: GridColDef[] = [\n  { field: \"id\", headerName: \"ID\", width: 30, hide: true },\n  {\n    field: \"status\",\n    headerName: \"Status\",\n    width: 90,\n  },\n  {\n    field: \"environment\",\n    headerName: \"Ambiente\",\n    width: 90,\n  },\n  { field: \"service_id\", headerName: \"Cód.\", width: 60 },\n  { field: \"service_description\", headerName: \"Serviço\", width: 180 },\n  { field: \"user_id\", headerName: \"User ID\", width: 130 },\n\n  {\n    field: \"job_position\",\n    headerName: \"Tipo Perfil\",\n    width: 120,\n  },\n\n  { field: \"system\", headerName: \"Sis.\", width: 80 },\n  { field: \"routine\", headerName: \"rotina.\", width: 80 },\n  { field: \"access_type\", headerName: \"Seg\", width: 60 },\n  { field: \"company_id\", headerName: \"Empresa\", width: 100 },\n  { field: \"branch_id\", headerName: \"Filial.\", width: 120 },\n  { field: \"region_id\", headerName: \"Região.\", width: 120 },\n  { field: \"access\", headerName: \"Acesso\", width: 120 },\n  {\n    field: \"responsable\",\n    headerName: \"Responsável(eis)\",\n    sortable: true,\n    width: 200,\n  },\n];\n\nexport default function AS400Table({ rows }: IProps): JSX.Element {\n  return (\n    <div style={{ height: 400, width: \"100%\" }}>\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        pageSize={30}\n        rowsPerPageOptions={[5, 10, 30]}\n        checkboxSelection\n      />\n    </div>\n  );\n}\n","/* eslint-disable react/require-default-props */\n/* eslint-disable react/jsx-props-no-spreading */\nimport TextField from \"@mui/material/TextField\";\nimport React from \"react\";\n\ninterface IProps {\n  name: string;\n  label: string;\n  fullWidth: boolean;\n  value: string;\n  multiline?: boolean;\n  maxRows?: number;\n}\n\nexport default function InputReadText({\n  name,\n  label,\n  fullWidth,\n  value,\n  multiline,\n  maxRows,\n}: IProps): JSX.Element {\n  return (\n    <TextField\n      id={name}\n      label={label}\n      defaultValue={value}\n      fullWidth={fullWidth}\n      InputProps={{ readOnly: true }}\n      multiline={multiline}\n      maxRows={maxRows}\n    />\n  );\n}\n","import Grid from \"@mui/material/Grid\";\nimport React from \"react\";\n\nimport InputReadText from \"../../../components/controls/InputReadText\";\nimport { IEmployee } from \"../../RequestStepForm/components/Interface\";\n\ninterface IRequestFormProps {\n  values: IEmployee;\n}\n\nexport default function EmployeeForm({\n  values,\n}: IRequestFormProps): JSX.Element {\n  const {\n    request_by,\n    employee,\n    request_date,\n    employee_type,\n    employee_role,\n    employee_costcenter,\n    employee_manager,\n    request_number,\n    request_status,\n    employee_plataform,\n    employee_company,\n    employee_branch,\n    request_observation,\n  } = values;\n\n  return (\n    <>\n      <Grid container justifyContent=\"space-between\" spacing={2}>\n        <Grid item xs={6}>\n          <Grid container spacing={1}>\n            <Grid item xs={8}>\n              <InputReadText\n                name=\"request_by\"\n                label=\"Solicitante\"\n                fullWidth\n                value={request_by || \"\"}\n              />\n              <InputReadText\n                name=\"employee\"\n                label=\"Colaborador\"\n                fullWidth\n                value={employee.description || \"\"}\n              />\n            </Grid>\n            <Grid item xs={4}>\n              <InputReadText\n                name=\"request.request_date\"\n                label=\"Data da solicitação\"\n                fullWidth={false}\n                value={request_date ? request_date.toLocaleString() : \"\"}\n              />\n\n              <InputReadText\n                name=\"request.employee_type\"\n                label=\"Tipo\"\n                value={employee_type?.description || \"\"}\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item xs={6}>\n              <InputReadText\n                name=\"request.employee_role\"\n                label=\"Cargo\"\n                value={\n                  employee_role\n                    ? `${employee_role.id}-${employee_role.description}`\n                    : \"\"\n                }\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <InputReadText\n                name=\"request.employee_costcenter\"\n                label=\"Centro de Custo\"\n                value={\n                  employee_costcenter\n                    ? `${employee_costcenter.id}-${employee_costcenter.description}`\n                    : \"\"\n                }\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item xs={6}>\n              <InputReadText\n                name=\"request.employee_manager\"\n                label=\"Gestor\"\n                value={employee_manager?.description || \"\"}\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item xs={6}>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n              <InputReadText\n                name=\"request.request_number\"\n                label=\"Número\"\n                fullWidth={false}\n                value={request_number || \"\"}\n              />\n\n              <InputReadText\n                name=\"request.request_status\"\n                label=\"Status\"\n                fullWidth={false}\n                value={request_status || \"\"}\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item xs={6}>\n              <InputReadText\n                name=\"request.employee\"\n                label=\"Email\"\n                fullWidth\n                value={employee.email || \"\"}\n              />\n            </Grid>\n            <Grid item xs={4}>\n              <InputReadText\n                name=\"request.employee_plataform\"\n                label=\"Plataforma\"\n                fullWidth\n                value={employee_plataform?.description || \"\"}\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item xs={4}>\n              <InputReadText\n                name=\"request.employee_company\"\n                label=\"Empresa\"\n                fullWidth\n                value={\n                  employee_company\n                    ? `${employee_company.id}-${employee_company.description}`\n                    : \"\"\n                }\n              />\n            </Grid>\n            <Grid item xs={7}>\n              <InputReadText\n                name=\"request.employee_branch\"\n                label=\"Filial\"\n                fullWidth\n                value={\n                  employee_branch\n                    ? `${employee_branch.id}-${employee_branch.description}`\n                    : \"\"\n                }\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item xs={11}>\n              <InputReadText\n                name=\"request.request_observation\"\n                label=\"Observação\"\n                multiline\n                maxRows={4}\n                fullWidth\n                value={request_observation}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n/* <pre>{JSON.stringify({ values }, null, 4)}</pre> */\n","import { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport * as React from \"react\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype NewType = any;\n\ninterface IProps {\n  rows: NewType;\n}\n\nconst columns: GridColDef[] = [\n  { field: \"id\", headerName: \"ID\", width: 30, hide: true },\n  {\n    field: \"status\",\n    headerName: \"Status\",\n    width: 90,\n  },\n  {\n    field: \"environment\",\n    headerName: \"Ambiente\",\n    width: 90,\n  },\n  { field: \"service_id\", headerName: \"Cód.\", width: 60 },\n  { field: \"service_description\", headerName: \"Serviço\", width: 180 },\n  { field: \"user_id\", headerName: \"User ID\", width: 130 },\n\n  {\n    field: \"job_position\",\n    headerName: \"Tipo Perfil\",\n    width: 120,\n  },\n  {\n    field: \"profile_name\",\n    headerName: \"Perfil\",\n    sortable: true,\n    width: 400,\n  },\n  {\n    field: \"profile_description\",\n    headerName: \"Descrição\",\n    sortable: true,\n    width: 400,\n  },\n  {\n    field: \"responsable\",\n    headerName: \"Responsável(eis)\",\n    sortable: true,\n    width: 200,\n  },\n];\n\nexport default function SAPTable({ rows }: IProps): JSX.Element {\n  console.log(rows);\n  return (\n    <div style={{ height: 400, width: \"100%\" }}>\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        pageSize={30}\n        rowsPerPageOptions={[5, 10, 30]}\n        checkboxSelection={false}\n      />\n    </div>\n  );\n}\n","import Box from \"@mui/material/Box\";\nimport * as React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport WorkFlowSteps from \"../../components/controls/WorkFlowSteps\";\nimport RequestService from \"../../services/request.service\";\nimport AS400Table from \"./components/AS400Table\";\nimport EmployeeForm from \"./components/EmployeeForm\";\nimport SAPTable from \"./components/SAPTable\";\n\ntype RequestParams = {\n  id: string;\n};\n\nexport function Request(): JSX.Element {\n  const params = useParams<RequestParams>();\n  const [isCancelled, setIsCancelled] = React.useState<boolean>(false);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const [initialData, setInitialData] = React.useState<any>();\n  async function fetchData() {\n    const data = await RequestService.getRequestById(params.id);\n    console.log(\"no form\", data);\n    if (!isCancelled) {\n      setInitialData(data);\n      console.log(\"definiu initial data\", data);\n    }\n  }\n\n  React.useEffect(() => {\n    setIsCancelled(false);\n    fetchData();\n    console.log(\"terminou de carregar\");\n\n    return () => {\n      console.log(\"entrou no cancelado\");\n      setIsCancelled(true);\n    };\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        marginTop: \"4px\",\n        \"& .MuiTextField-root\": { m: 1, minWidth: \"30px\" },\n        \"& .MuiInputBase-root\": { m: 1, minWidth: \"30px\" },\n        \"& .MuiDataGrid-root\": { m: 1, minWidth: \"30px\" },\n      }}\n    >\n      {initialData && (\n        <>\n          <EmployeeForm values={initialData} />\n          {initialData.saptable.length !== 0 && (\n            <SAPTable rows={initialData.saptable} />\n          )}\n\n          {initialData.as400table.length !== 0 && (\n            <AS400Table rows={initialData.as400table} />\n          )}\n\n          <WorkFlowSteps request_id={params.id} />\n        </>\n      )}\n    </Box>\n  );\n}\n","import Checkbox from \"@mui/material/Checkbox\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport React from \"react\";\n\nimport { RequestType } from \"../../hooks/useRequestTable\";\nimport { IEnhancedTableProps } from \"./useTableProps\";\n\nexport function EnhancedTableHead(props: IEnhancedTableProps): JSX.Element {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n    headCells,\n  } = props;\n  const createSortHandler =\n    (property: keyof RequestType) => (event: React.MouseEvent<unknown>) => {\n      onRequestSort(event, property);\n    };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","import DeleteIcon from \"@mui/icons-material/Delete\";\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { lighten, Theme } from \"@mui/material/styles\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Typography from \"@mui/material/Typography\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport clsx from \"clsx\";\nimport React from \"react\";\n\nconst useToolbarStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(1),\n    },\n    highlight:\n      theme.palette.mode === \"light\"\n        ? {\n            color: theme.palette.secondary.main,\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n          }\n        : {\n            color: theme.palette.text.primary,\n            backgroundColor: theme.palette.secondary.dark,\n          },\n    title: {\n      flex: \"1 1 100%\",\n    },\n  })\n);\n\ninterface IEnhancedTableToolbarProps {\n  numSelected: number;\n  title: string;\n}\n\nexport const EnhancedTableToolbar = (\n  props: IEnhancedTableToolbarProps\n): JSX.Element => {\n  const classes = useToolbarStyles();\n  const { numSelected, title } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          {title}\n        </Typography>\n      )}\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\" size=\"large\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\" size=\"large\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n","import { lighten, Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nexport const useToolbarStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n    },\n    highlight:\n      theme.palette.mode === \"light\"\n        ? {\n            color: theme.palette.secondary.main,\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n          }\n        : {\n            color: theme.palette.text.primary,\n            backgroundColor: theme.palette.secondary.dark,\n          },\n    title: {\n      flex: \"1 1 100%\",\n    },\n  })\n);\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    paper: {\n      width: \"100%\",\n      marginBottom: theme.spacing(2),\n    },\n    table: {\n      minWidth: 750,\n    },\n    visuallyHidden: {\n      border: 0,\n      clip: \"rect(0 0 0 0)\",\n      height: 1,\n      margin: -1,\n      overflow: \"hidden\",\n      padding: 0,\n      position: \"absolute\",\n      top: 20,\n      width: 1,\n    },\n  })\n);\n","import Checkbox from \"@mui/material/Checkbox\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Paper from \"@mui/material/Paper\";\nimport Switch from \"@mui/material/Switch\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { RequestType } from \"../../hooks/useRequestTable\";\nimport { EnhancedTableHead } from \"./TableHead\";\nimport { EnhancedTableToolbar } from \"./TableToolBar\";\nimport { Order, TableProps } from \"./useTableProps\";\nimport { useStyles } from \"./useTableStyles\";\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key\n): (\n  a: { [key in Key]: number | string },\n  b: { [key in Key]: number | string }\n) => number {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport default function EnhancedTable({\n  rows,\n  headerData,\n  title,\n  tableType,\n}: TableProps): JSX.Element {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState<Order>(\"asc\");\n  const [orderBy, setOrderBy] =\n    React.useState<keyof RequestType>(\"request_number\");\n  const [selected, setSelected] = React.useState<string[]>([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(15);\n  const history = useHistory();\n\n  const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected: string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.request_id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleOpenRequestClick = (\n    event: React.MouseEvent<unknown>,\n    requestId: string\n  ) => {\n    history.push(`/request/${requestId}`);\n  };\n\n  const tableRowByNumber = (\n    row: RequestType,\n    isItemSelected: boolean,\n    labelId: string\n  ) => {\n    return (\n      <TableRow\n        hover\n        onClick={(event) => handleOpenRequestClick(event, row.request_id)}\n        role=\"checkbox\"\n        aria-checked={isItemSelected}\n        tabIndex={-1}\n        key={row.request_id}\n        selected={isItemSelected}\n      >\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            checked={isItemSelected}\n            inputProps={{ \"aria-labelledby\": labelId }}\n            onClick={(event) => {\n              event.stopPropagation();\n              handleClick(event, row.request_id);\n            }}\n          />\n        </TableCell>\n        <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n          {row.request_number}\n        </TableCell>\n        <TableCell>{row.request_status}</TableCell>\n        <TableCell align=\"right\">{row.employee_fullname}</TableCell>\n        <TableCell>{row.request_type}</TableCell>\n      </TableRow>\n    );\n  };\n\n  const tableRowByStatus = (\n    row: RequestType,\n    isItemSelected: boolean,\n    labelId: string\n  ) => {\n    return (\n      <TableRow\n        hover\n        role=\"checkbox\"\n        aria-checked={isItemSelected}\n        tabIndex={-1}\n        key={row.request_id}\n        selected={isItemSelected}\n        onClick={(event) => handleOpenRequestClick(event, row.request_id)}\n      >\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            checked={isItemSelected}\n            inputProps={{ \"aria-labelledby\": labelId }}\n            onClick={(event) => {\n              event.stopPropagation();\n              handleClick(event, row.request_id);\n            }}\n          />\n        </TableCell>\n        <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n          {row.request_status}\n        </TableCell>\n        <TableCell>{row.request_number}</TableCell>\n        <TableCell align=\"right\">{row.employee_fullname}</TableCell>\n        <TableCell>{row.request_type}</TableCell>\n      </TableRow>\n    );\n  };\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: keyof RequestType\n  ) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} title={title} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n              headCells={headerData}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.request_id);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                  const line =\n                    tableType === \"status\"\n                      ? tableRowByStatus(row, isItemSelected, labelId)\n                      : tableRowByNumber(row, isItemSelected, labelId);\n                  return line;\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport EnhancedTable from \"../components/Table\";\nimport { useRequestTable, RequestType } from \"../hooks/useRequestTable\";\nimport RequestService from \"../services/request.service\";\n\ntype RequestsParams = {\n  orderby: string;\n};\n\nexport function Requests(): JSX.Element {\n  const params = useParams<RequestsParams>();\n  const [requests, setRequests] = useState<RequestType[]>([]);\n  const headCells = useRequestTable(params.orderby);\n\n  async function fetchData() {\n    const data = await RequestService.getRequestList();\n    setRequests(data);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <EnhancedTable\n        rows={requests}\n        headerData={headCells.headCells}\n        title={`Listagem de requests - ${params.orderby}`}\n        tableType={params.orderby}\n      />\n    </div>\n  );\n}\n","export interface IHeadCell {\n  disablePadding: boolean;\n  id: keyof RequestType;\n  label: string;\n  numeric: boolean;\n}\nexport type RequestType = {\n  request_id: string;\n  requested_by_id: string;\n  requested_by_name: string;\n  requested_by_email: string;\n  request_number: string;\n  request_status: string;\n  request_type: string;\n  request_copy_list: string;\n  request_observation: string;\n  employee_fullname: string;\n  employee_email: string;\n  employee_type: string;\n  employee_type_description: string;\n  employee_profile_edition_rule: string;\n  employee_role_id: string;\n  employee_role_description: string;\n  employee_plataform_id: string;\n  employee_plataform_description: string;\n  employee_costcenter_id: string;\n  employee_costcenter_description: string;\n  employee_company_id: string;\n  employee_company_description: string;\n  employee_branch_id: string;\n  employee_branch_description: string;\n  employe_manager_id: string;\n  employee_manager_name: string;\n  employee_login: string;\n  employee_sap_id: string;\n  employee_userid_sap_status: string;\n  employee_userid_sap_expiration_date: string;\n  employee_as400_id: string;\n  employee_userid_as400_description: string;\n};\n\nfunction setStatusTableHeader() {\n  const header: IHeadCell[] = [\n    {\n      id: \"request_status\",\n      numeric: false,\n      disablePadding: true,\n      label: \"Status\",\n    },\n    {\n      id: \"request_number\",\n      numeric: false,\n      disablePadding: false,\n      label: \"Num\",\n    },\n    {\n      id: \"employee_fullname\",\n      numeric: false,\n      disablePadding: false,\n      label: \"Colaborador\",\n    },\n    {\n      id: \"request_type\",\n      numeric: false,\n      disablePadding: false,\n      label: \"Tipo\",\n    },\n  ];\n  return header;\n}\n\nfunction setNumberTableHeader() {\n  const header: IHeadCell[] = [\n    {\n      id: \"request_number\",\n      numeric: false,\n      disablePadding: true,\n      label: \"Num\",\n    },\n    {\n      id: \"request_status\",\n      numeric: false,\n      disablePadding: false,\n      label: \"Status\",\n    },\n    {\n      id: \"employee_fullname\",\n      numeric: false,\n      disablePadding: false,\n      label: \"Colaborador\",\n    },\n    {\n      id: \"request_type\",\n      numeric: false,\n      disablePadding: false,\n      label: \"Tipo\",\n    },\n  ];\n  return header;\n}\n\nexport function useRequestTable(headerType: string | \"status\"): {\n  headCells: IHeadCell[];\n} {\n  let headCells: IHeadCell[] = [];\n  headCells =\n    headerType === \"status\" ? setStatusTableHeader() : setNumberTableHeader();\n\n  return { headCells };\n}\n","export default __webpack_public_path__ + \"static/media/LDC_logo.e1f3b1fa.png\";","/* eslint-disable react/jsx-no-bind */\nimport { Paper, Typography, Button } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport React from \"react\";\nimport { Redirect, useHistory } from \"react-router-dom\";\n\nimport logo from \"../assets/LDC_logo.png\";\nimport { useAuth } from \"../hooks/useAuth\";\n\nexport default function SignIn(): JSX.Element {\n  const { signInWithAD, accountInfo } = useAuth();\n  const history = useHistory();\n\n  async function mySignIn() {\n    await signInWithAD();\n\n    // history.replace(\"/home\");\n  }\n\n  const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n      root: {\n        display: \"flex\",\n      },\n      mainContent: {\n        display: \"flex\",\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      },\n      thisContent: {\n        display: \"flex\",\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        flexDirection: \"column\",\n        alignItems: \"left\",\n        maxWidth: 500,\n      },\n      logo: {\n        width: 200,\n        padding: theme.spacing(1),\n      },\n      button: {\n        width: 80,\n        padding: 0,\n        alignItems: \"center\",\n        marginLeft: 50,\n      },\n    })\n  );\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      {accountInfo?.isAuthenticated ? <Redirect to=\"/home\" /> : \"\"}\n      <main className={classes.mainContent}>\n        <Paper>\n          <div className={classes.root}>\n            <img src={logo} alt=\"LDC Brazil\" className={classes.logo} />\n            <div className={classes.thisContent}>\n              <Typography>\n                Por favor, clique no botão para fazer o login utilizando seu\n                email da LDC.\n              </Typography>\n              <div>\n                <Button variant=\"contained\" color=\"primary\" onClick={mySignIn}>\n                  Entrar\n                </Button>\n              </div>\n            </div>\n          </div>\n          <p />\n        </Paper>\n      </main>\n    </div>\n  );\n}\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable react/jsx-props-no-spreading */\nimport NavigateBeforeIcon from \"@mui/icons-material/NavigateBefore\";\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport { Button, CircularProgress, Grid } from \"@mui/material\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Stepper from \"@mui/material/Stepper\";\nimport { Form, Formik, FormikConfig, FormikValues } from \"formik\";\nimport * as React from \"react\";\n\nexport interface IFormikStepProps\n  extends Pick<FormikConfig<FormikValues>, \"children\" | \"validationSchema\"> {\n  label: string;\n}\n\nexport function FormikStep({ children }: IFormikStepProps): JSX.Element {\n  return <>{children} </>;\n}\n\nexport function FormikStepper({\n  children,\n  ...props\n}: FormikConfig<FormikValues>): JSX.Element {\n  const childrenArray = React.Children.toArray(\n    children\n  ) as React.ReactElement<IFormikStepProps>[];\n\n  const [step, setStep] = React.useState(0);\n  const [completed, setCompleted] = React.useState(false);\n  const currentChild = childrenArray[\n    step\n  ] as React.ReactElement<IFormikStepProps>;\n\n  function isLastStep() {\n    return step === childrenArray.length - 1;\n  }\n\n  return (\n    <Formik\n      {...props}\n      validationSchema={currentChild.props.validationSchema}\n      onSubmit={async (values, helpers) => {\n        if (step === childrenArray.length - 1) {\n          await props.onSubmit(values, helpers);\n          setCompleted(true);\n        } else {\n          setStep((s) => s + 1);\n        }\n      }}\n    >\n      {({ isSubmitting, status }) => (\n        <Form autoComplete=\"off\">\n          <Stepper\n            alternativeLabel\n            activeStep={step}\n            sx={{\n              marginTop: \"24px\",\n              marginBottom: \"24px\",\n              alignContent: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            {childrenArray.map((child, index) => (\n              <Step\n                key={child.props.label}\n                completed={step > index || completed}\n              >\n                <StepLabel>{child.props.label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          {currentChild}\n          <Grid\n            container\n            spacing={2}\n            sx={{\n              marginTop: \"8px\",\n              alignContent: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            {!status && step > 0 ? (\n              <Grid item>\n                <Button\n                  disabled={isSubmitting}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  onClick={() => setStep((s) => s - 1)}\n                  startIcon={<NavigateBeforeIcon />}\n                >\n                  Voltar\n                </Button>\n              </Grid>\n            ) : null}\n            {!status && (\n              <Grid item>\n                <Button\n                  startIcon={\n                    isSubmitting ? <CircularProgress size=\"1rem\" /> : null\n                  }\n                  disabled={isSubmitting}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  size=\"large\"\n                  endIcon={\n                    isLastStep() && !isSubmitting ? (\n                      <SendIcon />\n                    ) : (\n                      <NavigateNextIcon />\n                    )\n                  }\n                >\n                  {isSubmitting\n                    ? \"Submitting\"\n                    : isLastStep()\n                    ? \"Enviar\"\n                    : \"Próximo\"}\n                </Button>\n              </Grid>\n            )}\n          </Grid>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\n/*    <pre>{JSON.stringify({ values }, null, 4)}</pre> */\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable react/require-default-props */\n/* eslint-disable react/jsx-props-no-spreading */\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport TextField from \"@mui/material/TextField\";\nimport { useField, useFormikContext } from \"formik\";\nimport * as React from \"react\";\n\nimport { IAS400RoutineData } from \"../../pages/RequestStepForm/components/Interface\";\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\ninterface IError {\n  error?: boolean;\n  helperText?: string;\n}\n\ninterface IProps {\n  name: string;\n  label: string;\n  labelWithId: boolean;\n  helperText: string;\n  getOptions: (param: string) => Promise<IAS400RoutineData[]>;\n  parentValue?: string | undefined;\n}\n\nexport default function CheckAutoComplete(props: IProps): JSX.Element {\n  const { name, labelWithId, getOptions, parentValue } = props;\n\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState<readonly IAS400RoutineData[]>(\n    []\n  );\n\n  const [field, mata] = useField(name);\n  const { setFieldValue } = useFormikContext();\n  const [inputValue, setInputValue] = React.useState(\"\");\n\n  const configTextField: IError = {};\n\n  if (mata && mata.touched && mata.error) {\n    configTextField.error = true;\n    configTextField.helperText = mata.error;\n  }\n\n  const loading = open && options.length === 0;\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n      if (active) {\n        if (parentValue === \"\") {\n          setOptions([]);\n          setOpen(false);\n        } else if (getOptions) {\n          const data = await getOptions(parentValue || \"\");\n          setOptions([...data]);\n        }\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  return (\n    <Autocomplete\n      fullWidth\n      multiple\n      id={name}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      {...field}\n      onClose={() => {\n        setOpen(false);\n      }}\n      inputValue={inputValue}\n      onInputChange={(event: any, newInputValue) => {\n        setInputValue(newInputValue);\n      }}\n      onChange={(event: any, values: IAS400RoutineData[]) => {\n        setFieldValue(name, [...values]);\n      }}\n      options={options}\n      isOptionEqualToValue={(option, value) => {\n        if (labelWithId) {\n          return (\n            option.id === value.id ||\n            option.description.toUpperCase() === value.description.toUpperCase()\n          );\n        }\n        return (\n          option.description.toUpperCase() === value.description.toUpperCase()\n        );\n      }}\n      disableCloseOnSelect\n      getOptionLabel={(option) => {\n        if (option.description === \"\") return \"\";\n\n        return labelWithId\n          ? `${option.id}-${option.description}`\n          : option.description;\n      }}\n      renderOption={(props, option, { selected }) => (\n        <li {...props}>\n          <Checkbox\n            icon={icon}\n            checkedIcon={checkedIcon}\n            style={{ marginRight: 8 }}\n            checked={selected}\n          />\n          {labelWithId\n            ? `${option.id}-${option.description}`\n            : option.description}\n        </li>\n      )}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Rotinas\"\n          placeholder=\"Rotinas\"\n          {...configTextField}\n        />\n      )}\n    />\n  );\n}\n","import { IData } from \"../pages/RequestStepForm/components/Interface\";\nimport api from \"./api\";\n\nexport const enum EUserTypes {\n  New = \"S\",\n  Existent = \"N\",\n  Blocked = \"D\",\n}\nexport const enum EServiceIds {\n  AddProfile = \"24\",\n  ExcludeProfile = \"25\",\n  CreateUser = \"26\",\n  BlockUser = \"27\",\n  UnBlockUser = \"194\",\n}\n\nclass SAPService {\n  async getSAPEnvironmentCollection(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    id?: string\n  ): Promise<IData[]> {\n    const data = [\n      {\n        id: \"ECC\",\n        description: \"ECC-Produção\",\n      },\n      {\n        id: \"BW\",\n        description: \"BW-Produção\",\n      },\n      {\n        id: \"BRT\",\n        description: \"BRT-Teste\",\n      },\n      {\n        id: \"GRC\",\n        description: \"GRC-Produção NFP\",\n      },\n      {\n        id: \"SIGGA\",\n        description: \"SIGGA-Mobile Manutenção\",\n      },\n    ];\n    return data;\n  }\n\n  async getSAPUserTypeCollection(id?: string): Promise<IData[]> {\n    console.log(\"...pegando user types\");\n    if (id === EServiceIds.AddProfile) {\n      return [\n        {\n          id: EUserTypes.New,\n          description: \"Novo\",\n        },\n        {\n          id: EUserTypes.Existent,\n          description: \"Existente\",\n        },\n        {\n          id: EUserTypes.Blocked,\n          description: \"Desbloqueio\",\n        },\n      ];\n    }\n    if (id === EServiceIds.UnBlockUser) {\n      return [\n        {\n          id: EUserTypes.Blocked,\n          description: \"Desbloqueio\",\n        },\n      ];\n    }\n\n    return [\n      {\n        id: EUserTypes.Existent,\n        description: \"Existente\",\n      },\n    ];\n  }\n\n  async getSAPServiceTypeCollection(id?: string): Promise<IData[]> {\n    console.log(`Getting service yptes ${id}`);\n    // Defining the service types based on the user_type\n    if (!id)\n      return [\n        {\n          id: EServiceIds.AddProfile,\n          description: \"Liberação de Perfil\",\n        },\n        {\n          id: EServiceIds.ExcludeProfile,\n          description: \"Exclusão de Perfil\",\n        },\n        {\n          id: EServiceIds.BlockUser,\n          description: \"Bloqueio de Usuário\",\n        },\n        {\n          id: EServiceIds.UnBlockUser,\n          description: \"Desbloqueio de Usuário\",\n        },\n      ];\n\n    if (id === \"N\")\n      return [\n        {\n          id: EServiceIds.AddProfile,\n          description: \"Liberação de Perfil\",\n        },\n        {\n          id: EServiceIds.ExcludeProfile,\n          description: \"Exclusão de Perfil\",\n        },\n        {\n          id: EServiceIds.BlockUser,\n          description: \"Bloqueio de Usuário\",\n        },\n      ];\n\n    if (id === \"D\")\n      return [\n        {\n          id: EServiceIds.AddProfile,\n          description: \"Liberação de Perfil\",\n        },\n        {\n          id: EServiceIds.ExcludeProfile,\n          description: \"Exclusão de Perfil\",\n        },\n        {\n          id: EServiceIds.UnBlockUser,\n          description: \"Desbloqueio de Usuário\",\n        },\n      ];\n\n    return [\n      {\n        id: EServiceIds.AddProfile,\n        description: \"Liberação de Perfil\",\n      },\n      {\n        id: EServiceIds.ExcludeProfile,\n        description: \"Exclusão de Perfil\",\n      },\n    ];\n  }\n\n  async getSAPProfileTypeCollection(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    id?: string\n  ): Promise<IData[]> {\n    const data = [\n      {\n        id: \"1\",\n        description: \"Outros\",\n      },\n      {\n        id: \"2\",\n        description: \"Job Position\",\n      },\n    ];\n    return data;\n  }\n\n  async getSAPUserIdCollection(id = \"ECC\"): Promise<IData[]> {\n    const response = await api.get(`/sap/users/${id}`);\n    const { data } = response;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const mapeddata = data.map((value: any) => {\n      return { id: value.user_user_id, description: value.user_user_name };\n    });\n\n    return mapeddata;\n  }\n\n  async getJobPositionCollection(\n    manager_id: string,\n    cost_center_id: string\n  ): Promise<IData[]> {\n    const response = await api.get(\n      `/sap/jobpositions/${manager_id}/${cost_center_id}`\n    );\n    const { data } = response;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const mapeddata = data.map((value: any) => {\n      return { id: value.id, description: value.job_position };\n    });\n\n    return mapeddata;\n  }\n\n  getSAPTemporyFieldCollection = async (\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    id?: string\n  ): Promise<IData[]> => {\n    const data = [\n      {\n        id: \"S\",\n        description: \"Sim\",\n      },\n      {\n        id: \"N\",\n        description: \"Não\",\n      },\n    ];\n    return data;\n  };\n\n  getSAProfileCollection = async (\n    environment: string,\n    param: string,\n    take: string\n  ): Promise<IData[]> => {\n    console.log(`searching on ${environment}`);\n    const response = await api.get(\n      `/sap/profiles/search/${environment}?param=${param}&take=${take}`\n    );\n    const { data } = response;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const mapeddata = data.map((value: any) => {\n      return { id: value.profile_name, description: value.profile_description };\n    });\n\n    return mapeddata;\n  };\n}\n\nconst sapService = new SAPService();\n\nexport { sapService };\n","/* eslint-disable react/require-default-props */\n/* eslint-disable react/jsx-props-no-spreading */\nimport { InputProps } from \"@material-ui/core\";\nimport TextField from \"@mui/material/TextField\";\nimport { useField } from \"formik\";\nimport React from \"react\";\n\ninterface IProps {\n  name: string;\n  label: string;\n  fullWidth: boolean;\n  inputProps: InputProps;\n  error?: boolean;\n  helperText?: string;\n  labelWithId?: boolean;\n  multiline?: boolean;\n  maxRows?: number;\n}\n\nexport default function InputText({\n  labelWithId,\n  inputProps,\n  name,\n  ...otherProps\n}: IProps): JSX.Element {\n  const [field, mata] = useField(name);\n\n  const configTextField = {\n    ...field,\n    ...otherProps,\n  };\n\n  if (mata && mata.touched && mata.error) {\n    configTextField.error = true;\n    configTextField.helperText = mata.error;\n  }\n  if (field.value) {\n    if (typeof field.value === \"object\") {\n      configTextField.value = labelWithId\n        ? `${field.value.id}-${field.value.description}`\n        : field.value.description;\n    }\n  }\n  return (\n    <TextField\n      id={name}\n      defaultValue={configTextField.value}\n      InputProps={inputProps}\n      {...configTextField}\n    />\n  );\n}\n","import CheckBoxAS400Access from \"./CheckBoxAS400Access\";\nimport CheckBoxAutoComplete from \"./CheckBoxAutoComplete\";\nimport InputAutoComplete from \"./InputAutoComplete\";\nimport InputDatePicker from \"./InputDatePicker\";\nimport InputEmployee from \"./InputEmployee\";\nimport InputSAPProfiles from \"./InputSAPProfiles\";\nimport InputSelect from \"./InputSelect\";\nimport InputText from \"./InputText\";\n\nconst FormikControls = {\n  InputText,\n  InputSelect,\n  InputEmployee,\n  InputSAPProfiles,\n  InputDatePicker,\n  InputAutoComplete,\n  CheckBoxAutoComplete,\n  CheckBoxAS400Access,\n};\n\nexport default FormikControls;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  IAS400Profile,\n  IAS400RoutineData,\n  ISelectData,\n} from \"../pages/RequestStepForm/components/Interface\";\nimport api from \"./api\";\n\nexport const enum EServiceIds {\n  AddProfile = \"06\",\n  ExcludeProfile = \"20\",\n  CreateUser = \"01\",\n  BlockUser = \"13\",\n  CopyUser = \"193\",\n}\n\nexport const enum EUserTypes {\n  New = \"S\",\n  Existent = \"N\",\n}\n\nclass AS400Service {\n  async getAS400ServiceTypeCollection(id?: string): Promise<ISelectData[]> {\n    return [\n      {\n        id: EServiceIds.AddProfile,\n        description: \"Liberação de Acesso\",\n      },\n\n      {\n        id: EServiceIds.ExcludeProfile,\n        description: \"Exclusão de Acesso\",\n      },\n      {\n        id: EServiceIds.CopyUser,\n        description: \"Duplicação de Acesso\",\n      },\n    ];\n  }\n\n  async getAS400JobPositionCollection(id?: string): Promise<ISelectData[]> {\n    const response = await api.get(`/as400/profiles`);\n    const { data } = response;\n    const profiles = data\n      .map((value: any) => {\n        return { id: value.profile, description: value.profile };\n      })\n      .sort((a: any, b: any) => a.id - b.id);\n\n    return profiles;\n  }\n\n  async getAS400JobPosition(id?: string): Promise<IAS400Profile[]> {\n    const response = await api.get(`/as400/profiles/${id}`);\n    const { data } = response;\n\n    return data;\n  }\n\n  async getAS400YesNoCollection(id?: string): Promise<ISelectData[]> {\n    const data = [\n      {\n        id: EUserTypes.New,\n        description: \"Sim\",\n      },\n      {\n        id: EUserTypes.Existent,\n        description: \"Não\",\n      },\n    ];\n    return data;\n  }\n\n  async getAS400UserTypeCollection(id?: string): Promise<ISelectData[]> {\n    const data = [\n      {\n        id: EUserTypes.New,\n        description: \"Sim\",\n      },\n      {\n        id: EUserTypes.Existent,\n        description: \"Não\",\n      },\n    ];\n    return data;\n  }\n\n  async getAS400UsersByNameCollection(name: string): Promise<ISelectData[]> {\n    const response = await api.get(`/as400/users/${name}`);\n    const { data } = response;\n    return data;\n  }\n\n  async getAS400EnvironmentCollection(id?: string): Promise<ISelectData[]> {\n    const data = [\n      {\n        id: \"BRCOIBB1\",\n        description: \"Legado Citros Produção\",\n      },\n      {\n        id: \"BRCOIBB2\",\n        description: \"Legado Citros Desenvolvimento\",\n      },\n      {\n        id: \"BRCOISP1\",\n        description: \"Produção\",\n      },\n      {\n        id: \"BRCOISP2\",\n        description: \"Qualidade\",\n      },\n      {\n        id: \"BRCOISP5\",\n        description: \"Desenvolvimento\",\n      },\n    ];\n    return data;\n  }\n\n  async getAS400SystemCollection(id?: string): Promise<ISelectData[]> {\n    const response = await api.get(`/as400/systems`);\n    const { data } = response;\n    return data;\n  }\n\n  async getAS400RoutineCollection(id?: string): Promise<IAS400RoutineData[]> {\n    const response = await api.get(`/as400/systems/${id}`);\n    const { data } = response;\n\n    const mapeddata = data.routines\n      .map(\n        ({\n          routine_id,\n          description,\n          system_id,\n          access_type,\n          access_observation,\n          limited_access,\n          restricted_access,\n        }: any) => {\n          return {\n            id: routine_id,\n            description,\n            system_id,\n            access_type: access_type.trim(),\n            access_observation,\n            limited_access,\n            restricted_access,\n          };\n        }\n      )\n      .sort((a: any, b: any) => a.id - b.id);\n\n    return mapeddata;\n  }\n\n  async getCompanyOnlyCollection(id?: string): Promise<ISelectData[]> {\n    const response = await api.get(`/as400/companies`);\n    const { data } = response;\n    return data;\n  }\n\n  async getBranchOnlyCollection(id?: string): Promise<ISelectData[]> {\n    if (id) {\n      const response = await api.get(`/as400/companies/${id}`);\n      const { data } = response;\n      const branch = data.branchs\n        .map((value: any) => {\n          return { id: value.id, description: value.branch_name };\n        })\n        .sort((a: any, b: any) => parseInt(a.id, 10) - parseInt(b.id, 10));\n\n      return branch;\n    }\n\n    return [];\n  }\n\n  async getRegionCollection(id?: string): Promise<ISelectData[]> {\n    const response = await api.get(`/as400/regions`);\n    const { data } = response;\n    const regions = data\n      .map((value: any) => {\n        return { id: value.id, description: value.region_name };\n      })\n      .sort((a: any, b: any) => parseInt(a.id, 10) - parseInt(b.id, 10));\n\n    return regions;\n  }\n}\n\nconst as400Service = new AS400Service();\n\nexport { as400Service };\n","/* eslint-disable react/require-default-props */\n/* eslint-disable react/jsx-props-no-spreading */\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport TextField from \"@mui/material/TextField\";\nimport { useField, useFormikContext } from \"formik\";\nimport * as React from \"react\";\n\nimport { ISelectData } from \"../../pages/RequestStepForm/components/Interface\";\nimport InputText from \"./InputText\";\n\ninterface IProps {\n  label: string;\n  name: string;\n  labelWithId: boolean;\n  getOptions?: (id?: string) => Promise<ISelectData[]>;\n  optionsPrimaryKey?: string | undefined;\n  onChangeCleanFieldName?: string | undefined;\n  editMode: boolean;\n  defaultOptions?: ISelectData[];\n}\n\ninterface IError {\n  error?: boolean;\n  helperText?: string;\n}\n\nexport default function InputSelect(props: IProps): JSX.Element {\n  const {\n    label,\n    name,\n    labelWithId,\n    optionsPrimaryKey,\n    onChangeCleanFieldName,\n    editMode,\n    defaultOptions,\n    getOptions,\n  } = props;\n\n  const [field, mata] = useField(name);\n  const { setFieldValue, setTouched } = useFormikContext();\n\n  const getInputValue = (): string => {\n    if (field.value) {\n      return labelWithId\n        ? `${field.value.id}-${field.value.description}`\n        : field.value.id;\n    }\n    return \"\";\n  };\n\n  const [inputValue, setInputValue] = React.useState(getInputValue());\n\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState<readonly ISelectData[]>([]);\n  const loading = open && options.length === 0;\n\n  const configTextField: IError = {};\n\n  if (mata && mata.touched && mata.error) {\n    configTextField.error = true;\n    configTextField.helperText = mata.error;\n  }\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n      if (active) {\n        if (defaultOptions) {\n          setOptions([...defaultOptions]);\n        } else if (getOptions) {\n          const data = await getOptions(optionsPrimaryKey);\n          setOptions([...data]);\n          if (data.length === 1) setFieldValue(name, data[0]);\n        }\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  return (\n    <>\n      {!editMode && (\n        <InputText\n          name={name}\n          label={label}\n          fullWidth\n          labelWithId={labelWithId}\n          inputProps={{\n            readOnly: true,\n          }}\n        />\n      )}\n      {editMode && (\n        <Autocomplete\n          id={name}\n          autoComplete\n          {...field}\n          inputValue={inputValue}\n          open={open}\n          onOpen={() => {\n            setOpen(true);\n          }}\n          onClose={() => {\n            setOpen(false);\n          }}\n          onBlur={() => setTouched({ [name]: true })}\n          isOptionEqualToValue={(option, value) => {\n            return (\n              option.id === value.id ||\n              option.description.toUpperCase() ===\n                value.description.toUpperCase()\n            );\n          }}\n          getOptionLabel={(option) => {\n            if (option.description === \"\") return \"\";\n\n            return labelWithId\n              ? `${option.id}-${option.description}`\n              : option.description;\n          }}\n          options={options}\n          loading={loading}\n          onChange={(event, value) => {\n            setFieldValue(name, value);\n\n            if (onChangeCleanFieldName) {\n              console.log(`cleaning ${onChangeCleanFieldName}`);\n              setFieldValue(onChangeCleanFieldName, {\n                id: \"\",\n                description: \"\",\n              });\n            }\n          }}\n          onInputChange={(event, newInputValue) => {\n            setInputValue(newInputValue);\n          }}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label={label}\n              InputProps={{\n                ...params.InputProps,\n                endAdornment: (\n                  <>\n                    {loading ? (\n                      <CircularProgress color=\"inherit\" size={20} />\n                    ) : null}\n                    {params.InputProps.endAdornment}\n                  </>\n                ),\n              }}\n              {...configTextField}\n            />\n          )}\n        />\n      )}\n    </>\n  );\n}\n","/* eslint-disable react/jsx-props-no-spreading */\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport { useField, useFormikContext } from \"formik\";\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport throttle from \"lodash/throttle\";\nimport * as React from \"react\";\n\nimport { IEmployeeData } from \"../../pages/RequestStepForm/components/Interface\";\n\ninterface IError {\n  error?: boolean;\n  helperText?: string;\n}\n\ninterface IProps {\n  name: string;\n  label: string;\n  labelWithId: boolean;\n  // eslint-disable-next-line react/require-default-props\n  helperText?: string;\n  getOptions: (param: string) => Promise<IEmployeeData[]>;\n  setLabelOption: (option: IEmployeeData) => string;\n  setLabelHintOptions: (option: IEmployeeData) => string;\n}\n\nexport default function InputEmployee(props: IProps): JSX.Element {\n  const {\n    label,\n    name,\n    helperText,\n    getOptions,\n    setLabelOption,\n    setLabelHintOptions,\n  } = props;\n\n  const [field, mata] = useField(name);\n  const { setFieldValue } = useFormikContext();\n  const [inputValue, setInputValue] = React.useState(\n    setLabelOption(field.value)\n  );\n  const [options, setOptions] = React.useState<readonly IEmployeeData[]>([]);\n\n  const configTextField: IError = {};\n\n  if (mata && mata.touched && mata.error) {\n    configTextField.error = true;\n    configTextField.helperText = mata.error;\n  }\n\n  const getResults = React.useMemo(\n    () =>\n      throttle(\n        async (\n          request: { input: string },\n          callback: (results?: readonly IEmployeeData[]) => void\n        ) => {\n          const data = await getOptions(request.input);\n          callback(data);\n        },\n        200\n      ),\n    []\n  );\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (inputValue === \"\") {\n      return undefined;\n    }\n\n    getResults({ input: inputValue }, (results?: readonly IEmployeeData[]) => {\n      if (active) {\n        let newOptions: readonly IEmployeeData[] = [];\n\n        if (results) {\n          newOptions = [...newOptions, ...results];\n        }\n        setOptions(newOptions);\n      }\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [field.value, inputValue, getResults]);\n\n  return (\n    <Autocomplete\n      id={name}\n      getOptionLabel={(option) => setLabelOption(option)}\n      filterOptions={(x) => x}\n      options={options}\n      autoComplete\n      filterSelectedOptions\n      {...field}\n      inputValue={inputValue}\n      onChange={(\n        event: React.SyntheticEvent,\n        newValue: IEmployeeData | null\n      ) => {\n        setFieldValue(name, newValue);\n        setFieldValue(\"request.updateEmployee\", true);\n      }}\n      onInputChange={(event, newInputValue) => {\n        setInputValue(newInputValue);\n      }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label={label}\n          fullWidth\n          helperText={helperText}\n          {...configTextField}\n        />\n      )}\n      renderOption={(props, option) => {\n        return (\n          <li {...props}>\n            <Grid container alignItems=\"center\">\n              <Grid item>\n                <Box\n                  component={AccountCircle}\n                  sx={{ color: \"text.secondary\", mr: 2 }}\n                />\n              </Grid>\n              <Grid item xs>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  {setLabelHintOptions(option)}\n                </Typography>\n              </Grid>\n            </Grid>\n          </li>\n        );\n      }}\n    />\n  );\n}\n","/* eslint-disable react/jsx-props-no-spreading */\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from \"@mui/material/TextField\";\nimport { useField, useFormikContext } from \"formik\";\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport throttle from \"lodash/throttle\";\nimport * as React from \"react\";\n\nimport { ISelectData } from \"../../pages/RequestStepForm/components/Interface\";\nimport { sapService } from \"../../services/sap.service\";\n\ninterface IProps {\n  name: string;\n  label: string;\n  placeHolder: string;\n  parentValue: string | \"ECC\";\n  editMode: boolean;\n  addToTable: boolean;\n  handleProfileChange: (values: ISelectData[]) => void;\n  disabledOptions: ISelectData[];\n}\n\ninterface IError {\n  error?: boolean;\n  helperText?: string;\n}\n\nexport default function InputSAPProfiles({\n  name,\n  label,\n  placeHolder,\n  parentValue,\n  addToTable,\n  handleProfileChange,\n  disabledOptions,\n}: IProps): JSX.Element {\n  const [options, setOptions] = React.useState<readonly ISelectData[]>([]);\n  // const [value, setValue] = React.useState<ISelectData[]>([]);\n\n  const [field, mata] = useField(name);\n  const { setFieldValue } = useFormikContext();\n  const [inputValue, setInputValue] = React.useState(\"\");\n\n  const configTextField: IError = {};\n\n  if (mata && mata.touched && mata.error) {\n    configTextField.error = true;\n    configTextField.helperText = mata.error;\n  }\n\n  const getResults = React.useMemo(\n    () =>\n      throttle(\n        async (\n          request: { input: string },\n          callback: (results?: readonly ISelectData[]) => void\n        ) => {\n          const data = await sapService.getSAProfileCollection(\n            parentValue,\n            request.input,\n            \"20\"\n          );\n          callback(data);\n        },\n        200\n      ),\n    [parentValue]\n  );\n\n  React.useEffect(() => {\n    let active = true;\n\n    // user typed nothing, therefore can not search\n    if (inputValue === \"\") {\n      setOptions(field.value || []);\n      return undefined;\n    }\n\n    getResults({ input: inputValue }, (results?: readonly ISelectData[]) => {\n      if (active) {\n        let newOptions: readonly ISelectData[] = [];\n\n        if (results) {\n          newOptions = [...newOptions, ...results];\n        }\n        setOptions(newOptions);\n      }\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [field.value, inputValue, getResults]);\n\n  return (\n    <Autocomplete\n      multiple\n      id={name}\n      {...field}\n      inputValue={inputValue}\n      options={options}\n      getOptionLabel={(option) => `${option.id} - ${option.description}`}\n      filterSelectedOptions\n      onChange={(event: React.SyntheticEvent, value: ISelectData[]) => {\n        setFieldValue(name, value);\n        if (addToTable) {\n          handleProfileChange(value);\n        }\n      }}\n      onInputChange={(event: React.SyntheticEvent, newInputValue) => {\n        setInputValue(newInputValue);\n      }}\n      getOptionDisabled={(option) => {\n        const values = [...field.value, ...disabledOptions];\n        const valueAlreadySelected = values.find((value) => {\n          return value.id === option.id;\n        });\n        return !!valueAlreadySelected;\n      }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label={`${label} ${parentValue}`}\n          placeholder={placeHolder}\n        />\n      )}\n    />\n  );\n}\n","/* eslint-disable react/jsx-props-no-spreading */\nimport TextField from \"@mui/material/TextField\";\nimport { useField } from \"formik\";\nimport * as React from \"react\";\n\ninterface IProps {\n  label: string;\n  name: string;\n}\ninterface IError {\n  error?: boolean;\n  helperText?: string;\n}\n\nexport default function InputDatePicker({\n  label,\n  ...otherprops\n}: IProps): JSX.Element {\n  const [field, mata] = useField(otherprops.name);\n\n  const configError: IError = {};\n\n  if (mata && mata.touched && mata.error) {\n    configError.error = true;\n    configError.helperText = mata.error;\n  }\n\n  const configTextField = {\n    ...field,\n    ...otherprops,\n    ...configError,\n  };\n\n  return (\n    <TextField\n      label={label}\n      type=\"date\"\n      sx={{ width: 180 }}\n      InputLabelProps={{\n        shrink: true,\n      }}\n      {...configTextField}\n    />\n  );\n}\n","/* eslint-disable react/jsx-props-no-spreading */\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport { useField, useFormikContext } from \"formik\";\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport throttle from \"lodash/throttle\";\nimport * as React from \"react\";\n\nimport { ISelectData } from \"../../pages/RequestStepForm/components/Interface\";\n\ninterface IProps {\n  name: string;\n  label: string;\n  labelWithId: boolean;\n  helperText: string;\n  getOptions: (param: string) => Promise<ISelectData[]>;\n  // eslint-disable-next-line react/require-default-props\n  disabledOptions?: ISelectData[];\n}\ninterface IError {\n  error?: boolean;\n  helperText?: string;\n}\n\nexport default function InputAutoComplete(props: IProps): JSX.Element {\n  const { name, label, labelWithId, helperText, getOptions, disabledOptions } =\n    props;\n\n  const [options, setOptions] = React.useState<readonly ISelectData[]>([]);\n\n  const [field, mata] = useField(name);\n  const { setFieldValue } = useFormikContext();\n  const [inputValue, setInputValue] = React.useState(\"\");\n\n  const configTextField: IError = {};\n\n  if (mata && mata.touched && mata.error) {\n    configTextField.error = true;\n    configTextField.helperText = mata.error;\n  }\n\n  const setLabelOption = (option: ISelectData) => {\n    if (labelWithId)\n      return option.id !== \"\" ? `${option.id} - ${option.description}` : \"\";\n    return option.id;\n  };\n\n  const getResults = React.useMemo(\n    () =>\n      throttle(\n        async (\n          request: { input: string },\n          callback: (results?: readonly ISelectData[]) => void\n        ) => {\n          const data = await getOptions(request.input);\n          callback(data);\n        },\n        200\n      ),\n    []\n  );\n  React.useEffect(() => {\n    let active = true;\n\n    if (inputValue === \"\" || inputValue === \" - \") {\n      setOptions(field.value ? [field.value] : []);\n      return undefined;\n    }\n\n    getResults({ input: inputValue }, (results?: readonly ISelectData[]) => {\n      if (active) {\n        let newOptions: readonly ISelectData[] = [];\n\n        if (field.value) {\n          newOptions = [field.value];\n        }\n\n        if (results) {\n          newOptions = [...newOptions, ...results];\n        }\n        setOptions(newOptions);\n      }\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [field.value, inputValue, getResults]);\n\n  return (\n    <Autocomplete\n      id={name}\n      {...field}\n      inputValue={inputValue}\n      getOptionLabel={setLabelOption}\n      filterOptions={(x) => x}\n      options={options}\n      autoComplete\n      filterSelectedOptions\n      getOptionDisabled={(option) => {\n        const result = disabledOptions?.find((value) => value.id === option.id);\n        return !!result;\n      }}\n      fullWidth\n      multiple={false}\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      onChange={(event: any, newValue: ISelectData | null) => {\n        setOptions(newValue ? [newValue, ...options] : options);\n        console.log(\"chamando o onchange pai\");\n        setFieldValue(name, newValue);\n      }}\n      onInputChange={(event, newInputValue) => {\n        setInputValue(newInputValue);\n      }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label={label}\n          fullWidth\n          helperText={helperText}\n          {...configTextField}\n        />\n      )}\n      renderOption={(props, option) => {\n        return (\n          <li {...props}>\n            <Grid container alignItems=\"center\">\n              <Grid item>\n                <Box\n                  component={AccountCircle}\n                  sx={{ color: \"text.secondary\", mr: 2 }}\n                />\n              </Grid>\n              <Grid item xs>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  {setLabelOption(option)}\n                </Typography>\n              </Grid>\n            </Grid>\n          </li>\n        );\n      }}\n    />\n  );\n}\n","import Checkbox from \"@mui/material/Checkbox\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport { useField, useFormikContext } from \"formik\";\nimport * as React from \"react\";\n\ninterface IProps {\n  name: string;\n}\n\nexport default function CheckBoxAS400Access({ name }: IProps): JSX.Element {\n  const [field] = useField(name);\n  const { setFieldValue } = useFormikContext();\n\n  const { inc, exc, alt, con } = field.value;\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const { checked } = evt.target;\n\n    const access = {\n      ...field.value,\n      [evt.target.name]: checked,\n    };\n    if (!access.inc && !access.exc && !access.alt) access.con = true;\n    setFieldValue(name, access);\n  };\n\n  return (\n    // MuiFormControlLabel-root\n    <FormControl component=\"fieldset\">\n      <FormGroup aria-label=\"position\" row>\n        <FormControlLabel\n          value=\"I\"\n          control={\n            <Checkbox\n              size=\"small\"\n              checked={inc}\n              onChange={handleChange}\n              name=\"inc\"\n            />\n          }\n          label=\"Inc\"\n          labelPlacement=\"top\"\n          sx={{\n            marginLeft: \"4px\",\n            marginRight: \"4px\",\n          }}\n        />\n        <FormControlLabel\n          value=\"E\"\n          control={\n            <Checkbox\n              size=\"small\"\n              checked={exc}\n              onChange={handleChange}\n              name=\"exc\"\n            />\n          }\n          label=\"Exc\"\n          labelPlacement=\"top\"\n          sx={{\n            marginLeft: \"4px\",\n            marginRight: \"4px\",\n          }}\n        />\n        <FormControlLabel\n          value=\"A\"\n          control={\n            <Checkbox\n              size=\"small\"\n              checked={alt}\n              onChange={handleChange}\n              name=\"alt\"\n            />\n          }\n          label=\"Alt\"\n          labelPlacement=\"top\"\n          sx={{\n            marginLeft: \"4px\",\n            marginRight: \"4px\",\n          }}\n        />\n        <FormControlLabel\n          value=\"C\"\n          control={\n            <Checkbox\n              size=\"small\"\n              checked={con}\n              onChange={handleChange}\n              name=\"con\"\n            />\n          }\n          label=\"Con\"\n          labelPlacement=\"top\"\n          sx={{\n            marginLeft: \"4px\",\n            marginRight: \"4px\",\n          }}\n        />\n      </FormGroup>\n    </FormControl>\n  );\n}\n","import AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SecurityIcon from \"@material-ui/icons/Security\";\nimport VpnKey from \"@material-ui/icons/VpnKey\";\nimport { Button } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  DataGrid,\n  GridCellParams,\n  GridColDef,\n  GridValueGetterParams,\n  GridToolbarContainer,\n  GridSelectionModel,\n} from \"@mui/x-data-grid\";\nimport { useFormikContext } from \"formik\";\nimport * as React from \"react\";\n\nimport Controls from \"../../../../components/controlsformik/FormikControls\";\nimport { as400Service } from \"../../../../services/as400.service\";\nimport { IRequestEmployee } from \"../Interface\";\n\ninterface IProps {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  rows: any;\n  removeProfile: (id: number[]) => void;\n  updateProfile: (\n    id: number[],\n    company?: string,\n    branchs?: string[],\n    regions?: string[],\n    access?: { inc: boolean; exc: boolean; alt: boolean; con: boolean }\n  ) => void;\n  addProfiles: (\n    company: string,\n    branchs: string[],\n    regions: string[],\n    access: { inc: boolean; exc: boolean; alt: boolean; con: boolean }\n  ) => void;\n}\n\nconst columns: GridColDef[] = [\n  { field: \"id\", headerName: \"ID\", width: 30 },\n  { field: \"service_type\", headerName: \"Serv.\", width: 100 },\n  {\n    field: \"environment\",\n    headerName: \"Ambiente\",\n    width: 110,\n  },\n  { field: \"user_id\", headerName: \"User ID\", width: 130 },\n  { field: \"system\", headerName: \"Sistema\", width: 130 },\n  { field: \"routine\", headerName: \"Rotina\", width: 130 },\n  { field: \"security_type\", headerName: \"Tipo Seg.\", width: 130 },\n  {\n    field: \"company\",\n    headerName: \"empresa\",\n    minWidth: 130,\n    valueGetter: (params: GridValueGetterParams) => {\n      const security_type = params.getValue(params.id, \"security_type\");\n      if (security_type === \"EF\")\n        return `${params.getValue(params.id, \"security_company\") || \"\"}`;\n      return \"--\";\n    },\n  },\n  {\n    field: \"branch\",\n    headerName: \"Filial\",\n    minWidth: 130,\n    valueGetter: (params: GridValueGetterParams) => {\n      const security_type = params.getValue(params.id, \"security_type\");\n      if (security_type === \"EF\")\n        return `${params.getValue(params.id, \"security_branchs\") || \"\"}`;\n      return \"--\";\n    },\n  },\n  {\n    field: \"region\",\n    headerName: \"Região\",\n    minWidth: 130,\n    valueGetter: (params: GridValueGetterParams) => {\n      const security_type = params.getValue(params.id, \"security_type\");\n      if (security_type === \"R\")\n        return `${params.getValue(params.id, \"security_regions\") || \"\"}`;\n\n      return \"--\";\n    },\n  },\n\n  { field: \"access\", headerName: \"Acesso\", width: 130 },\n  {\n    field: \"removeprofileaction\",\n    headerName: \"\",\n    renderCell: () => {\n      return (\n        <Button variant=\"contained\" color=\"error\" startIcon={<DeleteIcon />} />\n      );\n    },\n  },\n];\n\ninterface IToolBarProps {\n  selectionModel: GridSelectionModel;\n  removeProfile: (id: number[]) => void;\n  updateProfile: (\n    id: number[],\n    company?: string,\n    branchs?: string[],\n    regions?: string[],\n    access?: { inc: boolean; exc: boolean; alt: boolean; con: boolean }\n  ) => void;\n  addProfiles: (\n    company: string,\n    branchs: string[],\n    regions: string[],\n    access: { inc: boolean; exc: boolean; alt: boolean; con: boolean }\n  ) => void;\n}\n\nfunction CustomToolbar(props: IToolBarProps) {\n  const { selectionModel, removeProfile, updateProfile, addProfiles } = props;\n  const { values, setFieldValue } = useFormikContext<IRequestEmployee>();\n\n  const handleDeleteClick = () => {\n    const ids = selectionModel.map((value) => parseInt(value.toString(), 10));\n    removeProfile(ids);\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const checkFieldNotNull = (field: any) => {\n    if (!field) return false;\n    if (field.id === \"\") return false;\n    if (field === \"\") return false;\n    return true;\n  };\n\n  const handleClick = (type = \"Access\") => {\n    const ids = selectionModel.map((value) => parseInt(value.toString(), 10));\n    const { company, branch, region, access } = values.as400;\n    if (ids) {\n      if (type === \"Security\") {\n        if (\n          checkFieldNotNull(company) &&\n          checkFieldNotNull(branch) &&\n          checkFieldNotNull(region)\n        )\n          updateProfile(ids, company.id, [branch.id], [region.id]);\n        else {\n          // eslint-disable-next-line no-alert\n          window.alert(\"Informe a empresa, filial e região\");\n        }\n      } else {\n        updateProfile(ids, undefined, undefined, undefined, access);\n      }\n    }\n  };\n\n  const handleAddClick = () => {\n    const { company, branch, region, access } = values.as400;\n    if (\n      checkFieldNotNull(company) &&\n      checkFieldNotNull(branch) &&\n      checkFieldNotNull(region)\n    )\n      addProfiles(company.id, [branch.id], [region.id], access);\n    // eslint-disable-next-line no-alert\n    else window.alert(\"Informe a empresa, filial e região\");\n  };\n\n  React.useEffect(() => {\n    console.log(\"mudou a empresa\");\n    setFieldValue(\"as400.branch\", { id: \"\", description: \"\" });\n  }, [values.as400.company]);\n\n  return (\n    <GridToolbarContainer>\n      <Grid container justifyContent=\"space-between\" spacing={2}>\n        <Grid item xs={12}>\n          <Grid container spacing={1}>\n            <Grid item xs={2}>\n              <Controls.InputSelect\n                name=\"as400.company\"\n                label=\"Empresa\"\n                labelWithId\n                getOptions={as400Service.getCompanyOnlyCollection}\n                editMode\n              />\n            </Grid>\n            <Grid item xs={2}>\n              <Controls.InputSelect\n                label=\"Filial\"\n                name=\"as400.branch\"\n                labelWithId\n                getOptions={as400Service.getBranchOnlyCollection}\n                optionsPrimaryKey={values.as400.company.id}\n                editMode\n              />\n            </Grid>\n            <Grid item xs={2}>\n              <Controls.InputSelect\n                name=\"as400.region\"\n                label=\"Região\"\n                labelWithId\n                getOptions={as400Service.getRegionCollection}\n                editMode\n              />\n            </Grid>\n            <Grid item sx={{ paddingLeft: \"20px\" }}>\n              <Controls.CheckBoxAS400Access name=\"as400.access\" />\n              <Button\n                onClick={() => {\n                  handleAddClick();\n                }}\n                variant=\"contained\"\n                startIcon={<AddShoppingCartIcon />}\n              >\n                Adicionar\n              </Button>\n              <Button\n                onClick={() => {\n                  handleClick(\"Security\");\n                }}\n                variant=\"contained\"\n                startIcon={<SecurityIcon />}\n              >\n                Segurança\n              </Button>\n              <Button\n                onClick={() => {\n                  handleClick();\n                }}\n                variant=\"contained\"\n                startIcon={<VpnKey />}\n              >\n                Acesso\n              </Button>\n              <Button\n                onClick={() => {\n                  handleDeleteClick();\n                }}\n                variant=\"contained\"\n                startIcon={<DeleteIcon />}\n              >\n                Remover\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </GridToolbarContainer>\n  );\n}\n\nexport default function AS400RequestTable({\n  rows,\n  removeProfile,\n  updateProfile,\n  addProfiles,\n}: IProps): JSX.Element {\n  const currentlySelected = (params: GridCellParams) => {\n    const value = params.colDef.field;\n    if (value === \"removeprofileaction\") {\n      const id = params.getValue(params.id, \"id\");\n      if (id) {\n        removeProfile([parseInt(id.toString(), 10)]);\n      }\n    }\n    return \"\";\n  };\n\n  const [selectionModel, setSelectionModel] =\n    React.useState<GridSelectionModel>([]);\n\n  return (\n    <div style={{ height: 450, width: \"100%\" }}>\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        pageSize={100}\n        rowsPerPageOptions={[5, 10, 30]}\n        checkboxSelection\n        onCellClick={currentlySelected}\n        onSelectionModelChange={(newSelectionModel) => {\n          setSelectionModel(newSelectionModel);\n        }}\n        selectionModel={selectionModel}\n        components={{\n          Toolbar: CustomToolbar,\n        }}\n        componentsProps={{\n          toolbar: {\n            selectionModel,\n            removeProfile,\n            updateProfile,\n            addProfiles,\n          },\n        }}\n      />\n    </div>\n  );\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Grid from \"@mui/material/Grid\";\nimport { useFormikContext } from \"formik\";\nimport React from \"react\";\n\nimport Controls from \"../../../../components/controlsformik/FormikControls\";\nimport {\n  as400Service,\n  EServiceIds as ServiceId,\n} from \"../../../../services/as400.service\";\nimport { IRequestEmployee, IAS400RoutineData } from \"../Interface\";\nimport AS400RequestTable from \"./AS400RequestTable\";\n\nexport default function AS400RequestForm(): JSX.Element {\n  const { values, setFieldValue } = useFormikContext<IRequestEmployee>();\n  const { as400 } = values;\n\n  const setAccess = (access: {\n    inc: boolean;\n    exc: boolean;\n    alt: boolean;\n    con: boolean;\n  }) => {\n    const include = access.inc ? \"S\" : \"N\";\n    const exclude = access.exc ? \"S\" : \"N\";\n    const change = access.alt ? \"S\" : \"N\";\n\n    return `${include} ${exclude} ${change}`;\n  };\n\n  const handleAddJobPositionClick = async (\n    company: string,\n    branchs: string[],\n    regions: string[]\n  ) => {\n    const profile = await as400Service.getAS400JobPosition(\n      as400.job_position.id\n    );\n    const rows = profile.map(\n      (\n        value: {\n          system_id: any;\n          routine_id: any;\n          access_type: any;\n          company: string;\n          branch: string;\n          region: string;\n          inc: any;\n          exc: any;\n          alt: any;\n        },\n        index: any\n      ) => {\n        const item = {\n          id: index,\n          service_type: as400.service_type.id,\n          environment: as400.environment.id,\n          user_id: as400.user_id.id,\n          system: value.system_id,\n          routine: value.routine_id,\n          security_type: value.access_type,\n          security_company: value.company === \"XX\" ? company : value.company,\n          security_branchs: value.branch === \"XXX\" ? branchs : value.branch,\n          security_regions: value.region === \"XXX\" ? regions : \"\",\n          security_text: \"\",\n          job_position: as400.job_position.id,\n          access: `${value.inc}${value.exc}${value.alt}`,\n        };\n        return item;\n      }\n    );\n    console.log(\"new array\");\n    console.log(rows);\n    setFieldValue(\"as400.table\", [...rows]);\n  };\n\n  const handleUpdateAS400Table = (\n    ids: number[],\n    company?: string,\n    branchs?: string[],\n    regions?: string[],\n    access?: { inc: boolean; exc: boolean; alt: boolean; con: boolean }\n  ) => {\n    const { table } = as400;\n\n    if (table) {\n      console.log(ids);\n      console.log(table);\n      ids.forEach((id) => {\n        console.log(id);\n        const pos = id - 1;\n        table[pos].security_company = company || table[pos].security_company;\n        table[pos].security_branchs = branchs || table[pos].security_branchs;\n        table[pos].security_regions = regions || table[pos].security_regions;\n        table[pos].access = access ? setAccess(access) : table[pos].access;\n      });\n    }\n    setFieldValue(\"as400.table\", table);\n  };\n\n  const handleAddAS400Table = (\n    company: string,\n    branchs: string[],\n    regions: string[],\n    access: { inc: boolean; exc: boolean; alt: boolean; con: boolean }\n  ) => {\n    const {\n      service_type,\n      environment,\n      user_id,\n      system,\n      routines,\n      is_job_position,\n    } = as400;\n\n    if (is_job_position.id === \"S\") {\n      handleAddJobPositionClick(company, branchs, regions);\n    } else {\n      const addroutines = routines?.map((value: IAS400RoutineData) => {\n        const item = {\n          id: 0,\n          service_type: service_type.id,\n          environment: environment.id,\n          user_id: user_id.id,\n          system: system.id,\n          routine: value.id,\n          security_type: value.access_type,\n          security_company: company,\n          security_branchs: branchs,\n          security_regions: regions,\n          security_text: value.access_observation\n            ? value.access_observation\n            : \"\",\n          job_position: \"\",\n          access: setAccess(access),\n        };\n        return item;\n      });\n\n      const table = [...as400.table, ...addroutines];\n      console.log(table);\n\n      const uniqueData = Array.from(\n        table\n          .reduce(\n            (map, obj) =>\n              map.set(\n                `${obj.system}${obj.routine}${obj.security_company}${obj.security_branchs}`,\n                obj\n              ),\n            new Map()\n          )\n          .values()\n      );\n      // const i = 0;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      uniqueData.sort((a: any, b: any) => a.routine - b.routine);\n      const fixId = uniqueData.map((value, index) => {\n        // eslint-disable-next-line no-param-reassign\n        value.id = index + 1;\n        return value;\n      });\n\n      setFieldValue(\"as400.table\", [...fixId]);\n    }\n  };\n\n  const handleInputAS400TableItemRemoval = (id: number[]) => {\n    const new_table = as400.table.filter((value) => {\n      const index = id.indexOf(value.id);\n      return index < 0;\n    });\n\n    new_table.map((value, index) => {\n      // eslint-disable-next-line no-param-reassign\n      value.id = index + 1;\n      return value;\n    });\n    setFieldValue(\"as400.table\", [...new_table]);\n  };\n\n  React.useEffect(() => {\n    if (as400.service_type?.id === ServiceId.ExcludeProfile) {\n      setFieldValue(\"as400.user_type\", { id: \"N\", description: \"Não\" });\n    }\n  }, [as400.service_type]);\n\n  React.useEffect(() => {\n    setFieldValue(\"as400.branch\", { id: \"\", description: \"\" });\n  }, [as400.company]);\n\n  React.useEffect(() => {\n    if (as400.user_type?.id === \"S\")\n      setFieldValue(\"as400.user_id\", {\n        id: \"NovoUsuario\",\n        description: \"Novo Usuário\",\n      });\n    else if (as400.user_id?.id === \"NovoUsuario\")\n      setFieldValue(\"as400.user_id\", {\n        id: \"\",\n        description: \"\",\n      });\n  }, [as400.user_type]);\n\n  return (\n    <Grid container justifyContent=\"space-between\" spacing={2}>\n      <Grid item xs={6}>\n        <Grid container spacing={1}>\n          <Grid item xs={4}>\n            <Controls.InputSelect\n              name=\"as400.service_type\"\n              label=\"Serviço AS400\"\n              getOptions={as400Service.getAS400ServiceTypeCollection}\n              labelWithId\n              editMode\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <Controls.InputSelect\n              name=\"as400.environment\"\n              label=\"Ambiente\"\n              labelWithId\n              getOptions={as400Service.getAS400EnvironmentCollection}\n              editMode\n            />\n          </Grid>\n          <Grid item xs={2}>\n            <Controls.InputSelect\n              name=\"as400.user_type\"\n              label=\"Novo Usuário\"\n              getOptions={as400Service.getAS400UserTypeCollection}\n              labelWithId={false}\n              editMode\n              // editMode={service_type.id !== ServiceId.ExcludeProfile}\n            />\n          </Grid>\n        </Grid>\n        {as400?.service_type?.id !== ServiceId.CopyUser && (\n          <>\n            <Grid container spacing={1}>\n              <Grid item xs={2}>\n                <Controls.InputSelect\n                  name=\"as400.is_job_position\"\n                  label=\"Indicar Perfil\"\n                  getOptions={as400Service.getAS400YesNoCollection}\n                  labelWithId={false}\n                  editMode\n                />\n              </Grid>\n              {as400.is_job_position?.id === \"S\" && (\n                <Grid item xs={10}>\n                  <Controls.InputSelect\n                    name=\"as400.job_position\"\n                    label=\"Perfil\"\n                    getOptions={as400Service.getAS400JobPositionCollection}\n                    labelWithId={false}\n                    editMode\n                  />\n                </Grid>\n              )}\n\n              {as400.is_job_position?.id === \"N\" && (\n                <>\n                  <Grid item xs={10}>\n                    <Controls.InputSelect\n                      name=\"as400.system\"\n                      label=\"Sistema\"\n                      getOptions={as400Service.getAS400SystemCollection}\n                      labelWithId\n                      editMode\n                    />\n                  </Grid>\n                </>\n              )}\n            </Grid>\n          </>\n        )}\n      </Grid>\n\n      <Grid item xs={6}>\n        <Grid container spacing={1}>\n          <Grid item xs={6}>\n            {as400?.user_type?.id !== \"S\" && (\n              <Controls.InputAutoComplete\n                label=\"User Id\"\n                getOptions={as400Service.getAS400UsersByNameCollection}\n                name=\"as400.user_id\"\n                labelWithId\n                helperText=\"\"\n              />\n            )}\n            {as400?.user_type?.id === \"S\" && (\n              <Controls.InputText\n                name=\"as400.user_id\"\n                label=\"User Id\"\n                fullWidth\n                inputProps={{\n                  readOnly: true,\n                }}\n              />\n            )}\n          </Grid>\n\n          {as400.service_type?.id === ServiceId.CopyUser && (\n            <Grid item xs={6}>\n              <Controls.InputAutoComplete\n                name=\"as400.user_id_source\"\n                label=\"User Id Origem\"\n                labelWithId\n                getOptions={as400Service.getAS400UsersByNameCollection}\n                helperText=\"\"\n                disabledOptions={[as400.user_id]}\n              />\n            </Grid>\n          )}\n        </Grid>\n        {as400.service_type?.id !== ServiceId.CopyUser &&\n          as400.is_job_position?.id === \"N\" && (\n            <Grid container spacing={1}>\n              <Grid item xs={11}>\n                <Controls.CheckBoxAutoComplete\n                  label=\"Rotina\"\n                  getOptions={as400Service.getAS400RoutineCollection}\n                  name=\"as400.routines\"\n                  labelWithId\n                  helperText=\"\"\n                  parentValue={as400.system.id}\n                />\n              </Grid>\n            </Grid>\n          )}\n      </Grid>\n\n      {as400?.service_type && as400.service_type.id !== ServiceId.CopyUser && (\n        <>\n          <Grid item xs={12}>\n            <Grid container spacing={1}>\n              <Grid item xs={12}>\n                <AS400RequestTable\n                  rows={as400.table}\n                  removeProfile={handleInputAS400TableItemRemoval}\n                  updateProfile={handleUpdateAS400Table}\n                  addProfiles={handleAddAS400Table}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        </>\n      )}\n    </Grid>\n  );\n}\n","/* eslint-disable react/jsx-props-no-spreading */\nimport MuiAlert, { AlertProps } from \"@mui/material/Alert\";\nimport Stack from \"@mui/material/Stack\";\nimport { useField, useFormikContext } from \"formik\";\nimport React from \"react\";\n\nimport { EServiceIds } from \"../../../../services/as400.service\";\nimport AS400Table from \"../../../Request/components/AS400Table\";\nimport { IRequestEmployee } from \"../Interface\";\n\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\n  props,\n  ref\n) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\ninterface ICreateSASRequestDTO {\n  requested_by_id: string;\n  requested_by_name: string;\n  requested_by_email: string;\n  request_number: string;\n  request_status: number;\n  request_type: string;\n  request_observation: string;\n  request_copy_list: string;\n  employee_id: string;\n  employee_fullname: string;\n  employee_email: string;\n  employee_type: string;\n  employee_type_description: string;\n  employee_profile_edition_rule: string;\n  employee_role_id: string;\n  employee_role_description: string;\n  employee_plataform_id: string;\n  employee_plataform_description: string;\n  employee_costcenter_id: string;\n  employee_costcenter_description: string;\n  employee_company_id: string;\n  employee_company_description: string;\n  employee_branch_id: string;\n  employee_branch_description: string;\n  employe_manager_id: string;\n  employee_manager_name: string;\n  employee_login: string;\n  employee_sap_id: string;\n  employee_userid_sap_status: string;\n  employee_userid_sap_expiration_date: string;\n  employee_as400_id: string;\n  employee_userid_as400_description: string;\n  updateEmployee: boolean;\n}\n\ninterface IAS400UserRequest {\n  service_id: string;\n  service_description: string;\n  environment: string;\n  is_new_user: boolean;\n  user_id: string;\n  reused_user_id_license: string;\n  observation: string;\n  copy_user_id: string;\n  copy_user_id_status: string;\n}\n\nexport default function AS400SubmitForm(): JSX.Element {\n  const setRequestType = () => {\n    return \"AS400\";\n  };\n\n  const { values, setFieldValue, status } =\n    useFormikContext<IRequestEmployee>();\n\n  const { request, as400 } = values;\n  const createJson = () => {\n    const employee: ICreateSASRequestDTO = {\n      requested_by_id: request.request_by ? request.request_by : \"\",\n      requested_by_name: request.request_by ? request.request_by : \"\",\n      requested_by_email: request.request_by ? request.request_by : \"\",\n      request_number: \"\",\n      request_status: -1,\n      request_type: setRequestType(),\n      request_observation: request.request_observation,\n      request_copy_list: \"falta\",\n      employee_id: request.employee.id,\n      employee_fullname: request.employee.description,\n      employee_email: request.employee.email ? request.employee.email : \"\",\n      employee_type: request.employee_type ? request.employee_type.id : \"\",\n      employee_type_description: request.employee_type\n        ? request.employee_type.description\n        : \"\",\n      employee_profile_edition_rule: request.employee_profile_edition_rule,\n      employee_role_id: request.employee_role ? request.employee_role.id : \"\",\n      employee_role_description: request.employee_role\n        ? request.employee_role.description\n        : \"\",\n      employee_plataform_id: request.employee_plataform\n        ? request.employee_plataform.id\n        : \"\",\n      employee_plataform_description: request.employee_plataform\n        ? request.employee_plataform.description\n        : \"\",\n      employee_costcenter_id: request.employee_costcenter\n        ? request.employee_costcenter.id\n        : \"\",\n      employee_costcenter_description: request.employee_costcenter\n        ? request.employee_costcenter.description\n        : \"\",\n      employee_company_id: request.employee_company\n        ? request.employee_company.id\n        : \"\",\n      employee_company_description: request.employee_company\n        ? request.employee_company.description\n        : \"\",\n      employee_branch_id: request.employee_branch\n        ? request.employee_branch.id\n        : \"\",\n      employee_branch_description: request.employee_branch\n        ? request.employee_branch.description\n        : \"\",\n      employe_manager_id: request.employee_manager\n        ? request.employee_manager.id\n        : \"\",\n      employee_manager_name: request.employee_manager\n        ? request.employee_manager.description\n        : \"\",\n      employee_login: request.employee_userid_login\n        ? request.employee_userid_login\n        : \"\",\n      employee_sap_id: request.employee_userid_sap\n        ? request.employee_userid_sap\n        : \"\",\n      employee_userid_sap_status: request.employee_userid_sap_status\n        ? request.employee_userid_sap_status\n        : \"\",\n      employee_userid_sap_expiration_date: request.employee_userid_sap_status\n        ? request.employee_userid_sap_status\n        : \"\",\n      employee_as400_id: \"\",\n      employee_userid_as400_description: \"\",\n      updateEmployee: request.updateEmployee ? request.updateEmployee : false,\n    };\n\n    const user: IAS400UserRequest = {\n      service_id: \"\",\n      service_description: \"\",\n      environment: \"\",\n      is_new_user: false,\n      user_id: \"\",\n      reused_user_id_license: \"\",\n      observation: \"\",\n      copy_user_id: \"\",\n      copy_user_id_status: \"-1\",\n    };\n\n    if (as400.service_type.id === EServiceIds.CopyUser) {\n      user.environment = as400.environment.id;\n      user.is_new_user = as400.user_type.id === \"S\";\n      user.user_id = as400.user_id.id;\n      user.reused_user_id_license = as400.user_licence;\n      user.observation = \"\";\n\n      user.copy_user_id = as400.user_id_source.id;\n      user.copy_user_id_status = \"\";\n      user.service_id = EServiceIds.CopyUser;\n      user.service_description = \"Duplicação de Acesso\";\n      return {\n        employee,\n        user,\n      };\n    }\n\n    if (as400.user_type.id === \"S\") {\n      user.environment = as400.environment.id;\n      user.is_new_user = true;\n      user.user_id = as400.user_id.id;\n      user.reused_user_id_license = as400.user_licence;\n      user.observation = \"\";\n      user.service_id = EServiceIds.CreateUser;\n      user.service_description = \"Criação de Usuário\";\n    }\n\n    const profiles = as400.table?.map((row) => {\n      return {\n        service_id: row.service_type,\n        service_description:\n          row.service_type === EServiceIds.AddProfile\n            ? \"Liberação de Acesso\"\n            : \"Exclusão de Acesso\",\n        environment: row.environment,\n        is_new_user: user.is_new_user,\n        user_id: row.user_id,\n        system: row.system,\n        routine: row.routine,\n        access_type: row.security_type,\n        access_observation: row.security_text,\n        limited_access: false,\n        restricted_access: false,\n        access: row.access,\n        company_id: row.security_type === \"EF\" ? row.security_company : \"\",\n        company_name: row.security_type === \"EF\" ? row.security_company : \"\",\n        branch_id: row.security_type === \"EF\" ? row.security_branchs[0] : \"\",\n        branch_name: \"\",\n        region_id: row.security_type === \"R\" ? row.security_regions[0] : \"\",\n        region_name: \"\",\n        job_position: row.job_position,\n      };\n    });\n\n    return user.service_id === \"\"\n      ? {\n          employee,\n          profiles,\n        }\n      : {\n          employee,\n          user,\n          profiles,\n        };\n  };\n\n  React.useEffect(() => {\n    const data = createJson();\n    setFieldValue(\"data\", data);\n  }, []);\n\n  const [field] = useField(\"data\");\n  const rows = field.value ? [field.value.user, ...field.value.profiles] : [];\n  return (\n    <Stack\n      spacing={2}\n      sx={{\n        width: \"100%\",\n        marginTop: \"120px\",\n        alignContent: \"center\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      {!status && (\n        <>\n          <Alert severity=\"info\">\n            Clique em enviar para registrar sua solicitação\n          </Alert>\n\n          {field.value && (\n            <AS400Table\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              rows={rows.map((row: any, index: number) => {\n                return { ...row, id: index };\n              })}\n            />\n          )}\n        </>\n      )}\n      {status && status?.isError && (\n        <Alert severity=\"error\">{status.error}</Alert>\n      )}\n      {status && !status?.isError && (\n        <Alert severity=\"success\">\n          Solicitação criada com sucesso: {status.data.request_number}\n        </Alert>\n      )}\n    </Stack>\n  );\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport {\n  ICompany,\n  IData,\n  IEmployeeData,\n  ISelectData,\n} from \"../pages/RequestStepForm/components/Interface\";\nimport api from \"./api\";\nimport { sapService } from \"./sap.service\";\n\nexport interface IEmployeeFormData {\n  is_contingency: boolean;\n  employee_profile_edition_rule: string;\n  employee_role: IData | undefined | null;\n  employee_plataform: IData | undefined | null;\n  employee_costcenter: IData | undefined | null;\n  employee_type: IData | undefined | null;\n  employee_manager: IData | undefined | null;\n  employee_company: IData | undefined | null;\n  employee_branch: IData | undefined | null;\n  employee: IEmployeeData;\n  updateEmployee: boolean;\n  has_sap_job_positions: boolean;\n  employee_sap_job_positions: ISelectData[];\n  employee_userid_login?: string | undefined | null;\n  employee_userid_as400: IData | undefined | null;\n  employee_userid_sap: string | undefined | null;\n  employee_userid_sap_status: string | undefined | null;\n  employee_userid_sap_expiration_date: string | undefined | null;\n}\n\nclass EmployeeService {\n  async getCompanyCollection(id?: string): Promise<ICompany[]> {\n    const response = await api.get(`/employees/companies`);\n    const { data } = response;\n    return data;\n  }\n\n  async getCompanyOnlyCollection(id?: string): Promise<IData[]> {\n    const response = await api.get(`/employees/companies`);\n    const { data } = response;\n    const x = data.map((value: any) => {\n      return { id: value.id, description: value.description };\n    });\n    return x;\n  }\n\n  async getCompanyBranchCollection(id?: string): Promise<IData[]> {\n    const response = await api.get(`/employees/companies`);\n    const { data } = response;\n\n    const company = data.filter((value: any) => value.id === id);\n    if (company[0]) return company[0].branchs;\n    return [{ id: \"\", description: \"\" }];\n  }\n\n  async getRoleCollection(id?: string): Promise<IData[]> {\n    const response = await api.get(\n      `/employees/roles?fieldoptions=S&orderby=description`\n    );\n    const { data } = response;\n    return data;\n  }\n\n  async getPlataformCollection(id?: string): Promise<IData[]> {\n    const response = await api.get(\n      `/employees/plataforms?fieldoptions=S&orderby=description`\n    );\n    const { data } = response;\n    return data;\n  }\n\n  async getCostCenterCollection(id?: string): Promise<IData[]> {\n    const response = await api.get(\n      `/employees/costcenters?fieldoptions=S&orderby=description`\n    );\n    const { data } = response;\n    return data;\n  }\n\n  async getEmployeeTypeCollection(id?: string): Promise<IData[]> {\n    const data = [\n      {\n        id: \"Funcionário\",\n        description: \"Funcionário\",\n      },\n      {\n        id: \"Terceiro\",\n        description: \"Terceiro\",\n      },\n      {\n        id: \"Robô RCA\",\n        description: \"Robô RCA\",\n      },\n      {\n        id: \"Outros\",\n        description: \"Outros\",\n      },\n    ];\n    return data;\n  }\n\n  async getEmployeeByNameCollection(name: string): Promise<IEmployeeData[]> {\n    const response = await api.get(`/employees/name/${name}`);\n    const { data } = response;\n\n    const newdata = data.map((value: any) => {\n      return {\n        id: value.employee_id,\n        description: value.employee_fullname,\n        email: value.employee_email,\n      };\n    });\n\n    return newdata;\n  }\n\n  async getManagerCollection(id?: string): Promise<IData[]> {\n    const response = await api.get(\n      `/employees/managers?fieldoptions=S&orderby=full_name`\n    );\n    const { data } = response;\n\n    const mapeddata = data.map((value: any) => {\n      return { id: value.id, description: value.full_name };\n    });\n    return mapeddata;\n  }\n\n  async getEmployeeById(id: string): Promise<IEmployeeData> {\n    const response = await api.get(`/employees/${id}`);\n    const { data } = response;\n    return data;\n  }\n\n  setEmployeeNameOption(option: IEmployeeData): string {\n    return option ? option.description : \"\";\n  }\n\n  setEmployeeHintNameOptions(option: IEmployeeData): string {\n    if (option) return option ? `${option.description} ( ${option.email})` : \"\";\n    return \"\";\n  }\n\n  setEmployeeEmailOption(option: IEmployeeData): string {\n    if (option) return option.email ? option.email : \"\";\n    return \"\";\n  }\n\n  setEmployeeHintEmailOptions(option: IEmployeeData): string {\n    if (option) return option ? `${option.email} ( ${option.description})` : \"\";\n    return \"\";\n  }\n\n  async getEmployeeValues(id: string): Promise<IEmployeeFormData> {\n    const employee_without_id = {\n      is_contingency: false,\n      employee_profile_edition_rule: \"ALL\",\n      employee_role: null,\n      employee_plataform: null,\n      employee_costcenter: null,\n      request_category: null,\n      employee_type: null,\n      employee_manager: null,\n      employee_company: null,\n      employee_branch: null,\n      employee: { id: \"\", description: \"\", email: \"\" },\n      updateEmployee: false,\n      has_sap_job_positions: false,\n      employee_sap_job_positions: [],\n      employee_userid_login: \"\",\n      employee_userid_as400: { id: \"\", description: \"\" },\n      employee_userid_sap: \"\",\n      employee_userid_sap_status: \"\",\n      employee_userid_sap_expiration_date: \"\",\n    };\n\n    if (!id) return employee_without_id;\n\n    const response = await api.get(`/employees/${id}`);\n    const { data } = response;\n\n    if (data) {\n      const employee: IEmployeeFormData = {\n        is_contingency: data.is_contingency,\n        updateEmployee: false,\n        employee: {\n          id: data.employee_id,\n          description: data.employee_fullname,\n          email: data.employee_email,\n        },\n        employee_profile_edition_rule: data.employee_profile_edition_rule,\n        employee_type: data.employee_type\n          ? {\n              id: data.employee_type,\n              description: data.employee_type,\n            }\n          : null,\n        employee_manager: data.manager\n          ? {\n              id: data.manager.id,\n              description: data.manager.fullname,\n            }\n          : null,\n        employee_role: data.role\n          ? {\n              id: data.role.id,\n              description: data.role.description,\n            }\n          : null,\n        employee_plataform: data.plataform\n          ? {\n              id: data.plataform.id,\n              description: data.plataform.description,\n            }\n          : null,\n        employee_costcenter: data.costCenter\n          ? {\n              id: data.costCenter.id,\n              description: data.costCenter.description,\n            }\n          : null,\n        employee_company: data.company\n          ? {\n              id: data.company.id,\n              description: data.company.description,\n            }\n          : null,\n        employee_branch: data.branch\n          ? {\n              id: data.branch.id,\n              description: data.branch.description,\n            }\n          : null,\n\n        employee_userid_login: data.employee_login,\n        employee_userid_as400: data.as400User\n          ? { id: data.as400User.id, description: data.as400User.user_name }\n          : { id: \"\", description: \"\" },\n        employee_userid_sap: data.employee_sap_id,\n        employee_userid_sap_status: data.employee_sap_id_status,\n        employee_userid_sap_expiration_date:\n          data.employee_sap_id_expiration_date,\n        employee_sap_job_positions: [],\n        has_sap_job_positions: false,\n      };\n\n      console.log(\"procurando jobpositions\");\n      if (data.costCenter && data.manager) {\n        const jobPositions: ISelectData[] =\n          await sapService.getJobPositionCollection(\n            data.manager.id,\n            data.costCenter.id\n          );\n        console.log(`pegou jobpostions`);\n        console.log(jobPositions);\n        employee.employee_sap_job_positions = jobPositions;\n        employee.has_sap_job_positions = !!jobPositions[0];\n      }\n\n      return employee;\n    }\n\n    return employee_without_id;\n  }\n}\n\nexport default new EmployeeService();\n","import Grid from \"@mui/material/Grid\";\nimport { useFormikContext } from \"formik\";\nimport React from \"react\";\n\nimport Controls from \"../../../../components/controlsformik/FormikControls\";\nimport EmployeeService from \"../../../../services/employee.service\";\nimport { IRequestEmployee } from \"../Interface\";\n\nexport default function EmployeeForm(): JSX.Element {\n  const { values, setValues } = useFormikContext<IRequestEmployee>();\n\n  const { request } = values;\n\n  const canEditEmployeeFields = () => {\n    const rule = request.employee_profile_edition_rule;\n    if (rule === \"ALL\") return true;\n    if (request.is_contingency) return true;\n    if (rule === \"NONE\") return false;\n    if (rule === \"ERROR\") return true;\n    return false;\n  };\n\n  const canEditManagerField = () => {\n    const rule = request.employee_profile_edition_rule;\n    if (rule === \"ALL\") return true;\n    if (rule === \"MANAGER\") return true;\n    if (request.is_contingency) return true;\n    if (rule === \"ERROR\") return true;\n    return false;\n  };\n\n  React.useEffect(() => {\n    async function updateForm(id: string) {\n      console.log(`loading new values ${id}`);\n      const employee = await EmployeeService.getEmployeeValues(id);\n      console.log(employee);\n\n      const newValues: IRequestEmployee = {\n        ...values,\n        request: { ...values.request, ...employee },\n      };\n      setValues(newValues, true);\n    }\n    const id = request.employee ? request.employee.id : \"\";\n    if (request.updateEmployee) {\n      updateForm(id);\n    }\n  }, [request.updateEmployee]);\n\n  return (\n    <>\n      <Grid container justifyContent=\"space-between\" spacing={2}>\n        <Grid item xs={6}>\n          <Grid container spacing={1}>\n            <Grid item xs={8}>\n              <Controls.InputText\n                name=\"request.request_by\"\n                label=\"Solicitante\"\n                fullWidth\n                inputProps={{\n                  readOnly: true,\n                }}\n              />\n              <Controls.InputEmployee\n                name=\"request.employee\"\n                label=\"Colaborador\"\n                labelWithId={false}\n                helperText=\"Digite o nome do colaborador\"\n                getOptions={EmployeeService.getEmployeeByNameCollection}\n                setLabelOption={EmployeeService.setEmployeeNameOption}\n                setLabelHintOptions={EmployeeService.setEmployeeHintNameOptions}\n              />\n            </Grid>\n            <Grid item xs={4}>\n              <Controls.InputText\n                name=\"request.request_date\"\n                label=\"Data da solicitação\"\n                fullWidth={false}\n                inputProps={{\n                  readOnly: true,\n                }}\n              />\n\n              <Controls.InputSelect\n                name=\"request.employee_type\"\n                label=\"Tipo\"\n                getOptions={EmployeeService.getEmployeeTypeCollection}\n                labelWithId={false}\n                editMode={canEditEmployeeFields()}\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item xs={6}>\n              <Controls.InputSelect\n                name=\"request.employee_role\"\n                label=\"Cargo\"\n                labelWithId\n                getOptions={EmployeeService.getRoleCollection}\n                editMode={canEditEmployeeFields()}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <Controls.InputSelect\n                name=\"request.employee_costcenter\"\n                label=\"Centro de Custo\"\n                labelWithId\n                getOptions={EmployeeService.getCostCenterCollection}\n                editMode={canEditEmployeeFields()}\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item xs={6}>\n              <Controls.InputSelect\n                name=\"request.employee_manager\"\n                label=\"Gestor\"\n                labelWithId={false}\n                getOptions={EmployeeService.getManagerCollection}\n                editMode={canEditManagerField()}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item xs={6}>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n              <Controls.InputText\n                name=\"request.request_number\"\n                label=\"Número\"\n                fullWidth={false}\n                inputProps={{\n                  readOnly: true,\n                }}\n              />\n\n              <Controls.InputText\n                name=\"request.request_status\"\n                label=\"Status\"\n                fullWidth={false}\n                inputProps={{\n                  readOnly: true,\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item xs={6}>\n              <Controls.InputEmployee\n                name=\"request.employee\"\n                label=\"Email\"\n                getOptions={EmployeeService.getEmployeeByNameCollection}\n                labelWithId={false}\n                helperText=\"Digite um email\"\n                setLabelOption={EmployeeService.setEmployeeEmailOption}\n                setLabelHintOptions={\n                  EmployeeService.setEmployeeHintEmailOptions\n                }\n              />\n            </Grid>\n            <Grid item xs={4}>\n              <Controls.InputSelect\n                name=\"request.employee_plataform\"\n                label=\"Plataforma\"\n                labelWithId={false}\n                getOptions={EmployeeService.getPlataformCollection}\n                editMode={canEditEmployeeFields()}\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item xs={4}>\n              <Controls.InputSelect\n                name=\"request.employee_company\"\n                label=\"Empresa\"\n                labelWithId\n                getOptions={EmployeeService.getCompanyOnlyCollection}\n                onChangeCleanFieldName=\"employee_branch\"\n                editMode={canEditEmployeeFields()}\n              />\n            </Grid>\n            <Grid item xs={7}>\n              <Controls.InputSelect\n                name=\"request.employee_branch\"\n                label=\"Filial\"\n                labelWithId\n                getOptions={EmployeeService.getCompanyBranchCollection}\n                optionsPrimaryKey={\n                  request.employee_company\n                    ? request.employee_company.id\n                    : undefined\n                }\n                editMode={canEditEmployeeFields()}\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item xs={11}>\n              <Controls.InputText\n                name=\"request.request_observation\"\n                label=\"Observação\"\n                multiline\n                maxRows={4}\n                fullWidth\n                inputProps={{\n                  readOnly: false,\n                }}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport * as Yup from \"yup\";\n\nimport { IEmployee, IRequestSAP, IRequestAS400 } from \"./Interface\";\n\nconst select_object = Yup.object()\n  .shape({\n    id: Yup.string().default(\"\").ensure(),\n    description: Yup.string().default(\"\").ensure(),\n  })\n  .default({ id: \"\", description: \"\" });\n\nconst test_select_object = (name: string, msg: string) => {\n  return select_object.test(name, msg, (val: any) => {\n    return val ? !!val.id : false;\n  });\n};\n\nconst default_object_shape = Yup.object()\n  .shape({\n    id: Yup.string().default(\"\"),\n    description: Yup.string().default(\"\"),\n  })\n  .default({ id: \"\", description: \"\" });\n\nexport const INITIAL_EMPLOYEE_FORM_STATE = {\n  id: \"0\",\n  request_by: \"Darcio Santos\",\n  request_status: \"Rascunho\",\n  request_date: new Date(),\n  request_number: \"--\",\n  request_opentab: 0,\n  request_observation: \"\",\n  is_contingency: false,\n  employee_profile_edition_rule: \"ALL\",\n  employee_role: { id: \"\", description: \"\" },\n  employee_plataform: { id: \"\", description: \"\" },\n  employee_costcenter: { id: \"\", description: \"\" },\n  request_category: { id: \"\", description: \"\" },\n  employee_type: { id: \"\", description: \"\" },\n  employee_manager: { id: \"\", description: \"\" },\n  employee_company: { id: \"\", description: \"\" },\n  employee_branch: { id: \"\", description: \"\" },\n  employee: {\n    id: \"\",\n    description: \"\",\n    email: \"\",\n  },\n  updateEmployee: false,\n  has_sap_job_positions: false,\n  employee_sap_job_positions: [],\n  employee_userid_login: \"\",\n  employee_userid_as400: { id: \"\", description: \"\" },\n  employee_userid_sap: \"\",\n  employee_userid_sap_status: \"\",\n  employee_userid_sap_expiration_date: \"\",\n};\n\nexport const INITIAL_SAP_FORM_STATE = {\n  request: INITIAL_EMPLOYEE_FORM_STATE,\n  sap: {\n    environment: { id: \"ECC\", description: \"ECC-Produção\" },\n    service_type: { id: \"\", description: \"\" },\n    user_type: { id: \"\", description: \"\" },\n    user_id: { id: \"\", description: \"\" },\n    user_licence: \"\",\n    is_job_position: false,\n    job_position: { id: \"\", description: \"\" },\n    is_temporary: { id: \"\", description: \"\" },\n    profile_type: { id: \"\", description: \"\" },\n    profile_start_date: \"\",\n    profile_end_date: \"\",\n    profiles: [],\n    profiles_table: [],\n  },\n};\n\nexport const INITIAL_AS400_FORM_STATE = {\n  request: INITIAL_EMPLOYEE_FORM_STATE,\n  as400: {\n    environment: { id: \"BRCOISP1\", description: \"Produção\" },\n    service_type: {\n      id: \"\",\n      description: \"\",\n    },\n    user_type: { id: \"N\", description: \"Não\" },\n    user_licence: \"\",\n    user_id: { id: \"\", description: \"\" },\n    user_id_source: { id: \"\", description: \"\" },\n    is_job_position: { id: \"N\", description: \"Não\" },\n    job_position: { id: \"\", description: \"\" },\n    system: { id: \"\", description: \"\" },\n    routines: [],\n    company: { id: \"\", description: \"\" },\n    branch: { id: \"\", description: \"\" },\n    region: { id: \"\", description: \"\" },\n    access: { inc: true, exc: true, alt: true, con: true },\n    table: [],\n  },\n};\n\nexport const EMPLOYEE_VALIDATION: Yup.SchemaOf<IEmployee> = Yup.object().shape({\n  id: Yup.string().required(\"Campo obrigatório\"),\n  request_by: Yup.string().default(\"\").optional(),\n  request_status: Yup.string().default(\"\").optional(),\n  request_date: Yup.date().optional(),\n  request_number: Yup.string().required(),\n  request_opentab: Yup.number().required(),\n  request_observation: Yup.string().default(\"\").optional(),\n  request_category: Yup.object()\n    .shape({\n      id: Yup.string(),\n      description: Yup.string(),\n    })\n    .nullable()\n    .optional(),\n  is_contingency: Yup.boolean().required(\"\"),\n  employee_profile_edition_rule: Yup.string().required(\"\"),\n  employee_role: Yup.object()\n    .shape({\n      id: Yup.string(),\n      description: Yup.string(),\n    })\n    .nullable()\n    .test(\"employee_role\", \"Selecione um cargo\", (val: any) => !!val?.id),\n  employee_plataform: Yup.object()\n    .shape({\n      id: Yup.string(),\n      description: Yup.string(),\n    })\n    .nullable()\n    .test(\n      \"employee_plataform\",\n      \"Selecione uma plataforma\",\n      (val: any) => !!val?.id\n    ),\n  employee_costcenter: Yup.object()\n    .shape({\n      id: Yup.string(),\n      description: Yup.string(),\n    })\n    .nullable()\n    .test(\n      \"employee_costcenter\",\n      \"Selecione um centro de custo\",\n      (val: any) => !!val?.id\n    ),\n\n  employee_type: Yup.object()\n    .shape({\n      id: Yup.string(),\n      description: Yup.string(),\n    })\n    .nullable()\n    .test(\n      \"employee_type\",\n      \"Selecione um tipo de colaborador\",\n      (val: any) => !!val?.id\n    ),\n  employee_manager: Yup.object()\n    .shape({\n      id: Yup.string(),\n      description: Yup.string(),\n    })\n    .nullable()\n    .test(\"manager\", \"Please select a manager\", (val: any) => !!val?.id),\n\n  employee_company: Yup.object()\n    .shape({\n      id: Yup.string(),\n      description: Yup.string(),\n    })\n    .nullable()\n    .test(\"employee_company\", \"Selecione uma empresa\", (val: any) => !!val?.id),\n  employee_branch: Yup.object()\n    .shape({\n      id: Yup.string(),\n      description: Yup.string(),\n    })\n    .nullable()\n    .test(\"employee_branch\", \"Selecione uma filial\", (val: any) => !!val?.id),\n  employee: Yup.object()\n    .shape({\n      id: Yup.string(),\n      description: Yup.string(),\n      email: Yup.string(),\n    })\n    .nullable()\n    .test(\"employee\", \"Selecione um colaborador\", (val: any) => !!val?.id),\n  updateEmployee: Yup.boolean(),\n  // eslint-disable-next-line react/forbid-prop-types\n  has_sap_job_positions: Yup.boolean().default(false),\n  employee_sap_job_positions: Yup.array().optional().nullable(),\n  employee_userid_login: Yup.string().optional().nullable(),\n  employee_userid_sap: Yup.string().default(\"\").optional(),\n  employee_userid_sap_status: Yup.string().default(\"\").optional(),\n  employee_userid_sap_expiration_date: Yup.string().default(\"\").optional(),\n\n  employee_userid_as400: Yup.object()\n    .shape({\n      id: Yup.string(),\n      description: Yup.string(),\n    })\n    .nullable()\n    .optional(),\n});\n\nexport const SAP_VALIDATION: Yup.SchemaOf<IRequestSAP> = Yup.object().shape({\n  environment: test_select_object(\n    \"environment\",\n    \"Please select a SAP environment\"\n  ).nullable(),\n  service_type: test_select_object(\n    \"service_type\",\n    \"Please select a service type\"\n  ).nullable(),\n  user_type: test_select_object(\n    \"user_type\",\n    \"Please select a user type\"\n  ).nullable(),\n  user_id: test_select_object(\"user_id\", \"Please select a user id\").nullable(),\n  user_licence: Yup.string()\n    .default(\"\")\n    .when([\"environment\", \"user_type\"], (environment, user_type) => {\n      if (environment?.id === \"ECC\" && user_type.id === \"S\")\n        return Yup.string()\n          .required(\"Camo obrigatório\")\n          .test(\"user_licencse\", \"digite uma licença\", (val: any) => {\n            return val !== \"\";\n          });\n      return Yup.string().optional();\n    }),\n  is_job_position: Yup.boolean().default(false).optional(),\n  profile_type: test_select_object(\"profile_type\", \"Defina o tipo de perfil\"),\n  job_position: default_object_shape.when(\n    \"profile_type\",\n    (profile_type: any) => {\n      if (profile_type.id !== \"1\") {\n        return default_object_shape.test(\n          \"usertype\",\n          \"Please select the jobposition type\",\n          (val: any) => {\n            return val ? !!val.id : false;\n          }\n        );\n      }\n      return default_object_shape.optional();\n    }\n  ),\n  is_temporary: test_select_object(\n    \"is_temporary\",\n    \"Campo Obrigatório\"\n  ).nullable(),\n\n  profile_start_date: Yup.string()\n    .default(\"\")\n    .when(\n      [\"service_type\", \"is_temporary\"],\n      (service_type: any, is_temporary: any) => {\n        if (is_temporary?.id === \"S\" && service_type.id === \"24\") {\n          console.log(\"testando\");\n          return Yup.string().test(\n            \"profile_start_date\",\n            \"Please select the initial date\",\n            (val: any) => {\n              console.log(val);\n              if (val) return val !== \"\";\n              return false;\n            }\n          );\n        }\n        return Yup.string().optional();\n      }\n    ),\n\n  profile_end_date: Yup.mixed().when(\n    [\"service_type\", \"is_temporary\"],\n    (service_type: any, is_temporary: any) => {\n      if (is_temporary?.id === \"S\" && service_type.id === \"24\") {\n        return Yup.string().test(\n          \"profile_start_date\",\n          \"Please select the initial date\",\n          (val: any) => {\n            console.log(val);\n            if (val) return val !== \"\";\n            return false;\n          }\n        );\n      }\n      return Yup.string().optional();\n    }\n  ),\n  profiles: Yup.array().notRequired(),\n  profiles_table: Yup.array().notRequired(),\n});\n\nexport const AS400_VALIDATION: Yup.SchemaOf<IRequestAS400> = Yup.object().shape(\n  {\n    environment: test_select_object(\n      \"environment\",\n      \"Campo obrigatório\"\n    ).nullable(),\n    service_type: test_select_object(\n      \"service_type\",\n      \"Campo Obrigatório\"\n    ).nullable(),\n    user_type: test_select_object(\"user_type\", \"Campo Obrigatório\").nullable(),\n    user_id: test_select_object(\"user_id\", \"Campo Obrigatório\").nullable(),\n    user_licence: Yup.string().default(\"\").optional(),\n    user_id_source: default_object_shape.when(\n      \"service_type\",\n      (service_type: any) => {\n        if (service_type?.id === \"193\") {\n          console.log(\"Validando\");\n          return test_select_object(\n            \"user_id_source\",\n            \"Selecione um usuário base\"\n          );\n        }\n        return default_object_shape.optional();\n      }\n    ),\n    is_job_position: test_select_object(\n      \"is_job_position\",\n      \"Campo obrigatório\"\n    ).nullable(),\n    job_position: default_object_shape.when(\n      \"is_job_position\",\n      (is_job_position: any) => {\n        if (is_job_position.id === \"S\") {\n          return default_object_shape.test(\n            \"usertype\",\n            \"Selecione um perfil\",\n            (val: any) => {\n              return val ? !!val.id : false;\n            }\n          );\n        }\n        return default_object_shape.optional();\n      }\n    ),\n    system: default_object_shape.required(),\n    routines: Yup.array().default([]).notRequired(),\n    company: default_object_shape.optional(),\n    branch: default_object_shape.optional(),\n    region: default_object_shape.optional(),\n    access: default_object_shape.optional(),\n    table: Yup.array(\n      Yup.object({\n        id: Yup.number().default(0).optional(),\n        service_type: Yup.string().default(\"\").optional(),\n        environment: Yup.string().default(\"\").optional(),\n        user_id: Yup.string().default(\"\").optional(),\n        system: Yup.string().default(\"\").optional(),\n        routine: Yup.string().default(\"\").optional(),\n        security_type: Yup.string().default(\"\").optional(),\n        security_company: Yup.string().default(\"\").optional(),\n        security_branchs: Yup.array().default([]).optional(),\n        security_regions: Yup.array().default([]).optional(),\n        security_text: Yup.string().default(\"\").optional(),\n        job_position: default_object_shape.optional(),\n        access: Yup.string().default(\"\").optional(),\n        inc: Yup.boolean().default(false).optional(),\n        exc: Yup.boolean().default(false).optional(),\n        alt: Yup.boolean().default(false).optional(),\n        con: Yup.boolean().default(false).optional(),\n      })\n    )\n      .default([])\n      .when(\"service_type\", (service_type: any) => {\n        if (service_type?.id === \"06\" || service_type?.id === \"20\") {\n          return Yup.array().min(1, \"Indique ao menos uma transação\");\n        }\n        return Yup.array().optional();\n      }),\n  }\n);\n\nexport const EMPLOYEE_FORM_VALIDATION = Yup.object().shape({\n  request: EMPLOYEE_VALIDATION,\n});\n\nexport const SAP_FORM_VALIDATION = Yup.object().shape({\n  sap: SAP_VALIDATION,\n});\n\nexport const AS400_FORM_VALIDATION = Yup.object().shape({\n  as400: AS400_VALIDATION,\n});\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable react/jsx-props-no-spreading */\nimport Box from \"@mui/material/Box\";\nimport * as React from \"react\";\n\nimport {\n  FormikStep,\n  FormikStepper,\n} from \"../../../components/controlsformik/Form/FormikStepper\";\nimport AS400RequestForm from \"../components/AS400/AS400RequestForm\";\nimport AS400SubmitForm from \"../components/AS400/AS400SubmitForm\";\nimport EmployeeForm from \"../components/Employee/EmployeeForm\";\nimport {\n  EMPLOYEE_FORM_VALIDATION,\n  AS400_FORM_VALIDATION,\n  INITIAL_AS400_FORM_STATE,\n} from \"../components/ValidationSchemas\";\n\nconst sleep = (time: number) => new Promise((acc) => setTimeout(acc, time));\n\nexport function NewAS400RequestForm(): JSX.Element {\n  return (\n    <Box\n      sx={{\n        marginTop: \"4px\",\n        \"& .MuiTextField-root\": { m: 1, minWidth: \"30px\" },\n        \"& .MuiInputBase-root\": { m: 1, minWidth: \"30px\" },\n        \"& .MuiDataGrid-root\": { m: 1, minWidth: \"30px\" },\n      }}\n    >\n      <FormikStepper\n        initialValues={{ ...INITIAL_AS400_FORM_STATE }}\n        onSubmit={async (values, actions) => {\n          try {\n            await sleep(3000);\n            console.log(\"values\", values.data);\n            // POST request using fetch with async/await\n            const requestOptions = {\n              method: \"POST\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify(values.data),\n            };\n            const response = await fetch(\n              `${process.env.REACT_APP_API_SAS_URL}/requests/as400`,\n              requestOptions\n            );\n            const data = await response.json();\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              actions.setStatus({ isError: true, error });\n            } else actions.setStatus({ isError: false, data });\n            actions.setSubmitting(false);\n            console.log(data);\n          } catch (error) {\n            console.log(error);\n          }\n        }}\n      >\n        <FormikStep\n          label=\"dados do colaborador\"\n          validationSchema={EMPLOYEE_FORM_VALIDATION}\n        >\n          <EmployeeForm />\n        </FormikStep>\n        <FormikStep\n          label=\"serviço AS400\"\n          validationSchema={AS400_FORM_VALIDATION}\n        >\n          <AS400RequestForm />\n        </FormikStep>\n        <FormikStep label=\"Fim\">\n          <AS400SubmitForm />\n        </FormikStep>\n      </FormikStepper>\n    </Box>\n  );\n}\n","import DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Button } from \"@mui/material\";\nimport { DataGrid, GridCellParams, GridColDef } from \"@mui/x-data-grid\";\nimport * as React from \"react\";\n\ninterface IProps {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  rows: any;\n  removeProfile: (id: number) => void;\n}\n\nconst columns: GridColDef[] = [\n  { field: \"id\", headerName: \"ID\", width: 30 },\n  {\n    field: \"environment\",\n    headerName: \"Ambiente\",\n    width: 90,\n  },\n  { field: \"service_id\", headerName: \"Tipo Serviço\", width: 130 },\n  { field: \"user_id\", headerName: \"User ID\", width: 130 },\n\n  {\n    field: \"profile_type\",\n    headerName: \"Tipo Perfil\",\n    width: 90,\n  },\n  {\n    field: \"is_temporary\",\n    headerName: \"Temporário\",\n    sortable: true,\n    width: 30,\n  },\n\n  {\n    field: \"profile\",\n    headerName: \"Perfil\",\n    sortable: true,\n    width: 400,\n  },\n  {\n    field: \"profile_description\",\n    headerName: \"Descrição\",\n    sortable: true,\n    width: 400,\n  },\n  {\n    field: \"removeprofileaction\",\n    headerName: \"\",\n    renderCell: () => {\n      return (\n        <Button variant=\"contained\" color=\"error\" startIcon={<DeleteIcon />} />\n      );\n    },\n  },\n];\n\nexport default function DataTable({\n  rows,\n  removeProfile,\n}: IProps): JSX.Element {\n  const currentlySelected = (params: GridCellParams) => {\n    const value = params.colDef.field;\n    if (value === \"removeprofileaction\") {\n      const id = params.getValue(params.id, \"id\");\n      if (id) {\n        removeProfile(parseInt(id.toString(), 10));\n      }\n    }\n    return \"\";\n  };\n\n  return (\n    <div style={{ height: 400, width: \"100%\" }}>\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        pageSize={100}\n        rowsPerPageOptions={[5, 10, 30]}\n        checkboxSelection={false}\n        onCellClick={currentlySelected}\n      />\n    </div>\n  );\n}\n","import Grid from \"@mui/material/Grid\";\nimport { useFormikContext } from \"formik\";\nimport React from \"react\";\n\nimport Controls from \"../../../../components/controlsformik/FormikControls\";\nimport {\n  sapService,\n  EServiceIds as ServiceId,\n} from \"../../../../services/sap.service\";\nimport { ISelectData, IRequestEmployee } from \"../Interface\";\nimport SAPRequestTable from \"./SAPRequestTable\";\n\nexport default function SAPRequestForm(): JSX.Element {\n  const JOB_POSITION = \"2\";\n  const { values, setFieldValue, isValid } =\n    useFormikContext<IRequestEmployee>();\n\n  const { request, sap } = values;\n\n  const handleInputSAPRemoveProfile = (id: number) => {\n    if (values?.sap?.profiles_table) {\n      const profiles_table = [...values?.sap?.profiles_table];\n      const profileToRemove = profiles_table.find((value) => value.id === id);\n\n      const new_profiles_table = profiles_table.filter(\n        (value) => value.id !== id\n      );\n\n      new_profiles_table.map((value, index) => {\n        // eslint-disable-next-line no-param-reassign\n        value.id = index + 1;\n        return value;\n      });\n\n      setFieldValue(\"sap.profiles_table\", new_profiles_table);\n\n      // updating the profiles field\n      if (values.sap.profiles && profileToRemove) {\n        const profiles = [...values.sap.profiles];\n\n        const new_profiles = profiles.filter(\n          (value) => value.id !== profileToRemove.profile\n        );\n        setFieldValue(\"sap.profiles\", new_profiles);\n      }\n    }\n  };\n\n  const handleInputSAPAddProfile = (profiles: ISelectData[]) => {\n    const addprofiles = profiles.map((profile) => {\n      const item = {\n        // eslint-disable-next-line no-plusplus\n        id: 0,\n        environment: values?.sap?.environment?.id,\n        service_id: values?.sap?.service_type?.id,\n        service_description: values?.sap?.service_type?.description,\n        user_id: values?.sap?.user_id?.id,\n        profile: profile.id,\n        profile_description: profile.description,\n        profile_type: values?.sap?.profile_type?.description,\n        job_position:\n          values?.sap?.profile_type?.id === \"2\"\n            ? \"\"\n            : values?.sap?.job_position?.id,\n        is_temporary: values?.sap?.is_temporary?.id === \"S\",\n\n        profile_start_date:\n          values.sap?.is_temporary?.id === \"S\"\n            ? values?.sap?.profile_start_date\n            : \"\",\n        profile_end_date:\n          values.sap?.is_temporary?.id === \"S\"\n            ? values?.sap?.profile_end_date\n            : \"\",\n      };\n      return item;\n    });\n\n    const profiles_table = values?.sap?.profiles_table\n      ? [...values.sap.profiles_table, ...addprofiles]\n      : [...addprofiles];\n\n    const uniqueData = Array.from(\n      profiles_table\n        .reduce((map, obj) => map.set(obj.profile, obj), new Map())\n        .values()\n    );\n    const fixId = uniqueData.map((value, index) => {\n      // eslint-disable-next-line no-param-reassign\n      value.id = index + 1;\n      return value;\n    });\n\n    setFieldValue(\"sap.profiles_table\", fixId);\n  };\n\n  React.useEffect(() => {\n    if (!request.updateEmployee) {\n      // update the user only if finished to update employee data.\n      // avoiding circular refreshing\n      const usersap = request.employee_userid_sap;\n      const user_type = { id: \"\", description: \"\" };\n      const service_type = { id: \"\", description: \"\" };\n      const user_id = { id: \"\", description: \"\" };\n      if (sap?.environment?.id === \"ECC\") {\n        console.log(\"environement = ECC\");\n\n        if (!request.employee?.id || !usersap) {\n          user_type.id = \"S\";\n          user_type.description = \"Novo Usuário\";\n          service_type.id = \"\";\n          service_type.description = \"\";\n          user_id.id = \"NovoUsuario\";\n          user_id.description = \"Novo Usuário\";\n        } else {\n          user_id.id = request.employee_userid_sap || \"\";\n          user_id.description = request.employee.description || \"\";\n          user_type.id =\n            request.employee_userid_sap_status === \"Ativo\" ? \"N\" : \"D\";\n          user_type.description =\n            request.employee_userid_sap_status === \"Ativo\"\n              ? \"Existente\"\n              : \"Desbloqueio\";\n        }\n      } else {\n        user_type.id = \"\";\n        user_type.description = \"\";\n        user_id.id = request.employee_userid_sap || \"\";\n        user_id.description = request.employee.description || \"\";\n      }\n\n      setFieldValue(\"sap.user_type\", user_type);\n      setFieldValue(\"sap.service_type\", service_type);\n      setFieldValue(\"sap.user_id\", user_id);\n      setFieldValue(\"sap.profile_type\", { id: \"1\", description: \"Outros\" });\n      setFieldValue(\"sap.is_temporary\", { id: \"N\", description: \"Não\" });\n      setFieldValue(\"sap.profiles\", []);\n      setFieldValue(\"sap.profiles_table\", []);\n    }\n  }, [sap?.environment, request.updateEmployee]);\n\n  React.useEffect(() => {\n    if (sap?.environment?.id !== \"ECC\") {\n      const user_id = { id: \"\", description: \"\" };\n      if (sap?.user_type?.id === \"S\") {\n        user_id.description = \"Novo Usuário\";\n        user_id.id = \"NovoUsuario\";\n      } else {\n        user_id.id = request.employee_userid_sap || \"\";\n        user_id.description = request.employee.description || \"\";\n      }\n      setFieldValue(\"sap.user_id\", user_id);\n      setFieldValue(\"sap.profiles\", []);\n      setFieldValue(\"sap.profiles_table\", []);\n    }\n  }, [sap?.user_type]);\n\n  React.useEffect(() => {\n    setFieldValue(\"sap.profiles\", []);\n  }, [sap?.service_type]);\n\n  return (\n    <>\n      <Grid container justifyContent=\"space-between\" spacing={2}>\n        <Grid item xs={6}>\n          <Grid container spacing={1}>\n            <Grid item xs={4}>\n              <Controls.InputSelect\n                name=\"sap.environment\"\n                label=\"Ambiente SAP\"\n                labelWithId={false}\n                getOptions={sapService.getSAPEnvironmentCollection}\n                editMode\n              />\n            </Grid>\n            <Grid item xs={8}>\n              <Controls.InputSelect\n                name=\"sap.service_type\"\n                label=\"Tipo Serviço\"\n                labelWithId\n                getOptions={sapService.getSAPServiceTypeCollection}\n                optionsPrimaryKey={\n                  sap &&\n                  sap.environment &&\n                  sap.user_type &&\n                  sap.environment.id === \"ECC\"\n                    ? sap.user_type.id\n                    : \"\"\n                }\n                editMode\n              />\n            </Grid>\n          </Grid>\n          {sap?.service_type && sap.service_type.id === ServiceId.AddProfile && (\n            <>\n              <Grid container spacing={1}>\n                <Grid item xs={3}>\n                  <Controls.InputSelect\n                    name=\"sap.profile_type\"\n                    label=\"Tipo Perfil\"\n                    labelWithId={false}\n                    getOptions={sapService.getSAPProfileTypeCollection}\n                    editMode={request.has_sap_job_positions}\n                  />\n                </Grid>\n                {sap?.profile_type && sap.profile_type.id === JOB_POSITION && (\n                  <Grid item xs={4}>\n                    <Controls.InputSelect\n                      name=\"sap.job_position\"\n                      label=\"Job Position\"\n                      labelWithId={false}\n                      defaultOptions={undefined}\n                      editMode\n                    />\n                  </Grid>\n                )}\n                {sap?.profile_type && sap?.profile_type?.id !== JOB_POSITION && (\n                  <>\n                    <Grid item xs={2}>\n                      <Controls.InputSelect\n                        name=\"sap.is_temporary\"\n                        label=\"Temporário\"\n                        labelWithId={false}\n                        getOptions={sapService.getSAPTemporyFieldCollection}\n                        editMode\n                      />\n                    </Grid>\n                  </>\n                )}\n                {sap?.profile_type &&\n                  sap.is_temporary &&\n                  sap.profile_type.id !== JOB_POSITION &&\n                  sap.is_temporary.id === \"S\" && (\n                    <>\n                      <Grid item xs={3}>\n                        <Controls.InputDatePicker\n                          label=\"De\"\n                          name=\"sap.profile_start_date\"\n                        />\n                      </Grid>\n                      <Grid item xs={2}>\n                        <Controls.InputDatePicker\n                          label=\"Até\"\n                          name=\"sap.profile_end_date\"\n                        />\n                      </Grid>\n                    </>\n                  )}\n              </Grid>\n            </>\n          )}\n\n          {sap?.profile_type &&\n            sap?.service_type &&\n            sap.profile_type.id !== \"2\" &&\n            (sap.service_type.id === ServiceId.AddProfile ||\n              sap.service_type.id === ServiceId.ExcludeProfile) &&\n            isValid && (\n              <Grid container spacing={1}>\n                <Grid item xs={12}>\n                  <Controls.InputSAPProfiles\n                    name=\"sap.profiles\"\n                    label=\"Perfil\"\n                    placeHolder=\"Digite a descrição ou código de um perfil\"\n                    parentValue={sap?.environment?.id || \"\"}\n                    editMode\n                    addToTable\n                    handleProfileChange={handleInputSAPAddProfile}\n                    disabledOptions={\n                      sap.profiles_table\n                        ? sap.profiles_table?.map((profile) => {\n                            const obj = {\n                              id: profile.profile,\n                              description: profile.profile_description,\n                              email: \"\",\n                            };\n                            return obj;\n                          })\n                        : []\n                    }\n                  />\n                </Grid>\n              </Grid>\n            )}\n        </Grid>\n\n        <Grid item xs={6}>\n          <Grid container spacing={1}>\n            <Grid item xs={3}>\n              <Controls.InputSelect\n                name=\"sap.user_type\"\n                label=\"Usuario\"\n                labelWithId={false}\n                getOptions={sapService.getSAPUserTypeCollection}\n                optionsPrimaryKey={sap?.service_type?.id}\n                editMode={sap?.environment?.id !== \"ECC\"}\n              />\n            </Grid>\n            <Grid item xs={8}>\n              <Controls.InputSelect\n                name=\"sap.user_id\"\n                label=\"User ID\"\n                labelWithId\n                getOptions={sapService.getSAPUserIdCollection}\n                optionsPrimaryKey={sap?.environment?.id}\n                editMode={\n                  sap?.environment?.id !== \"ECC\" && sap?.user_type?.id !== \"S\"\n                }\n              />\n            </Grid>\n          </Grid>\n          {sap?.environment?.id === \"ECC\" && sap?.user_type?.id === \"S\" && (\n            <>\n              <Grid container spacing={1}>\n                <Grid item xs={6}>\n                  <Controls.InputText\n                    name=\"sap.user_licence\"\n                    label=\"Reutilizar licença\"\n                    fullWidth\n                    inputProps={{\n                      readOnly: false,\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </>\n          )}\n        </Grid>\n        {(sap?.service_type?.id === ServiceId.AddProfile ||\n          sap?.service_type?.id === ServiceId.ExcludeProfile) && (\n          <>\n            <Grid item xs={12}>\n              <Grid container spacing={1}>\n                <Grid item xs={12}>\n                  <SAPRequestTable\n                    rows={sap?.profiles_table}\n                    removeProfile={handleInputSAPRemoveProfile}\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </>\n        )}\n      </Grid>\n    </>\n  );\n}\n\n/*\n      <Button\n        variant=\"contained\"\n        onClick={() => {\n          console.log(values);\n          console.log(errors);\n        }}\n      >\n        show values\n      </Button> */\n","/* eslint-disable react/jsx-props-no-spreading */\nimport MuiAlert, { AlertProps } from \"@mui/material/Alert\";\nimport Stack from \"@mui/material/Stack\";\nimport { useFormikContext } from \"formik\";\nimport React from \"react\";\n\nimport { EServiceIds } from \"../../../../services/sap.service\";\nimport { IRequestEmployee } from \"../Interface\";\n\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\n  props,\n  ref\n) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\ninterface ICreateSASRequestDTO {\n  requested_by_id: string;\n  requested_by_name: string;\n  requested_by_email: string;\n  request_number: string;\n  request_status: number;\n  request_type: string;\n  request_observation: string;\n  request_copy_list: string;\n  employee_id: string;\n  employee_fullname: string;\n  employee_email: string;\n  employee_type: string;\n  employee_type_description: string;\n  employee_profile_edition_rule: string;\n  employee_role_id: string;\n  employee_role_description: string;\n  employee_plataform_id: string;\n  employee_plataform_description: string;\n  employee_costcenter_id: string;\n  employee_costcenter_description: string;\n  employee_company_id: string;\n  employee_company_description: string;\n  employee_branch_id: string;\n  employee_branch_description: string;\n  employe_manager_id: string;\n  employee_manager_name: string;\n  employee_login: string;\n  employee_sap_id: string;\n  employee_userid_sap_status: string;\n  employee_userid_sap_expiration_date: string;\n  employee_as400_id: string;\n  employee_userid_as400_description: string;\n  updateEmployee: boolean;\n}\n\ninterface ISAPUserRequest {\n  service_id: string;\n  service_description: string;\n  environment: string;\n  is_new_user: boolean;\n  user_id: string;\n  reused_user_id_license: string;\n  observation: string;\n}\n\nexport default function SAPSubmitForm(): JSX.Element {\n  const setRequestType = () => {\n    return \"SAP\";\n  };\n\n  const { values, setFieldValue, status } =\n    useFormikContext<IRequestEmployee>();\n\n  const { request, sap } = values;\n  const createJson = () => {\n    const employee: ICreateSASRequestDTO = {\n      requested_by_id: request.request_by ? request.request_by : \"\",\n      requested_by_name: request.request_by ? request.request_by : \"\",\n      requested_by_email: request.request_by ? request.request_by : \"\",\n      request_number: \"\",\n      request_status: -1,\n      request_type: setRequestType(),\n      request_observation: request.request_observation,\n      request_copy_list: \"falta\",\n      employee_id: request.employee.id,\n      employee_fullname: request.employee.description,\n      employee_email: request.employee.email ? request.employee.email : \"\",\n      employee_type: request.employee_type ? request.employee_type.id : \"\",\n      employee_type_description: request.employee_type\n        ? request.employee_type.description\n        : \"\",\n      employee_profile_edition_rule: request.employee_profile_edition_rule,\n      employee_role_id: request.employee_role ? request.employee_role.id : \"\",\n      employee_role_description: request.employee_role\n        ? request.employee_role.description\n        : \"\",\n      employee_plataform_id: request.employee_plataform\n        ? request.employee_plataform.id\n        : \"\",\n      employee_plataform_description: request.employee_plataform\n        ? request.employee_plataform.description\n        : \"\",\n      employee_costcenter_id: request.employee_costcenter\n        ? request.employee_costcenter.id\n        : \"\",\n      employee_costcenter_description: request.employee_costcenter\n        ? request.employee_costcenter.description\n        : \"\",\n      employee_company_id: request.employee_company\n        ? request.employee_company.id\n        : \"\",\n      employee_company_description: request.employee_company\n        ? request.employee_company.description\n        : \"\",\n      employee_branch_id: request.employee_branch\n        ? request.employee_branch.id\n        : \"\",\n      employee_branch_description: request.employee_branch\n        ? request.employee_branch.description\n        : \"\",\n      employe_manager_id: request.employee_manager\n        ? request.employee_manager.id\n        : \"\",\n      employee_manager_name: request.employee_manager\n        ? request.employee_manager.description\n        : \"\",\n      employee_login: request.employee_userid_login\n        ? request.employee_userid_login\n        : \"\",\n      employee_sap_id: request.employee_userid_sap\n        ? request.employee_userid_sap\n        : \"\",\n      employee_userid_sap_status: request.employee_userid_sap_status\n        ? request.employee_userid_sap_status\n        : \"\",\n      employee_userid_sap_expiration_date: request.employee_userid_sap_status\n        ? request.employee_userid_sap_status\n        : \"\",\n      employee_as400_id: \"\",\n      employee_userid_as400_description: \"\",\n      updateEmployee: request.updateEmployee ? request.updateEmployee : false,\n    };\n\n    const user: ISAPUserRequest = {\n      service_id: \"\",\n      service_description: \"\",\n      environment: \"\",\n      is_new_user: false,\n      user_id: \"\",\n      reused_user_id_license: \"\",\n      observation: \"\",\n    };\n\n    if (sap.service_type.id === EServiceIds.BlockUser) {\n      user.service_id = EServiceIds.BlockUser;\n      user.service_description = \"Bloqueio de Usuário\";\n      user.environment = sap.environment.id;\n      user.is_new_user = false;\n      user.user_id = sap.user_id.id;\n      user.reused_user_id_license = sap.user_licence;\n      user.observation = \"\";\n      return {\n        employee,\n        user,\n      };\n    }\n    if (sap.user_type.id === \"S\") {\n      user.service_id = EServiceIds.CreateUser;\n      user.environment = sap.environment.id;\n      user.service_description = \"Criação de Usuário\";\n      user.is_new_user = true;\n      user.user_id = sap.user_id.id;\n      user.reused_user_id_license = sap.user_licence;\n      user.observation = \"\";\n    }\n    if (sap.user_type.id === \"D\") {\n      user.service_id = EServiceIds.UnBlockUser;\n      user.service_description = \"Desbloqueio de Usuário\";\n      user.environment = sap.environment.id;\n      user.is_new_user = false;\n      user.user_id = sap.user_id.id;\n      user.reused_user_id_license = sap.user_licence;\n      user.observation = \"\";\n    }\n\n    const profiles = sap.profiles_table?.map((row) => {\n      return {\n        service_id: row.service_id,\n        service_description: row.service_description,\n        environment: row.environment,\n        is_new_user: user.is_new_user,\n        user_id: row.user_id,\n        is_job_postion: row.job_position !== \"\",\n        job_position: row.job_position,\n        profile_name: row.profile,\n        profile_description: row.profile_description,\n        is_profile_temporary: row.is_temporary,\n        profile_valide_at: new Date(row.profile_start_date),\n        profile_expires_at: new Date(row.profile_end_date),\n        has_conflict: false,\n        restricted_access: false,\n      };\n    });\n\n    return user.service_id === \"\"\n      ? {\n          employee,\n          profiles,\n        }\n      : {\n          employee,\n          user,\n          profiles,\n        };\n  };\n\n  React.useEffect(() => {\n    const data = createJson();\n    setFieldValue(\"data\", data);\n  }, []);\n\n  return (\n    <Stack\n      spacing={2}\n      sx={{\n        width: \"100%\",\n        marginTop: \"120px\",\n        alignContent: \"center\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      {!status && (\n        <Alert severity=\"info\">\n          Clique em enviar para registrar sua solicitação\n        </Alert>\n      )}\n      {status && status?.isError && (\n        <Alert severity=\"error\">{status.error}</Alert>\n      )}\n      {status && !status?.isError && (\n        <Alert severity=\"success\">\n          Solicitação criada com sucesso: {status.data.request_number}\n        </Alert>\n      )}\n    </Stack>\n  );\n}\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable react/jsx-props-no-spreading */\nimport Box from \"@mui/material/Box\";\nimport * as React from \"react\";\n\nimport {\n  FormikStep,\n  FormikStepper,\n} from \"../../../components/controlsformik/Form/FormikStepper\";\nimport EmployeeForm from \"../components/Employee/EmployeeForm\";\nimport SAPRequestForm from \"../components/SAP/SAPRequestForm\";\nimport SAPSubmitForm from \"../components/SAP/SAPSubmitForm\";\nimport {\n  EMPLOYEE_FORM_VALIDATION,\n  SAP_FORM_VALIDATION,\n  INITIAL_SAP_FORM_STATE,\n} from \"../components/ValidationSchemas\";\n\nconst sleep = (time: number) => new Promise((acc) => setTimeout(acc, time));\n\nexport function NewSAPRequestForm(): JSX.Element {\n  return (\n    <Box\n      sx={{\n        marginTop: \"4px\",\n        \"& .MuiTextField-root\": { m: 1, minWidth: \"30px\" },\n        \"& .MuiInputBase-root\": { m: 1, minWidth: \"30px\" },\n        \"& .MuiDataGrid-root\": { m: 1, minWidth: \"30px\" },\n      }}\n    >\n      <FormikStepper\n        initialValues={{ ...INITIAL_SAP_FORM_STATE }}\n        onSubmit={async (values, actions) => {\n          try {\n            await sleep(3000);\n            console.log(\"values\", values.data);\n            // POST request using fetch with async/await\n            const requestOptions = {\n              method: \"POST\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify(values.data),\n            };\n            const response = await fetch(\n              `${process.env.REACT_APP_API_SAS_URL}/requests/sap`,\n              requestOptions\n            );\n            const data = await response.json();\n            // check for error response\n            if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              actions.setStatus({ isError: true, error });\n            } else actions.setStatus({ isError: false, data });\n            actions.setSubmitting(false);\n            console.log(data);\n          } catch (error) {\n            console.log(error);\n          }\n        }}\n      >\n        <FormikStep\n          label=\"dados do colaborador\"\n          validationSchema={EMPLOYEE_FORM_VALIDATION}\n        >\n          <EmployeeForm />\n        </FormikStep>\n        <FormikStep label=\"serviço SAP\" validationSchema={SAP_FORM_VALIDATION}>\n          <SAPRequestForm />\n        </FormikStep>\n        <FormikStep label=\"ZSOD\">Justificativa ZSOD</FormikStep>\n        <FormikStep label=\"Fim\">\n          <SAPSubmitForm />\n        </FormikStep>\n      </FormikStepper>\n    </Box>\n  );\n}\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from \"react\";\nimport { Route, Redirect, RouteProps } from \"react-router-dom\";\n\nimport { useAuth } from \"../hooks/useAuth\";\n\ninterface IPrivateRouteProps extends RouteProps {\n  // tslint:disable-next-line:no-any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  component: any;\n}\n\nconst PrivateRoute = (props: IPrivateRouteProps): JSX.Element => {\n  const { component: Component, location, ...rest } = props;\n  const { accountInfo } = useAuth();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        accountInfo?.isAuthenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/signin\",\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import {\n  ThemeProvider,\n  Theme,\n  StyledEngineProvider,\n  createTheme,\n} from \"@mui/material/styles\";\nimport React, { Fragment } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport Layout from \"./components/Layout/Layout\";\nimport { AuthProvider } from \"./contexts/auth\";\nimport { Home, Request, Requests } from \"./pages/index\";\nimport { NewAS400RequestForm } from \"./pages/RequestStepForm/AS400/NewAS400RequestForm\";\nimport { NewSAPRequestForm } from \"./pages/RequestStepForm/SAP/NewSAPRequestForm\";\nimport SignIn from \"./pages/SignIn\";\nimport PrivateRoute from \"./routes/PrivateRoute\";\n\ndeclare module \"@mui/styles/defaultTheme\" {\n  // eslint-disable-next-line @typescript-eslint/no-empty-interface\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  type DefaultTheme = Theme;\n}\n\nconst theme = createTheme({\n  palette: {\n    primary: { main: \"#31546d\", light: \"#5f809b\", dark: \"#002b42\" },\n    secondary: { main: \"#5c6670\", light: \"#89949e\", dark: \"#323c45\" },\n  },\n});\n\nexport default function Router(): JSX.Element {\n  return (\n    <StyledEngineProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <BrowserRouter>\n          <AuthProvider>\n            <>\n              <Switch>\n                <Layout>\n                  <Route path=\"/signin\" exact component={SignIn} />\n                  <PrivateRoute path=\"/\" exact component={Home} />\n                  <PrivateRoute path=\"/home\" exact component={Home} />\n                  <PrivateRoute path=\"/requests\" exact component={Requests} />\n                  <Route\n                    path=\"/sap/request\"\n                    exact\n                    component={NewSAPRequestForm}\n                  />\n                  <Route\n                    path=\"/as400/request\"\n                    exact\n                    component={NewAS400RequestForm}\n                  />\n                  <PrivateRoute path=\"/request/:id\" exact component={Request} />\n                  <PrivateRoute\n                    path=\"/requests/ordered/:orderby\"\n                    exact\n                    component={Requests}\n                  />\n                </Layout>\n              </Switch>\n            </>\n          </AuthProvider>\n        </BrowserRouter>\n      </ThemeProvider>\n    </StyledEngineProvider>\n  );\n}\n","import { CssBaseline } from \"@mui/material\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Router from \"./router\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <Router />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}